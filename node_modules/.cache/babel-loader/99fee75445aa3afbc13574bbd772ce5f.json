{"ast":null,"code":"import { PublicKey } from '@solana/web3.js';\nimport { GpaBuilder } from '../../../utils/GpaBuilder.mjs'; // TODO: copied from auction house SDK\n// SDK should either provide a GPA builder or expose this discriminator\n\nconst listingReceiptDiscriminator = [240, 71, 225, 94, 200, 75, 84, 231];\nconst PUBLIC_KEY_LENGTH = PublicKey.default.toBytes().byteLength;\nconst TRADE_STATE = listingReceiptDiscriminator.length;\nconst BOOKKEEPER = TRADE_STATE + PUBLIC_KEY_LENGTH;\nconst AUCTION_HOUSE = BOOKKEEPER + PUBLIC_KEY_LENGTH;\nconst SELLER = AUCTION_HOUSE + PUBLIC_KEY_LENGTH;\nconst METADATA = SELLER + PUBLIC_KEY_LENGTH;\n\nclass ListingReceiptGpaBuilder extends GpaBuilder {\n  whereDiscriminator(discrimator) {\n    return this.where(0, Buffer.from(discrimator));\n  }\n\n  listingReceiptAccounts() {\n    return this.whereDiscriminator(listingReceiptDiscriminator);\n  }\n\n  whereAuctionHouse(auctionHouseAddress) {\n    return this.listingReceiptAccounts().where(AUCTION_HOUSE, auctionHouseAddress);\n  }\n\n  whereSeller(sellerAddress) {\n    return this.where(SELLER, sellerAddress);\n  }\n\n  whereMetadata(metadataAddress) {\n    return this.where(METADATA, metadataAddress);\n  }\n\n}\n\nexport { ListingReceiptGpaBuilder };","map":{"version":3,"sources":["../../../../../src/plugins/auctionHouseModule/gpaBuilders/ListingReceiptGpaBuilder.ts"],"names":["listingReceiptDiscriminator","PUBLIC_KEY_LENGTH","PublicKey","default","toBytes","byteLength","TRADE_STATE","length","BOOKKEEPER","AUCTION_HOUSE","SELLER","METADATA","ListingReceiptGpaBuilder","GpaBuilder","whereDiscriminator","discrimator","where","Buffer","from","listingReceiptAccounts","whereAuctionHouse","auctionHouseAddress","whereSeller","sellerAddress","whereMetadata","metadataAddress"],"mappings":";4DAaA;AACA;;AACA,MAAMA,2BAAiD,GAAG,CACxD,GADwD,EACnD,EADmD,EAC/C,GAD+C,EAC1C,EAD0C,EACtC,GADsC,EACjC,EADiC,EAC7B,EAD6B,EACzB,GADyB,CAA1D;AAIA,MAAMC,iBAAiB,GAAGC,SAAS,CAACC,OAAVD,CAAkBE,OAAlBF,GAA4BG,UAAtD;AAEA,MAAMC,WAAW,GAAGN,2BAA2B,CAACO,MAAhD;AACA,MAAMC,UAAU,GAAGF,WAAW,GAAGL,iBAAjC;AACA,MAAMQ,aAAa,GAAGD,UAAU,GAAGP,iBAAnC;AACA,MAAMS,MAAM,GAAGD,aAAa,GAAGR,iBAA/B;AACA,MAAMU,QAAQ,GAAGD,MAAM,GAAGT,iBAA1B;;AAEO,MAAMW,wBAAN,SAAuCC,UAAvC,CAAkD;EACvDC,kBAAkB,CAACC,WAAD,EAAoC;IACpD,OAAO,KAAKC,KAAL,CAAW,CAAX,EAAcC,MAAM,CAACC,IAAPD,CAAYF,WAAZE,CAAd,CAAP;EACF;;EAEAE,sBAAsB,GAAG;IACvB,OAAO,KAAKL,kBAAL,CAAwBd,2BAAxB,CAAP;EACF;;EAEAoB,iBAAiB,CAACC,mBAAD,EAAiC;IAChD,OAAO,KAAKF,sBAAL,GAA8BH,KAA9B,CACLP,aADK,EAELY,mBAFK,CAAP;EAIF;;EAEAC,WAAW,CAACC,aAAD,EAA2B;IACpC,OAAO,KAAKP,KAAL,CAAWN,MAAX,EAAmBa,aAAnB,CAAP;EACF;;EAEAC,aAAa,CAACC,eAAD,EAA6B;IACxC,OAAO,KAAKT,KAAL,CAAWL,QAAX,EAAqBc,eAArB,CAAP;EACF;;AAtBuD","sourcesContent":["import { PublicKey } from '@solana/web3.js';\nimport { GpaBuilder } from '@/utils';\n\ntype AccountDiscriminator = [\n  number,\n  number,\n  number,\n  number,\n  number,\n  number,\n  number,\n  number\n];\n// TODO: copied from auction house SDK\n// SDK should either provide a GPA builder or expose this discriminator\nconst listingReceiptDiscriminator: AccountDiscriminator = [\n  240, 71, 225, 94, 200, 75, 84, 231,\n];\n\nconst PUBLIC_KEY_LENGTH = PublicKey.default.toBytes().byteLength;\n\nconst TRADE_STATE = listingReceiptDiscriminator.length;\nconst BOOKKEEPER = TRADE_STATE + PUBLIC_KEY_LENGTH;\nconst AUCTION_HOUSE = BOOKKEEPER + PUBLIC_KEY_LENGTH;\nconst SELLER = AUCTION_HOUSE + PUBLIC_KEY_LENGTH;\nconst METADATA = SELLER + PUBLIC_KEY_LENGTH;\n\nexport class ListingReceiptGpaBuilder extends GpaBuilder {\n  whereDiscriminator(discrimator: AccountDiscriminator) {\n    return this.where(0, Buffer.from(discrimator));\n  }\n\n  listingReceiptAccounts() {\n    return this.whereDiscriminator(listingReceiptDiscriminator);\n  }\n\n  whereAuctionHouse(auctionHouseAddress: PublicKey) {\n    return this.listingReceiptAccounts().where(\n      AUCTION_HOUSE,\n      auctionHouseAddress\n    );\n  }\n\n  whereSeller(sellerAddress: PublicKey) {\n    return this.where(SELLER, sellerAddress);\n  }\n\n  whereMetadata(metadataAddress: PublicKey) {\n    return this.where(METADATA, metadataAddress);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}