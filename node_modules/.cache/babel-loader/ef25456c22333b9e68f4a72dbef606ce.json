{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.errorFromCode = exports.AllocationGuardNotEnabledError = exports.AllocationLimitReachedError = exports.AllocationNotInitializedError = exports.ExceededProgramListSizeError = exports.UnauthorizedProgramFoundError = exports.DuplicatedMintLimitIdError = exports.DuplicatedGroupLabelError = exports.UnlockNotEnabledError = exports.ThawNotEnabledError = exports.ExceededMaximumFreezePeriodError = exports.FreezeEscrowAlreadyExistsError = exports.MissingFreezePeriodError = exports.FreezeNotInitializedError = exports.FreezeGuardNotEnabledError = exports.MissingFreezeInstructionError = exports.AddressNotAuthorizedError = exports.MaximumRedeemedAmountError = exports.MissingNftError = exports.InvalidNftCollectionError = exports.AllowedMintLimitReachedError = exports.AllowedListNotEnabledError = exports.MissingAllowedListProofError = exports.AddressNotFoundInAllowedListError = exports.InvalidMintTimeError = exports.AfterEndDateError = exports.GatewayTokenInvalidError = exports.MissingRequiredSignatureError = exports.TokenTransferFailedError = exports.NotEnoughTokensError = exports.TokenBurnFailedError = exports.NotEnoughSOLError = exports.MintNotLiveError = exports.MintNotLastTransactionError = exports.CollectionUpdateAuthorityKeyMismatchError = exports.MissingCollectionAccountsError = exports.CollectionKeyMismatchError = exports.InstructionNotFoundError = exports.CandyMachineEmptyError = exports.ExceededLengthError = exports.GroupNotFoundError = exports.RequiredGroupLabelNotFoundError = exports.NumericalOverflowErrorError = exports.MissingRemainingAccountError = exports.UninitializedError = exports.IncorrectOwnerError = exports.DataIncrementLimitExceededError = exports.PublicKeyMismatchError = exports.DeserializationErrorError = exports.InvalidAccountSizeError = void 0;\nexports.errorFromName = void 0;\nconst createErrorFromCodeLookup = new Map();\nconst createErrorFromNameLookup = new Map();\n\nclass InvalidAccountSizeError extends Error {\n  constructor() {\n    super('Could not save guard to account');\n    this.code = 0x1770;\n    this.name = 'InvalidAccountSize';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, InvalidAccountSizeError);\n    }\n  }\n\n}\n\nexports.InvalidAccountSizeError = InvalidAccountSizeError;\ncreateErrorFromCodeLookup.set(0x1770, () => new InvalidAccountSizeError());\ncreateErrorFromNameLookup.set('InvalidAccountSize', () => new InvalidAccountSizeError());\n\nclass DeserializationErrorError extends Error {\n  constructor() {\n    super('Could not deserialize guard');\n    this.code = 0x1771;\n    this.name = 'DeserializationError';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, DeserializationErrorError);\n    }\n  }\n\n}\n\nexports.DeserializationErrorError = DeserializationErrorError;\ncreateErrorFromCodeLookup.set(0x1771, () => new DeserializationErrorError());\ncreateErrorFromNameLookup.set('DeserializationError', () => new DeserializationErrorError());\n\nclass PublicKeyMismatchError extends Error {\n  constructor() {\n    super('Public key mismatch');\n    this.code = 0x1772;\n    this.name = 'PublicKeyMismatch';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, PublicKeyMismatchError);\n    }\n  }\n\n}\n\nexports.PublicKeyMismatchError = PublicKeyMismatchError;\ncreateErrorFromCodeLookup.set(0x1772, () => new PublicKeyMismatchError());\ncreateErrorFromNameLookup.set('PublicKeyMismatch', () => new PublicKeyMismatchError());\n\nclass DataIncrementLimitExceededError extends Error {\n  constructor() {\n    super('Exceeded account increase limit');\n    this.code = 0x1773;\n    this.name = 'DataIncrementLimitExceeded';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, DataIncrementLimitExceededError);\n    }\n  }\n\n}\n\nexports.DataIncrementLimitExceededError = DataIncrementLimitExceededError;\ncreateErrorFromCodeLookup.set(0x1773, () => new DataIncrementLimitExceededError());\ncreateErrorFromNameLookup.set('DataIncrementLimitExceeded', () => new DataIncrementLimitExceededError());\n\nclass IncorrectOwnerError extends Error {\n  constructor() {\n    super('Account does not have correct owner');\n    this.code = 0x1774;\n    this.name = 'IncorrectOwner';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, IncorrectOwnerError);\n    }\n  }\n\n}\n\nexports.IncorrectOwnerError = IncorrectOwnerError;\ncreateErrorFromCodeLookup.set(0x1774, () => new IncorrectOwnerError());\ncreateErrorFromNameLookup.set('IncorrectOwner', () => new IncorrectOwnerError());\n\nclass UninitializedError extends Error {\n  constructor() {\n    super('Account is not initialized');\n    this.code = 0x1775;\n    this.name = 'Uninitialized';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, UninitializedError);\n    }\n  }\n\n}\n\nexports.UninitializedError = UninitializedError;\ncreateErrorFromCodeLookup.set(0x1775, () => new UninitializedError());\ncreateErrorFromNameLookup.set('Uninitialized', () => new UninitializedError());\n\nclass MissingRemainingAccountError extends Error {\n  constructor() {\n    super('Missing expected remaining account');\n    this.code = 0x1776;\n    this.name = 'MissingRemainingAccount';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, MissingRemainingAccountError);\n    }\n  }\n\n}\n\nexports.MissingRemainingAccountError = MissingRemainingAccountError;\ncreateErrorFromCodeLookup.set(0x1776, () => new MissingRemainingAccountError());\ncreateErrorFromNameLookup.set('MissingRemainingAccount', () => new MissingRemainingAccountError());\n\nclass NumericalOverflowErrorError extends Error {\n  constructor() {\n    super('Numerical overflow error');\n    this.code = 0x1777;\n    this.name = 'NumericalOverflowError';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, NumericalOverflowErrorError);\n    }\n  }\n\n}\n\nexports.NumericalOverflowErrorError = NumericalOverflowErrorError;\ncreateErrorFromCodeLookup.set(0x1777, () => new NumericalOverflowErrorError());\ncreateErrorFromNameLookup.set('NumericalOverflowError', () => new NumericalOverflowErrorError());\n\nclass RequiredGroupLabelNotFoundError extends Error {\n  constructor() {\n    super('Missing required group label');\n    this.code = 0x1778;\n    this.name = 'RequiredGroupLabelNotFound';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, RequiredGroupLabelNotFoundError);\n    }\n  }\n\n}\n\nexports.RequiredGroupLabelNotFoundError = RequiredGroupLabelNotFoundError;\ncreateErrorFromCodeLookup.set(0x1778, () => new RequiredGroupLabelNotFoundError());\ncreateErrorFromNameLookup.set('RequiredGroupLabelNotFound', () => new RequiredGroupLabelNotFoundError());\n\nclass GroupNotFoundError extends Error {\n  constructor() {\n    super('Group not found');\n    this.code = 0x1779;\n    this.name = 'GroupNotFound';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, GroupNotFoundError);\n    }\n  }\n\n}\n\nexports.GroupNotFoundError = GroupNotFoundError;\ncreateErrorFromCodeLookup.set(0x1779, () => new GroupNotFoundError());\ncreateErrorFromNameLookup.set('GroupNotFound', () => new GroupNotFoundError());\n\nclass ExceededLengthError extends Error {\n  constructor() {\n    super('Value exceeded maximum length');\n    this.code = 0x177a;\n    this.name = 'ExceededLength';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, ExceededLengthError);\n    }\n  }\n\n}\n\nexports.ExceededLengthError = ExceededLengthError;\ncreateErrorFromCodeLookup.set(0x177a, () => new ExceededLengthError());\ncreateErrorFromNameLookup.set('ExceededLength', () => new ExceededLengthError());\n\nclass CandyMachineEmptyError extends Error {\n  constructor() {\n    super('Candy machine is empty');\n    this.code = 0x177b;\n    this.name = 'CandyMachineEmpty';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, CandyMachineEmptyError);\n    }\n  }\n\n}\n\nexports.CandyMachineEmptyError = CandyMachineEmptyError;\ncreateErrorFromCodeLookup.set(0x177b, () => new CandyMachineEmptyError());\ncreateErrorFromNameLookup.set('CandyMachineEmpty', () => new CandyMachineEmptyError());\n\nclass InstructionNotFoundError extends Error {\n  constructor() {\n    super('No instruction was found');\n    this.code = 0x177c;\n    this.name = 'InstructionNotFound';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, InstructionNotFoundError);\n    }\n  }\n\n}\n\nexports.InstructionNotFoundError = InstructionNotFoundError;\ncreateErrorFromCodeLookup.set(0x177c, () => new InstructionNotFoundError());\ncreateErrorFromNameLookup.set('InstructionNotFound', () => new InstructionNotFoundError());\n\nclass CollectionKeyMismatchError extends Error {\n  constructor() {\n    super('Collection public key mismatch');\n    this.code = 0x177d;\n    this.name = 'CollectionKeyMismatch';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, CollectionKeyMismatchError);\n    }\n  }\n\n}\n\nexports.CollectionKeyMismatchError = CollectionKeyMismatchError;\ncreateErrorFromCodeLookup.set(0x177d, () => new CollectionKeyMismatchError());\ncreateErrorFromNameLookup.set('CollectionKeyMismatch', () => new CollectionKeyMismatchError());\n\nclass MissingCollectionAccountsError extends Error {\n  constructor() {\n    super('Missing collection accounts');\n    this.code = 0x177e;\n    this.name = 'MissingCollectionAccounts';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, MissingCollectionAccountsError);\n    }\n  }\n\n}\n\nexports.MissingCollectionAccountsError = MissingCollectionAccountsError;\ncreateErrorFromCodeLookup.set(0x177e, () => new MissingCollectionAccountsError());\ncreateErrorFromNameLookup.set('MissingCollectionAccounts', () => new MissingCollectionAccountsError());\n\nclass CollectionUpdateAuthorityKeyMismatchError extends Error {\n  constructor() {\n    super('Collection update authority public key mismatch');\n    this.code = 0x177f;\n    this.name = 'CollectionUpdateAuthorityKeyMismatch';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, CollectionUpdateAuthorityKeyMismatchError);\n    }\n  }\n\n}\n\nexports.CollectionUpdateAuthorityKeyMismatchError = CollectionUpdateAuthorityKeyMismatchError;\ncreateErrorFromCodeLookup.set(0x177f, () => new CollectionUpdateAuthorityKeyMismatchError());\ncreateErrorFromNameLookup.set('CollectionUpdateAuthorityKeyMismatch', () => new CollectionUpdateAuthorityKeyMismatchError());\n\nclass MintNotLastTransactionError extends Error {\n  constructor() {\n    super('Mint must be the last instructions of the transaction');\n    this.code = 0x1780;\n    this.name = 'MintNotLastTransaction';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, MintNotLastTransactionError);\n    }\n  }\n\n}\n\nexports.MintNotLastTransactionError = MintNotLastTransactionError;\ncreateErrorFromCodeLookup.set(0x1780, () => new MintNotLastTransactionError());\ncreateErrorFromNameLookup.set('MintNotLastTransaction', () => new MintNotLastTransactionError());\n\nclass MintNotLiveError extends Error {\n  constructor() {\n    super('Mint is not live');\n    this.code = 0x1781;\n    this.name = 'MintNotLive';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, MintNotLiveError);\n    }\n  }\n\n}\n\nexports.MintNotLiveError = MintNotLiveError;\ncreateErrorFromCodeLookup.set(0x1781, () => new MintNotLiveError());\ncreateErrorFromNameLookup.set('MintNotLive', () => new MintNotLiveError());\n\nclass NotEnoughSOLError extends Error {\n  constructor() {\n    super('Not enough SOL to pay for the mint');\n    this.code = 0x1782;\n    this.name = 'NotEnoughSOL';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, NotEnoughSOLError);\n    }\n  }\n\n}\n\nexports.NotEnoughSOLError = NotEnoughSOLError;\ncreateErrorFromCodeLookup.set(0x1782, () => new NotEnoughSOLError());\ncreateErrorFromNameLookup.set('NotEnoughSOL', () => new NotEnoughSOLError());\n\nclass TokenBurnFailedError extends Error {\n  constructor() {\n    super('Token burn failed');\n    this.code = 0x1783;\n    this.name = 'TokenBurnFailed';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, TokenBurnFailedError);\n    }\n  }\n\n}\n\nexports.TokenBurnFailedError = TokenBurnFailedError;\ncreateErrorFromCodeLookup.set(0x1783, () => new TokenBurnFailedError());\ncreateErrorFromNameLookup.set('TokenBurnFailed', () => new TokenBurnFailedError());\n\nclass NotEnoughTokensError extends Error {\n  constructor() {\n    super('Not enough tokens on the account');\n    this.code = 0x1784;\n    this.name = 'NotEnoughTokens';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, NotEnoughTokensError);\n    }\n  }\n\n}\n\nexports.NotEnoughTokensError = NotEnoughTokensError;\ncreateErrorFromCodeLookup.set(0x1784, () => new NotEnoughTokensError());\ncreateErrorFromNameLookup.set('NotEnoughTokens', () => new NotEnoughTokensError());\n\nclass TokenTransferFailedError extends Error {\n  constructor() {\n    super('Token transfer failed');\n    this.code = 0x1785;\n    this.name = 'TokenTransferFailed';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, TokenTransferFailedError);\n    }\n  }\n\n}\n\nexports.TokenTransferFailedError = TokenTransferFailedError;\ncreateErrorFromCodeLookup.set(0x1785, () => new TokenTransferFailedError());\ncreateErrorFromNameLookup.set('TokenTransferFailed', () => new TokenTransferFailedError());\n\nclass MissingRequiredSignatureError extends Error {\n  constructor() {\n    super('A signature was required but not found');\n    this.code = 0x1786;\n    this.name = 'MissingRequiredSignature';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, MissingRequiredSignatureError);\n    }\n  }\n\n}\n\nexports.MissingRequiredSignatureError = MissingRequiredSignatureError;\ncreateErrorFromCodeLookup.set(0x1786, () => new MissingRequiredSignatureError());\ncreateErrorFromNameLookup.set('MissingRequiredSignature', () => new MissingRequiredSignatureError());\n\nclass GatewayTokenInvalidError extends Error {\n  constructor() {\n    super('Gateway token is not valid');\n    this.code = 0x1787;\n    this.name = 'GatewayTokenInvalid';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, GatewayTokenInvalidError);\n    }\n  }\n\n}\n\nexports.GatewayTokenInvalidError = GatewayTokenInvalidError;\ncreateErrorFromCodeLookup.set(0x1787, () => new GatewayTokenInvalidError());\ncreateErrorFromNameLookup.set('GatewayTokenInvalid', () => new GatewayTokenInvalidError());\n\nclass AfterEndDateError extends Error {\n  constructor() {\n    super('Current time is after the set end date');\n    this.code = 0x1788;\n    this.name = 'AfterEndDate';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, AfterEndDateError);\n    }\n  }\n\n}\n\nexports.AfterEndDateError = AfterEndDateError;\ncreateErrorFromCodeLookup.set(0x1788, () => new AfterEndDateError());\ncreateErrorFromNameLookup.set('AfterEndDate', () => new AfterEndDateError());\n\nclass InvalidMintTimeError extends Error {\n  constructor() {\n    super('Current time is not within the allowed mint time');\n    this.code = 0x1789;\n    this.name = 'InvalidMintTime';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, InvalidMintTimeError);\n    }\n  }\n\n}\n\nexports.InvalidMintTimeError = InvalidMintTimeError;\ncreateErrorFromCodeLookup.set(0x1789, () => new InvalidMintTimeError());\ncreateErrorFromNameLookup.set('InvalidMintTime', () => new InvalidMintTimeError());\n\nclass AddressNotFoundInAllowedListError extends Error {\n  constructor() {\n    super('Address not found on the allowed list');\n    this.code = 0x178a;\n    this.name = 'AddressNotFoundInAllowedList';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, AddressNotFoundInAllowedListError);\n    }\n  }\n\n}\n\nexports.AddressNotFoundInAllowedListError = AddressNotFoundInAllowedListError;\ncreateErrorFromCodeLookup.set(0x178a, () => new AddressNotFoundInAllowedListError());\ncreateErrorFromNameLookup.set('AddressNotFoundInAllowedList', () => new AddressNotFoundInAllowedListError());\n\nclass MissingAllowedListProofError extends Error {\n  constructor() {\n    super('Missing allowed list proof');\n    this.code = 0x178b;\n    this.name = 'MissingAllowedListProof';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, MissingAllowedListProofError);\n    }\n  }\n\n}\n\nexports.MissingAllowedListProofError = MissingAllowedListProofError;\ncreateErrorFromCodeLookup.set(0x178b, () => new MissingAllowedListProofError());\ncreateErrorFromNameLookup.set('MissingAllowedListProof', () => new MissingAllowedListProofError());\n\nclass AllowedListNotEnabledError extends Error {\n  constructor() {\n    super('Allow list guard is not enabled');\n    this.code = 0x178c;\n    this.name = 'AllowedListNotEnabled';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, AllowedListNotEnabledError);\n    }\n  }\n\n}\n\nexports.AllowedListNotEnabledError = AllowedListNotEnabledError;\ncreateErrorFromCodeLookup.set(0x178c, () => new AllowedListNotEnabledError());\ncreateErrorFromNameLookup.set('AllowedListNotEnabled', () => new AllowedListNotEnabledError());\n\nclass AllowedMintLimitReachedError extends Error {\n  constructor() {\n    super('The maximum number of allowed mints was reached');\n    this.code = 0x178d;\n    this.name = 'AllowedMintLimitReached';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, AllowedMintLimitReachedError);\n    }\n  }\n\n}\n\nexports.AllowedMintLimitReachedError = AllowedMintLimitReachedError;\ncreateErrorFromCodeLookup.set(0x178d, () => new AllowedMintLimitReachedError());\ncreateErrorFromNameLookup.set('AllowedMintLimitReached', () => new AllowedMintLimitReachedError());\n\nclass InvalidNftCollectionError extends Error {\n  constructor() {\n    super('Invalid NFT collection');\n    this.code = 0x178e;\n    this.name = 'InvalidNftCollection';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, InvalidNftCollectionError);\n    }\n  }\n\n}\n\nexports.InvalidNftCollectionError = InvalidNftCollectionError;\ncreateErrorFromCodeLookup.set(0x178e, () => new InvalidNftCollectionError());\ncreateErrorFromNameLookup.set('InvalidNftCollection', () => new InvalidNftCollectionError());\n\nclass MissingNftError extends Error {\n  constructor() {\n    super('Missing NFT on the account');\n    this.code = 0x178f;\n    this.name = 'MissingNft';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, MissingNftError);\n    }\n  }\n\n}\n\nexports.MissingNftError = MissingNftError;\ncreateErrorFromCodeLookup.set(0x178f, () => new MissingNftError());\ncreateErrorFromNameLookup.set('MissingNft', () => new MissingNftError());\n\nclass MaximumRedeemedAmountError extends Error {\n  constructor() {\n    super('Current redemeed items is at the set maximum amount');\n    this.code = 0x1790;\n    this.name = 'MaximumRedeemedAmount';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, MaximumRedeemedAmountError);\n    }\n  }\n\n}\n\nexports.MaximumRedeemedAmountError = MaximumRedeemedAmountError;\ncreateErrorFromCodeLookup.set(0x1790, () => new MaximumRedeemedAmountError());\ncreateErrorFromNameLookup.set('MaximumRedeemedAmount', () => new MaximumRedeemedAmountError());\n\nclass AddressNotAuthorizedError extends Error {\n  constructor() {\n    super('Address not authorized');\n    this.code = 0x1791;\n    this.name = 'AddressNotAuthorized';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, AddressNotAuthorizedError);\n    }\n  }\n\n}\n\nexports.AddressNotAuthorizedError = AddressNotAuthorizedError;\ncreateErrorFromCodeLookup.set(0x1791, () => new AddressNotAuthorizedError());\ncreateErrorFromNameLookup.set('AddressNotAuthorized', () => new AddressNotAuthorizedError());\n\nclass MissingFreezeInstructionError extends Error {\n  constructor() {\n    super('Missing freeze instruction data');\n    this.code = 0x1792;\n    this.name = 'MissingFreezeInstruction';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, MissingFreezeInstructionError);\n    }\n  }\n\n}\n\nexports.MissingFreezeInstructionError = MissingFreezeInstructionError;\ncreateErrorFromCodeLookup.set(0x1792, () => new MissingFreezeInstructionError());\ncreateErrorFromNameLookup.set('MissingFreezeInstruction', () => new MissingFreezeInstructionError());\n\nclass FreezeGuardNotEnabledError extends Error {\n  constructor() {\n    super('Freeze guard must be enabled');\n    this.code = 0x1793;\n    this.name = 'FreezeGuardNotEnabled';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, FreezeGuardNotEnabledError);\n    }\n  }\n\n}\n\nexports.FreezeGuardNotEnabledError = FreezeGuardNotEnabledError;\ncreateErrorFromCodeLookup.set(0x1793, () => new FreezeGuardNotEnabledError());\ncreateErrorFromNameLookup.set('FreezeGuardNotEnabled', () => new FreezeGuardNotEnabledError());\n\nclass FreezeNotInitializedError extends Error {\n  constructor() {\n    super('Freeze must be initialized');\n    this.code = 0x1794;\n    this.name = 'FreezeNotInitialized';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, FreezeNotInitializedError);\n    }\n  }\n\n}\n\nexports.FreezeNotInitializedError = FreezeNotInitializedError;\ncreateErrorFromCodeLookup.set(0x1794, () => new FreezeNotInitializedError());\ncreateErrorFromNameLookup.set('FreezeNotInitialized', () => new FreezeNotInitializedError());\n\nclass MissingFreezePeriodError extends Error {\n  constructor() {\n    super('Missing freeze period');\n    this.code = 0x1795;\n    this.name = 'MissingFreezePeriod';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, MissingFreezePeriodError);\n    }\n  }\n\n}\n\nexports.MissingFreezePeriodError = MissingFreezePeriodError;\ncreateErrorFromCodeLookup.set(0x1795, () => new MissingFreezePeriodError());\ncreateErrorFromNameLookup.set('MissingFreezePeriod', () => new MissingFreezePeriodError());\n\nclass FreezeEscrowAlreadyExistsError extends Error {\n  constructor() {\n    super('The freeze escrow account already exists');\n    this.code = 0x1796;\n    this.name = 'FreezeEscrowAlreadyExists';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, FreezeEscrowAlreadyExistsError);\n    }\n  }\n\n}\n\nexports.FreezeEscrowAlreadyExistsError = FreezeEscrowAlreadyExistsError;\ncreateErrorFromCodeLookup.set(0x1796, () => new FreezeEscrowAlreadyExistsError());\ncreateErrorFromNameLookup.set('FreezeEscrowAlreadyExists', () => new FreezeEscrowAlreadyExistsError());\n\nclass ExceededMaximumFreezePeriodError extends Error {\n  constructor() {\n    super('Maximum freeze period exceeded');\n    this.code = 0x1797;\n    this.name = 'ExceededMaximumFreezePeriod';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, ExceededMaximumFreezePeriodError);\n    }\n  }\n\n}\n\nexports.ExceededMaximumFreezePeriodError = ExceededMaximumFreezePeriodError;\ncreateErrorFromCodeLookup.set(0x1797, () => new ExceededMaximumFreezePeriodError());\ncreateErrorFromNameLookup.set('ExceededMaximumFreezePeriod', () => new ExceededMaximumFreezePeriodError());\n\nclass ThawNotEnabledError extends Error {\n  constructor() {\n    super('Thaw is not enabled');\n    this.code = 0x1798;\n    this.name = 'ThawNotEnabled';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, ThawNotEnabledError);\n    }\n  }\n\n}\n\nexports.ThawNotEnabledError = ThawNotEnabledError;\ncreateErrorFromCodeLookup.set(0x1798, () => new ThawNotEnabledError());\ncreateErrorFromNameLookup.set('ThawNotEnabled', () => new ThawNotEnabledError());\n\nclass UnlockNotEnabledError extends Error {\n  constructor() {\n    super('Unlock is not enabled (not all NFTs are thawed)');\n    this.code = 0x1799;\n    this.name = 'UnlockNotEnabled';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, UnlockNotEnabledError);\n    }\n  }\n\n}\n\nexports.UnlockNotEnabledError = UnlockNotEnabledError;\ncreateErrorFromCodeLookup.set(0x1799, () => new UnlockNotEnabledError());\ncreateErrorFromNameLookup.set('UnlockNotEnabled', () => new UnlockNotEnabledError());\n\nclass DuplicatedGroupLabelError extends Error {\n  constructor() {\n    super('Duplicated group label');\n    this.code = 0x179a;\n    this.name = 'DuplicatedGroupLabel';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, DuplicatedGroupLabelError);\n    }\n  }\n\n}\n\nexports.DuplicatedGroupLabelError = DuplicatedGroupLabelError;\ncreateErrorFromCodeLookup.set(0x179a, () => new DuplicatedGroupLabelError());\ncreateErrorFromNameLookup.set('DuplicatedGroupLabel', () => new DuplicatedGroupLabelError());\n\nclass DuplicatedMintLimitIdError extends Error {\n  constructor() {\n    super('Duplicated mint limit id');\n    this.code = 0x179b;\n    this.name = 'DuplicatedMintLimitId';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, DuplicatedMintLimitIdError);\n    }\n  }\n\n}\n\nexports.DuplicatedMintLimitIdError = DuplicatedMintLimitIdError;\ncreateErrorFromCodeLookup.set(0x179b, () => new DuplicatedMintLimitIdError());\ncreateErrorFromNameLookup.set('DuplicatedMintLimitId', () => new DuplicatedMintLimitIdError());\n\nclass UnauthorizedProgramFoundError extends Error {\n  constructor() {\n    super('An unauthorized program was found in the transaction');\n    this.code = 0x179c;\n    this.name = 'UnauthorizedProgramFound';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, UnauthorizedProgramFoundError);\n    }\n  }\n\n}\n\nexports.UnauthorizedProgramFoundError = UnauthorizedProgramFoundError;\ncreateErrorFromCodeLookup.set(0x179c, () => new UnauthorizedProgramFoundError());\ncreateErrorFromNameLookup.set('UnauthorizedProgramFound', () => new UnauthorizedProgramFoundError());\n\nclass ExceededProgramListSizeError extends Error {\n  constructor() {\n    super('Exceeded the maximum number of programs in the additional list');\n    this.code = 0x179d;\n    this.name = 'ExceededProgramListSize';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, ExceededProgramListSizeError);\n    }\n  }\n\n}\n\nexports.ExceededProgramListSizeError = ExceededProgramListSizeError;\ncreateErrorFromCodeLookup.set(0x179d, () => new ExceededProgramListSizeError());\ncreateErrorFromNameLookup.set('ExceededProgramListSize', () => new ExceededProgramListSizeError());\n\nclass AllocationNotInitializedError extends Error {\n  constructor() {\n    super('Allocation PDA not initialized');\n    this.code = 0x179e;\n    this.name = 'AllocationNotInitialized';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, AllocationNotInitializedError);\n    }\n  }\n\n}\n\nexports.AllocationNotInitializedError = AllocationNotInitializedError;\ncreateErrorFromCodeLookup.set(0x179e, () => new AllocationNotInitializedError());\ncreateErrorFromNameLookup.set('AllocationNotInitialized', () => new AllocationNotInitializedError());\n\nclass AllocationLimitReachedError extends Error {\n  constructor() {\n    super('Allocation limit was reached');\n    this.code = 0x179f;\n    this.name = 'AllocationLimitReached';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, AllocationLimitReachedError);\n    }\n  }\n\n}\n\nexports.AllocationLimitReachedError = AllocationLimitReachedError;\ncreateErrorFromCodeLookup.set(0x179f, () => new AllocationLimitReachedError());\ncreateErrorFromNameLookup.set('AllocationLimitReached', () => new AllocationLimitReachedError());\n\nclass AllocationGuardNotEnabledError extends Error {\n  constructor() {\n    super('Allocation guard must be enabled');\n    this.code = 0x17a0;\n    this.name = 'AllocationGuardNotEnabled';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, AllocationGuardNotEnabledError);\n    }\n  }\n\n}\n\nexports.AllocationGuardNotEnabledError = AllocationGuardNotEnabledError;\ncreateErrorFromCodeLookup.set(0x17a0, () => new AllocationGuardNotEnabledError());\ncreateErrorFromNameLookup.set('AllocationGuardNotEnabled', () => new AllocationGuardNotEnabledError());\n\nfunction errorFromCode(code) {\n  const createError = createErrorFromCodeLookup.get(code);\n  return createError != null ? createError() : null;\n}\n\nexports.errorFromCode = errorFromCode;\n\nfunction errorFromName(name) {\n  const createError = createErrorFromNameLookup.get(name);\n  return createError != null ? createError() : null;\n}\n\nexports.errorFromName = errorFromName;","map":{"version":3,"sources":["../../../../src/generated/errors/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.errorFromCode = exports.AllocationGuardNotEnabledError = exports.AllocationLimitReachedError = exports.AllocationNotInitializedError = exports.ExceededProgramListSizeError = exports.UnauthorizedProgramFoundError = exports.DuplicatedMintLimitIdError = exports.DuplicatedGroupLabelError = exports.UnlockNotEnabledError = exports.ThawNotEnabledError = exports.ExceededMaximumFreezePeriodError = exports.FreezeEscrowAlreadyExistsError = exports.MissingFreezePeriodError = exports.FreezeNotInitializedError = exports.FreezeGuardNotEnabledError = exports.MissingFreezeInstructionError = exports.AddressNotAuthorizedError = exports.MaximumRedeemedAmountError = exports.MissingNftError = exports.InvalidNftCollectionError = exports.AllowedMintLimitReachedError = exports.AllowedListNotEnabledError = exports.MissingAllowedListProofError = exports.AddressNotFoundInAllowedListError = exports.InvalidMintTimeError = exports.AfterEndDateError = exports.GatewayTokenInvalidError = exports.MissingRequiredSignatureError = exports.TokenTransferFailedError = exports.NotEnoughTokensError = exports.TokenBurnFailedError = exports.NotEnoughSOLError = exports.MintNotLiveError = exports.MintNotLastTransactionError = exports.CollectionUpdateAuthorityKeyMismatchError = exports.MissingCollectionAccountsError = exports.CollectionKeyMismatchError = exports.InstructionNotFoundError = exports.CandyMachineEmptyError = exports.ExceededLengthError = exports.GroupNotFoundError = exports.RequiredGroupLabelNotFoundError = exports.NumericalOverflowErrorError = exports.MissingRemainingAccountError = exports.UninitializedError = exports.IncorrectOwnerError = exports.DataIncrementLimitExceededError = exports.PublicKeyMismatchError = exports.DeserializationErrorError = exports.InvalidAccountSizeError = void 0;\nexports.errorFromName = void 0;\nconst createErrorFromCodeLookup = new Map();\nconst createErrorFromNameLookup = new Map();\nclass InvalidAccountSizeError extends Error {\n    constructor() {\n        super('Could not save guard to account');\n        this.code = 0x1770;\n        this.name = 'InvalidAccountSize';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, InvalidAccountSizeError);\n        }\n    }\n}\nexports.InvalidAccountSizeError = InvalidAccountSizeError;\ncreateErrorFromCodeLookup.set(0x1770, () => new InvalidAccountSizeError());\ncreateErrorFromNameLookup.set('InvalidAccountSize', () => new InvalidAccountSizeError());\nclass DeserializationErrorError extends Error {\n    constructor() {\n        super('Could not deserialize guard');\n        this.code = 0x1771;\n        this.name = 'DeserializationError';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, DeserializationErrorError);\n        }\n    }\n}\nexports.DeserializationErrorError = DeserializationErrorError;\ncreateErrorFromCodeLookup.set(0x1771, () => new DeserializationErrorError());\ncreateErrorFromNameLookup.set('DeserializationError', () => new DeserializationErrorError());\nclass PublicKeyMismatchError extends Error {\n    constructor() {\n        super('Public key mismatch');\n        this.code = 0x1772;\n        this.name = 'PublicKeyMismatch';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, PublicKeyMismatchError);\n        }\n    }\n}\nexports.PublicKeyMismatchError = PublicKeyMismatchError;\ncreateErrorFromCodeLookup.set(0x1772, () => new PublicKeyMismatchError());\ncreateErrorFromNameLookup.set('PublicKeyMismatch', () => new PublicKeyMismatchError());\nclass DataIncrementLimitExceededError extends Error {\n    constructor() {\n        super('Exceeded account increase limit');\n        this.code = 0x1773;\n        this.name = 'DataIncrementLimitExceeded';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, DataIncrementLimitExceededError);\n        }\n    }\n}\nexports.DataIncrementLimitExceededError = DataIncrementLimitExceededError;\ncreateErrorFromCodeLookup.set(0x1773, () => new DataIncrementLimitExceededError());\ncreateErrorFromNameLookup.set('DataIncrementLimitExceeded', () => new DataIncrementLimitExceededError());\nclass IncorrectOwnerError extends Error {\n    constructor() {\n        super('Account does not have correct owner');\n        this.code = 0x1774;\n        this.name = 'IncorrectOwner';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, IncorrectOwnerError);\n        }\n    }\n}\nexports.IncorrectOwnerError = IncorrectOwnerError;\ncreateErrorFromCodeLookup.set(0x1774, () => new IncorrectOwnerError());\ncreateErrorFromNameLookup.set('IncorrectOwner', () => new IncorrectOwnerError());\nclass UninitializedError extends Error {\n    constructor() {\n        super('Account is not initialized');\n        this.code = 0x1775;\n        this.name = 'Uninitialized';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, UninitializedError);\n        }\n    }\n}\nexports.UninitializedError = UninitializedError;\ncreateErrorFromCodeLookup.set(0x1775, () => new UninitializedError());\ncreateErrorFromNameLookup.set('Uninitialized', () => new UninitializedError());\nclass MissingRemainingAccountError extends Error {\n    constructor() {\n        super('Missing expected remaining account');\n        this.code = 0x1776;\n        this.name = 'MissingRemainingAccount';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, MissingRemainingAccountError);\n        }\n    }\n}\nexports.MissingRemainingAccountError = MissingRemainingAccountError;\ncreateErrorFromCodeLookup.set(0x1776, () => new MissingRemainingAccountError());\ncreateErrorFromNameLookup.set('MissingRemainingAccount', () => new MissingRemainingAccountError());\nclass NumericalOverflowErrorError extends Error {\n    constructor() {\n        super('Numerical overflow error');\n        this.code = 0x1777;\n        this.name = 'NumericalOverflowError';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, NumericalOverflowErrorError);\n        }\n    }\n}\nexports.NumericalOverflowErrorError = NumericalOverflowErrorError;\ncreateErrorFromCodeLookup.set(0x1777, () => new NumericalOverflowErrorError());\ncreateErrorFromNameLookup.set('NumericalOverflowError', () => new NumericalOverflowErrorError());\nclass RequiredGroupLabelNotFoundError extends Error {\n    constructor() {\n        super('Missing required group label');\n        this.code = 0x1778;\n        this.name = 'RequiredGroupLabelNotFound';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, RequiredGroupLabelNotFoundError);\n        }\n    }\n}\nexports.RequiredGroupLabelNotFoundError = RequiredGroupLabelNotFoundError;\ncreateErrorFromCodeLookup.set(0x1778, () => new RequiredGroupLabelNotFoundError());\ncreateErrorFromNameLookup.set('RequiredGroupLabelNotFound', () => new RequiredGroupLabelNotFoundError());\nclass GroupNotFoundError extends Error {\n    constructor() {\n        super('Group not found');\n        this.code = 0x1779;\n        this.name = 'GroupNotFound';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, GroupNotFoundError);\n        }\n    }\n}\nexports.GroupNotFoundError = GroupNotFoundError;\ncreateErrorFromCodeLookup.set(0x1779, () => new GroupNotFoundError());\ncreateErrorFromNameLookup.set('GroupNotFound', () => new GroupNotFoundError());\nclass ExceededLengthError extends Error {\n    constructor() {\n        super('Value exceeded maximum length');\n        this.code = 0x177a;\n        this.name = 'ExceededLength';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, ExceededLengthError);\n        }\n    }\n}\nexports.ExceededLengthError = ExceededLengthError;\ncreateErrorFromCodeLookup.set(0x177a, () => new ExceededLengthError());\ncreateErrorFromNameLookup.set('ExceededLength', () => new ExceededLengthError());\nclass CandyMachineEmptyError extends Error {\n    constructor() {\n        super('Candy machine is empty');\n        this.code = 0x177b;\n        this.name = 'CandyMachineEmpty';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CandyMachineEmptyError);\n        }\n    }\n}\nexports.CandyMachineEmptyError = CandyMachineEmptyError;\ncreateErrorFromCodeLookup.set(0x177b, () => new CandyMachineEmptyError());\ncreateErrorFromNameLookup.set('CandyMachineEmpty', () => new CandyMachineEmptyError());\nclass InstructionNotFoundError extends Error {\n    constructor() {\n        super('No instruction was found');\n        this.code = 0x177c;\n        this.name = 'InstructionNotFound';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, InstructionNotFoundError);\n        }\n    }\n}\nexports.InstructionNotFoundError = InstructionNotFoundError;\ncreateErrorFromCodeLookup.set(0x177c, () => new InstructionNotFoundError());\ncreateErrorFromNameLookup.set('InstructionNotFound', () => new InstructionNotFoundError());\nclass CollectionKeyMismatchError extends Error {\n    constructor() {\n        super('Collection public key mismatch');\n        this.code = 0x177d;\n        this.name = 'CollectionKeyMismatch';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CollectionKeyMismatchError);\n        }\n    }\n}\nexports.CollectionKeyMismatchError = CollectionKeyMismatchError;\ncreateErrorFromCodeLookup.set(0x177d, () => new CollectionKeyMismatchError());\ncreateErrorFromNameLookup.set('CollectionKeyMismatch', () => new CollectionKeyMismatchError());\nclass MissingCollectionAccountsError extends Error {\n    constructor() {\n        super('Missing collection accounts');\n        this.code = 0x177e;\n        this.name = 'MissingCollectionAccounts';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, MissingCollectionAccountsError);\n        }\n    }\n}\nexports.MissingCollectionAccountsError = MissingCollectionAccountsError;\ncreateErrorFromCodeLookup.set(0x177e, () => new MissingCollectionAccountsError());\ncreateErrorFromNameLookup.set('MissingCollectionAccounts', () => new MissingCollectionAccountsError());\nclass CollectionUpdateAuthorityKeyMismatchError extends Error {\n    constructor() {\n        super('Collection update authority public key mismatch');\n        this.code = 0x177f;\n        this.name = 'CollectionUpdateAuthorityKeyMismatch';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CollectionUpdateAuthorityKeyMismatchError);\n        }\n    }\n}\nexports.CollectionUpdateAuthorityKeyMismatchError = CollectionUpdateAuthorityKeyMismatchError;\ncreateErrorFromCodeLookup.set(0x177f, () => new CollectionUpdateAuthorityKeyMismatchError());\ncreateErrorFromNameLookup.set('CollectionUpdateAuthorityKeyMismatch', () => new CollectionUpdateAuthorityKeyMismatchError());\nclass MintNotLastTransactionError extends Error {\n    constructor() {\n        super('Mint must be the last instructions of the transaction');\n        this.code = 0x1780;\n        this.name = 'MintNotLastTransaction';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, MintNotLastTransactionError);\n        }\n    }\n}\nexports.MintNotLastTransactionError = MintNotLastTransactionError;\ncreateErrorFromCodeLookup.set(0x1780, () => new MintNotLastTransactionError());\ncreateErrorFromNameLookup.set('MintNotLastTransaction', () => new MintNotLastTransactionError());\nclass MintNotLiveError extends Error {\n    constructor() {\n        super('Mint is not live');\n        this.code = 0x1781;\n        this.name = 'MintNotLive';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, MintNotLiveError);\n        }\n    }\n}\nexports.MintNotLiveError = MintNotLiveError;\ncreateErrorFromCodeLookup.set(0x1781, () => new MintNotLiveError());\ncreateErrorFromNameLookup.set('MintNotLive', () => new MintNotLiveError());\nclass NotEnoughSOLError extends Error {\n    constructor() {\n        super('Not enough SOL to pay for the mint');\n        this.code = 0x1782;\n        this.name = 'NotEnoughSOL';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, NotEnoughSOLError);\n        }\n    }\n}\nexports.NotEnoughSOLError = NotEnoughSOLError;\ncreateErrorFromCodeLookup.set(0x1782, () => new NotEnoughSOLError());\ncreateErrorFromNameLookup.set('NotEnoughSOL', () => new NotEnoughSOLError());\nclass TokenBurnFailedError extends Error {\n    constructor() {\n        super('Token burn failed');\n        this.code = 0x1783;\n        this.name = 'TokenBurnFailed';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, TokenBurnFailedError);\n        }\n    }\n}\nexports.TokenBurnFailedError = TokenBurnFailedError;\ncreateErrorFromCodeLookup.set(0x1783, () => new TokenBurnFailedError());\ncreateErrorFromNameLookup.set('TokenBurnFailed', () => new TokenBurnFailedError());\nclass NotEnoughTokensError extends Error {\n    constructor() {\n        super('Not enough tokens on the account');\n        this.code = 0x1784;\n        this.name = 'NotEnoughTokens';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, NotEnoughTokensError);\n        }\n    }\n}\nexports.NotEnoughTokensError = NotEnoughTokensError;\ncreateErrorFromCodeLookup.set(0x1784, () => new NotEnoughTokensError());\ncreateErrorFromNameLookup.set('NotEnoughTokens', () => new NotEnoughTokensError());\nclass TokenTransferFailedError extends Error {\n    constructor() {\n        super('Token transfer failed');\n        this.code = 0x1785;\n        this.name = 'TokenTransferFailed';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, TokenTransferFailedError);\n        }\n    }\n}\nexports.TokenTransferFailedError = TokenTransferFailedError;\ncreateErrorFromCodeLookup.set(0x1785, () => new TokenTransferFailedError());\ncreateErrorFromNameLookup.set('TokenTransferFailed', () => new TokenTransferFailedError());\nclass MissingRequiredSignatureError extends Error {\n    constructor() {\n        super('A signature was required but not found');\n        this.code = 0x1786;\n        this.name = 'MissingRequiredSignature';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, MissingRequiredSignatureError);\n        }\n    }\n}\nexports.MissingRequiredSignatureError = MissingRequiredSignatureError;\ncreateErrorFromCodeLookup.set(0x1786, () => new MissingRequiredSignatureError());\ncreateErrorFromNameLookup.set('MissingRequiredSignature', () => new MissingRequiredSignatureError());\nclass GatewayTokenInvalidError extends Error {\n    constructor() {\n        super('Gateway token is not valid');\n        this.code = 0x1787;\n        this.name = 'GatewayTokenInvalid';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, GatewayTokenInvalidError);\n        }\n    }\n}\nexports.GatewayTokenInvalidError = GatewayTokenInvalidError;\ncreateErrorFromCodeLookup.set(0x1787, () => new GatewayTokenInvalidError());\ncreateErrorFromNameLookup.set('GatewayTokenInvalid', () => new GatewayTokenInvalidError());\nclass AfterEndDateError extends Error {\n    constructor() {\n        super('Current time is after the set end date');\n        this.code = 0x1788;\n        this.name = 'AfterEndDate';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, AfterEndDateError);\n        }\n    }\n}\nexports.AfterEndDateError = AfterEndDateError;\ncreateErrorFromCodeLookup.set(0x1788, () => new AfterEndDateError());\ncreateErrorFromNameLookup.set('AfterEndDate', () => new AfterEndDateError());\nclass InvalidMintTimeError extends Error {\n    constructor() {\n        super('Current time is not within the allowed mint time');\n        this.code = 0x1789;\n        this.name = 'InvalidMintTime';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, InvalidMintTimeError);\n        }\n    }\n}\nexports.InvalidMintTimeError = InvalidMintTimeError;\ncreateErrorFromCodeLookup.set(0x1789, () => new InvalidMintTimeError());\ncreateErrorFromNameLookup.set('InvalidMintTime', () => new InvalidMintTimeError());\nclass AddressNotFoundInAllowedListError extends Error {\n    constructor() {\n        super('Address not found on the allowed list');\n        this.code = 0x178a;\n        this.name = 'AddressNotFoundInAllowedList';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, AddressNotFoundInAllowedListError);\n        }\n    }\n}\nexports.AddressNotFoundInAllowedListError = AddressNotFoundInAllowedListError;\ncreateErrorFromCodeLookup.set(0x178a, () => new AddressNotFoundInAllowedListError());\ncreateErrorFromNameLookup.set('AddressNotFoundInAllowedList', () => new AddressNotFoundInAllowedListError());\nclass MissingAllowedListProofError extends Error {\n    constructor() {\n        super('Missing allowed list proof');\n        this.code = 0x178b;\n        this.name = 'MissingAllowedListProof';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, MissingAllowedListProofError);\n        }\n    }\n}\nexports.MissingAllowedListProofError = MissingAllowedListProofError;\ncreateErrorFromCodeLookup.set(0x178b, () => new MissingAllowedListProofError());\ncreateErrorFromNameLookup.set('MissingAllowedListProof', () => new MissingAllowedListProofError());\nclass AllowedListNotEnabledError extends Error {\n    constructor() {\n        super('Allow list guard is not enabled');\n        this.code = 0x178c;\n        this.name = 'AllowedListNotEnabled';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, AllowedListNotEnabledError);\n        }\n    }\n}\nexports.AllowedListNotEnabledError = AllowedListNotEnabledError;\ncreateErrorFromCodeLookup.set(0x178c, () => new AllowedListNotEnabledError());\ncreateErrorFromNameLookup.set('AllowedListNotEnabled', () => new AllowedListNotEnabledError());\nclass AllowedMintLimitReachedError extends Error {\n    constructor() {\n        super('The maximum number of allowed mints was reached');\n        this.code = 0x178d;\n        this.name = 'AllowedMintLimitReached';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, AllowedMintLimitReachedError);\n        }\n    }\n}\nexports.AllowedMintLimitReachedError = AllowedMintLimitReachedError;\ncreateErrorFromCodeLookup.set(0x178d, () => new AllowedMintLimitReachedError());\ncreateErrorFromNameLookup.set('AllowedMintLimitReached', () => new AllowedMintLimitReachedError());\nclass InvalidNftCollectionError extends Error {\n    constructor() {\n        super('Invalid NFT collection');\n        this.code = 0x178e;\n        this.name = 'InvalidNftCollection';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, InvalidNftCollectionError);\n        }\n    }\n}\nexports.InvalidNftCollectionError = InvalidNftCollectionError;\ncreateErrorFromCodeLookup.set(0x178e, () => new InvalidNftCollectionError());\ncreateErrorFromNameLookup.set('InvalidNftCollection', () => new InvalidNftCollectionError());\nclass MissingNftError extends Error {\n    constructor() {\n        super('Missing NFT on the account');\n        this.code = 0x178f;\n        this.name = 'MissingNft';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, MissingNftError);\n        }\n    }\n}\nexports.MissingNftError = MissingNftError;\ncreateErrorFromCodeLookup.set(0x178f, () => new MissingNftError());\ncreateErrorFromNameLookup.set('MissingNft', () => new MissingNftError());\nclass MaximumRedeemedAmountError extends Error {\n    constructor() {\n        super('Current redemeed items is at the set maximum amount');\n        this.code = 0x1790;\n        this.name = 'MaximumRedeemedAmount';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, MaximumRedeemedAmountError);\n        }\n    }\n}\nexports.MaximumRedeemedAmountError = MaximumRedeemedAmountError;\ncreateErrorFromCodeLookup.set(0x1790, () => new MaximumRedeemedAmountError());\ncreateErrorFromNameLookup.set('MaximumRedeemedAmount', () => new MaximumRedeemedAmountError());\nclass AddressNotAuthorizedError extends Error {\n    constructor() {\n        super('Address not authorized');\n        this.code = 0x1791;\n        this.name = 'AddressNotAuthorized';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, AddressNotAuthorizedError);\n        }\n    }\n}\nexports.AddressNotAuthorizedError = AddressNotAuthorizedError;\ncreateErrorFromCodeLookup.set(0x1791, () => new AddressNotAuthorizedError());\ncreateErrorFromNameLookup.set('AddressNotAuthorized', () => new AddressNotAuthorizedError());\nclass MissingFreezeInstructionError extends Error {\n    constructor() {\n        super('Missing freeze instruction data');\n        this.code = 0x1792;\n        this.name = 'MissingFreezeInstruction';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, MissingFreezeInstructionError);\n        }\n    }\n}\nexports.MissingFreezeInstructionError = MissingFreezeInstructionError;\ncreateErrorFromCodeLookup.set(0x1792, () => new MissingFreezeInstructionError());\ncreateErrorFromNameLookup.set('MissingFreezeInstruction', () => new MissingFreezeInstructionError());\nclass FreezeGuardNotEnabledError extends Error {\n    constructor() {\n        super('Freeze guard must be enabled');\n        this.code = 0x1793;\n        this.name = 'FreezeGuardNotEnabled';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, FreezeGuardNotEnabledError);\n        }\n    }\n}\nexports.FreezeGuardNotEnabledError = FreezeGuardNotEnabledError;\ncreateErrorFromCodeLookup.set(0x1793, () => new FreezeGuardNotEnabledError());\ncreateErrorFromNameLookup.set('FreezeGuardNotEnabled', () => new FreezeGuardNotEnabledError());\nclass FreezeNotInitializedError extends Error {\n    constructor() {\n        super('Freeze must be initialized');\n        this.code = 0x1794;\n        this.name = 'FreezeNotInitialized';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, FreezeNotInitializedError);\n        }\n    }\n}\nexports.FreezeNotInitializedError = FreezeNotInitializedError;\ncreateErrorFromCodeLookup.set(0x1794, () => new FreezeNotInitializedError());\ncreateErrorFromNameLookup.set('FreezeNotInitialized', () => new FreezeNotInitializedError());\nclass MissingFreezePeriodError extends Error {\n    constructor() {\n        super('Missing freeze period');\n        this.code = 0x1795;\n        this.name = 'MissingFreezePeriod';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, MissingFreezePeriodError);\n        }\n    }\n}\nexports.MissingFreezePeriodError = MissingFreezePeriodError;\ncreateErrorFromCodeLookup.set(0x1795, () => new MissingFreezePeriodError());\ncreateErrorFromNameLookup.set('MissingFreezePeriod', () => new MissingFreezePeriodError());\nclass FreezeEscrowAlreadyExistsError extends Error {\n    constructor() {\n        super('The freeze escrow account already exists');\n        this.code = 0x1796;\n        this.name = 'FreezeEscrowAlreadyExists';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, FreezeEscrowAlreadyExistsError);\n        }\n    }\n}\nexports.FreezeEscrowAlreadyExistsError = FreezeEscrowAlreadyExistsError;\ncreateErrorFromCodeLookup.set(0x1796, () => new FreezeEscrowAlreadyExistsError());\ncreateErrorFromNameLookup.set('FreezeEscrowAlreadyExists', () => new FreezeEscrowAlreadyExistsError());\nclass ExceededMaximumFreezePeriodError extends Error {\n    constructor() {\n        super('Maximum freeze period exceeded');\n        this.code = 0x1797;\n        this.name = 'ExceededMaximumFreezePeriod';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, ExceededMaximumFreezePeriodError);\n        }\n    }\n}\nexports.ExceededMaximumFreezePeriodError = ExceededMaximumFreezePeriodError;\ncreateErrorFromCodeLookup.set(0x1797, () => new ExceededMaximumFreezePeriodError());\ncreateErrorFromNameLookup.set('ExceededMaximumFreezePeriod', () => new ExceededMaximumFreezePeriodError());\nclass ThawNotEnabledError extends Error {\n    constructor() {\n        super('Thaw is not enabled');\n        this.code = 0x1798;\n        this.name = 'ThawNotEnabled';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, ThawNotEnabledError);\n        }\n    }\n}\nexports.ThawNotEnabledError = ThawNotEnabledError;\ncreateErrorFromCodeLookup.set(0x1798, () => new ThawNotEnabledError());\ncreateErrorFromNameLookup.set('ThawNotEnabled', () => new ThawNotEnabledError());\nclass UnlockNotEnabledError extends Error {\n    constructor() {\n        super('Unlock is not enabled (not all NFTs are thawed)');\n        this.code = 0x1799;\n        this.name = 'UnlockNotEnabled';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, UnlockNotEnabledError);\n        }\n    }\n}\nexports.UnlockNotEnabledError = UnlockNotEnabledError;\ncreateErrorFromCodeLookup.set(0x1799, () => new UnlockNotEnabledError());\ncreateErrorFromNameLookup.set('UnlockNotEnabled', () => new UnlockNotEnabledError());\nclass DuplicatedGroupLabelError extends Error {\n    constructor() {\n        super('Duplicated group label');\n        this.code = 0x179a;\n        this.name = 'DuplicatedGroupLabel';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, DuplicatedGroupLabelError);\n        }\n    }\n}\nexports.DuplicatedGroupLabelError = DuplicatedGroupLabelError;\ncreateErrorFromCodeLookup.set(0x179a, () => new DuplicatedGroupLabelError());\ncreateErrorFromNameLookup.set('DuplicatedGroupLabel', () => new DuplicatedGroupLabelError());\nclass DuplicatedMintLimitIdError extends Error {\n    constructor() {\n        super('Duplicated mint limit id');\n        this.code = 0x179b;\n        this.name = 'DuplicatedMintLimitId';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, DuplicatedMintLimitIdError);\n        }\n    }\n}\nexports.DuplicatedMintLimitIdError = DuplicatedMintLimitIdError;\ncreateErrorFromCodeLookup.set(0x179b, () => new DuplicatedMintLimitIdError());\ncreateErrorFromNameLookup.set('DuplicatedMintLimitId', () => new DuplicatedMintLimitIdError());\nclass UnauthorizedProgramFoundError extends Error {\n    constructor() {\n        super('An unauthorized program was found in the transaction');\n        this.code = 0x179c;\n        this.name = 'UnauthorizedProgramFound';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, UnauthorizedProgramFoundError);\n        }\n    }\n}\nexports.UnauthorizedProgramFoundError = UnauthorizedProgramFoundError;\ncreateErrorFromCodeLookup.set(0x179c, () => new UnauthorizedProgramFoundError());\ncreateErrorFromNameLookup.set('UnauthorizedProgramFound', () => new UnauthorizedProgramFoundError());\nclass ExceededProgramListSizeError extends Error {\n    constructor() {\n        super('Exceeded the maximum number of programs in the additional list');\n        this.code = 0x179d;\n        this.name = 'ExceededProgramListSize';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, ExceededProgramListSizeError);\n        }\n    }\n}\nexports.ExceededProgramListSizeError = ExceededProgramListSizeError;\ncreateErrorFromCodeLookup.set(0x179d, () => new ExceededProgramListSizeError());\ncreateErrorFromNameLookup.set('ExceededProgramListSize', () => new ExceededProgramListSizeError());\nclass AllocationNotInitializedError extends Error {\n    constructor() {\n        super('Allocation PDA not initialized');\n        this.code = 0x179e;\n        this.name = 'AllocationNotInitialized';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, AllocationNotInitializedError);\n        }\n    }\n}\nexports.AllocationNotInitializedError = AllocationNotInitializedError;\ncreateErrorFromCodeLookup.set(0x179e, () => new AllocationNotInitializedError());\ncreateErrorFromNameLookup.set('AllocationNotInitialized', () => new AllocationNotInitializedError());\nclass AllocationLimitReachedError extends Error {\n    constructor() {\n        super('Allocation limit was reached');\n        this.code = 0x179f;\n        this.name = 'AllocationLimitReached';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, AllocationLimitReachedError);\n        }\n    }\n}\nexports.AllocationLimitReachedError = AllocationLimitReachedError;\ncreateErrorFromCodeLookup.set(0x179f, () => new AllocationLimitReachedError());\ncreateErrorFromNameLookup.set('AllocationLimitReached', () => new AllocationLimitReachedError());\nclass AllocationGuardNotEnabledError extends Error {\n    constructor() {\n        super('Allocation guard must be enabled');\n        this.code = 0x17a0;\n        this.name = 'AllocationGuardNotEnabled';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, AllocationGuardNotEnabledError);\n        }\n    }\n}\nexports.AllocationGuardNotEnabledError = AllocationGuardNotEnabledError;\ncreateErrorFromCodeLookup.set(0x17a0, () => new AllocationGuardNotEnabledError());\ncreateErrorFromNameLookup.set('AllocationGuardNotEnabled', () => new AllocationGuardNotEnabledError());\nfunction errorFromCode(code) {\n    const createError = createErrorFromCodeLookup.get(code);\n    return createError != null ? createError() : null;\n}\nexports.errorFromCode = errorFromCode;\nfunction errorFromName(name) {\n    const createError = createErrorFromNameLookup.get(name);\n    return createError != null ? createError() : null;\n}\nexports.errorFromName = errorFromName;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}