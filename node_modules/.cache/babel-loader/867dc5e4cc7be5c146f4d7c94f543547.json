{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveToWalletAddress = exports.getInputKey = exports.SOL_TLD_AUTHORITY = void 0;\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar spl_name_service_1 = require(\"@solana/spl-name-service\");\n\nvar utils_1 = require(\"./utils\"); // Address of the SOL TLD\n\n\nexports.SOL_TLD_AUTHORITY = new web3_js_1.PublicKey(\"58PwtjSDuFHuUkYjH9BYnnQKHfwo9reZhC2zMJv9JPkx\");\n\nvar getInputKey = function (input) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var hashedInputName, inputDomainKey;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , (0, spl_name_service_1.getHashedName)(input)];\n\n        case 1:\n          hashedInputName = _a.sent();\n          return [4\n          /*yield*/\n          , (0, spl_name_service_1.getNameAccountKey)(hashedInputName, undefined, exports.SOL_TLD_AUTHORITY)];\n\n        case 2:\n          inputDomainKey = _a.sent();\n          return [2\n          /*return*/\n          , {\n            inputDomainKey: inputDomainKey,\n            hashedInputName: hashedInputName\n          }];\n      }\n    });\n  });\n};\n\nexports.getInputKey = getInputKey;\nvar errorCantResolve = new Error(\"Can't resolve provided name into valid Solana address =(\");\n/**\n * Fn to resolve text into Solana wallet Public Key,\n * For now it resolves Solana Domain Names.\n * If Solana address passed it is validated and send back.\n *\n * Throw error if input text can't be resolved and validated.\n */\n\nvar resolveToWalletAddress = function (_a) {\n  var rawText = _a.text,\n      _b = _a.connection,\n      connection = _b === void 0 ? (0, utils_1.createConnectionConfig)() : _b;\n  return __awaiter(void 0, void 0, void 0, function () {\n    var input, isValidSolana, inputLowerCased, isSolDamain, domainName, inputDomainKey, registry, owner;\n\n    var _c, _d, _e, _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          input = (_c = rawText === null || rawText === void 0 ? void 0 : rawText.trim) === null || _c === void 0 ? void 0 : _c.call(rawText); // throw and error if input is not provided\n\n          if (!input) {\n            return [2\n            /*return*/\n            , Promise.reject(errorCantResolve)];\n          }\n\n          isValidSolana = (0, utils_1.isValidSolanaAddress)(input);\n\n          if (isValidSolana) {\n            return [2\n            /*return*/\n            , Promise.resolve(input)];\n          }\n\n          inputLowerCased = input === null || input === void 0 ? void 0 : input.toLowerCase();\n          isSolDamain = (_d = inputLowerCased === null || inputLowerCased === void 0 ? void 0 : inputLowerCased.endsWith) === null || _d === void 0 ? void 0 : _d.call(inputLowerCased, \".sol\");\n          if (!isSolDamain) return [3\n          /*break*/\n          , 3];\n          domainName = inputLowerCased.split(\".sol\")[0];\n          return [4\n          /*yield*/\n          , (0, exports.getInputKey)(domainName)];\n\n        case 1:\n          inputDomainKey = _g.sent().inputDomainKey;\n          return [4\n          /*yield*/\n          , spl_name_service_1.NameRegistryState.retrieve(connection, inputDomainKey)];\n\n        case 2:\n          registry = _g.sent();\n          owner = (_f = (_e = registry === null || registry === void 0 ? void 0 : registry.owner) === null || _e === void 0 ? void 0 : _e.toBase58) === null || _f === void 0 ? void 0 : _f.call(_e);\n\n          if (owner) {\n            return [2\n            /*return*/\n            , Promise.resolve(owner)];\n          }\n\n          _g.label = 3;\n\n        case 3:\n          // throw error if had no luck get valid Solana address\n          return [2\n          /*return*/\n          , Promise.reject(errorCantResolve)];\n      }\n    });\n  });\n};\n\nexports.resolveToWalletAddress = resolveToWalletAddress;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAKA,iC,CAGA;;;AACaA,4BAAoB,IAAIC,mBAAJ,CAC/B,8CAD+B,CAApB;;AAIN,IAAMC,WAAW,GAAG,UAAOC,KAAP,EAAiB;EAAA;;;;;UAClB;UAAA;UAAA,EAAM,sCAAcA,KAAd,CAAN;;;UAAlBC,eAAe,GAAGC,SAAlB;UACiB;UAAA;UAAA,EAAM,0CAC3BD,eAD2B,EAE3BE,SAF2B,EAG3BN,yBAH2B,CAAN;;;UAAjBO,cAAc,GAAGF,SAAjB;UAKN;UAAA;UAAA,EAAO;YAAEE,cAAc,gBAAhB;YAAkBH,eAAe;UAAjC,CAAP;;;GAP0C;AAQ3C,CARM;;AAAMJ,sBAAWE,WAAX;AAyBb,IAAMM,gBAAgB,GAAG,IAAIC,KAAJ,CACvB,0DADuB,CAAzB;AAIA;;;;;;;;AAOO,IAAMC,sBAAsB,GAAG,UAAOL,EAAP,EAG9B;MAFAM,OAAO;MACbC;MAAAC,UAAU,mBAAG,qCAAH,GAA2BD;;;;;;;;;UAE/BT,KAAK,GAAG,aAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEW,IAAT,MAAa,IAAb,IAAaC,aAAb,GAAa,MAAb,GAAaA,QAAbJ,OAAa,CAArB,EAEN;;UACA,IAAI,CAACR,KAAL,EAAY;YACV;YAAA;YAAA,EAAOa,OAAO,CAACC,MAAR,CAAeT,gBAAf,CAAP;UACD;;UAEKU,aAAa,GAAG,kCAAqBf,KAArB,CAAhB;;UACN,IAAIe,aAAJ,EAAmB;YACjB;YAAA;YAAA,EAAOF,OAAO,CAACG,OAAR,CAAgBhB,KAAhB,CAAP;UACD;;UAEKiB,eAAe,GAAGjB,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEkB,WAAP,EAAlB;UACAC,WAAW,GAAG,qBAAe,SAAf,mBAAe,WAAf,GAAe,MAAf,kBAAe,CAAEC,QAAjB,MAAyB,IAAzB,IAAyBC,aAAzB,GAAyB,MAAzB,GAAyBA,QAAzBJ,eAAyB,EAAG,MAAH,CAAvC;eAEFE;UAAA;UAAA;UAEIG,UAAU,GAAGL,eAAe,CAACM,KAAhB,CAAsB,MAAtB,EAA8B,CAA9B,CAAb;UACqB;UAAA;UAAA,EAAM,yBAAYD,UAAZ,CAAN;;;UAAnBlB,cAAc,GAAKoB,UAA6BpB,cAAhD;UAES;UAAA;UAAA,EAAMqB,qCAAkBC,QAAlB,CACrBhB,UADqB,EAErBN,cAFqB,CAAN;;;UAAXuB,QAAQ,GAAGH,SAAX;UAKAI,KAAK,GAAG,oBAAQ,SAAR,YAAQ,WAAR,GAAQ,MAAR,WAAQ,CAAEA,KAAV,MAAe,IAAf,IAAeC,aAAf,GAAe,MAAf,GAAeA,GAAEC,QAAjB,MAAyB,IAAzB,IAAyBC,aAAzB,GAAyB,MAAzB,GAAyBA,WAAjC;;UAEN,IAAIH,KAAJ,EAAW;YACT;YAAA;YAAA,EAAOf,OAAO,CAACG,OAAR,CAAgBY,KAAhB,CAAP;UACD;;;;;UAGH;UACA;UAAA;UAAA,EAAOf,OAAO,CAACC,MAAR,CAAeT,gBAAf,CAAP;;;;AACD,CAtCM;;AAAMR,iCAAsBU,sBAAtB","names":["exports","web3_js_1","getInputKey","input","hashedInputName","_a","undefined","inputDomainKey","errorCantResolve","Error","resolveToWalletAddress","rawText","_b","connection","trim","_c","Promise","reject","isValidSolana","resolve","inputLowerCased","toLowerCase","isSolDamain","endsWith","_d","domainName","split","_g","spl_name_service_1","retrieve","registry","owner","_e","toBase58","_f"],"sourceRoot":"","sources":["../src/resolveToWalletAddress.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}