{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAccountLenForMint = exports.getExtensionTypes = exports.getExtensionData = exports.getAccountLen = exports.getMintLen = exports.getAccountTypeOfMintType = exports.getTypeLen = exports.LENGTH_SIZE = exports.TYPE_SIZE = exports.ExtensionType = void 0;\n\nconst account_js_1 = require(\"../state/account.js\");\n\nconst mint_js_1 = require(\"../state/mint.js\");\n\nconst multisig_js_1 = require(\"../state/multisig.js\");\n\nconst accountType_js_1 = require(\"./accountType.js\");\n\nconst index_js_1 = require(\"./defaultAccountState/index.js\");\n\nconst immutableOwner_js_1 = require(\"./immutableOwner.js\");\n\nconst state_js_1 = require(\"./interestBearingMint/state.js\");\n\nconst index_js_2 = require(\"./memoTransfer/index.js\");\n\nconst mintCloseAuthority_js_1 = require(\"./mintCloseAuthority.js\");\n\nconst nonTransferable_js_1 = require(\"./nonTransferable.js\");\n\nconst index_js_3 = require(\"./transferFee/index.js\");\n\nvar ExtensionType;\n\n(function (ExtensionType) {\n  ExtensionType[ExtensionType[\"Uninitialized\"] = 0] = \"Uninitialized\";\n  ExtensionType[ExtensionType[\"TransferFeeConfig\"] = 1] = \"TransferFeeConfig\";\n  ExtensionType[ExtensionType[\"TransferFeeAmount\"] = 2] = \"TransferFeeAmount\";\n  ExtensionType[ExtensionType[\"MintCloseAuthority\"] = 3] = \"MintCloseAuthority\";\n  ExtensionType[ExtensionType[\"ConfidentialTransferMint\"] = 4] = \"ConfidentialTransferMint\";\n  ExtensionType[ExtensionType[\"ConfidentialTransferAccount\"] = 5] = \"ConfidentialTransferAccount\";\n  ExtensionType[ExtensionType[\"DefaultAccountState\"] = 6] = \"DefaultAccountState\";\n  ExtensionType[ExtensionType[\"ImmutableOwner\"] = 7] = \"ImmutableOwner\";\n  ExtensionType[ExtensionType[\"MemoTransfer\"] = 8] = \"MemoTransfer\";\n  ExtensionType[ExtensionType[\"NonTransferable\"] = 9] = \"NonTransferable\";\n  ExtensionType[ExtensionType[\"InterestBearingMint\"] = 10] = \"InterestBearingMint\";\n})(ExtensionType = exports.ExtensionType || (exports.ExtensionType = {}));\n\nexports.TYPE_SIZE = 2;\nexports.LENGTH_SIZE = 2; // NOTE: All of these should eventually use their type's Span instead of these\n// constants.  This is provided for at least creation to work.\n\nfunction getTypeLen(e) {\n  switch (e) {\n    case ExtensionType.Uninitialized:\n      return 0;\n\n    case ExtensionType.TransferFeeConfig:\n      return index_js_3.TRANSFER_FEE_CONFIG_SIZE;\n\n    case ExtensionType.TransferFeeAmount:\n      return index_js_3.TRANSFER_FEE_AMOUNT_SIZE;\n\n    case ExtensionType.MintCloseAuthority:\n      return mintCloseAuthority_js_1.MINT_CLOSE_AUTHORITY_SIZE;\n\n    case ExtensionType.ConfidentialTransferMint:\n      return 97;\n\n    case ExtensionType.ConfidentialTransferAccount:\n      return 286;\n\n    case ExtensionType.DefaultAccountState:\n      return index_js_1.DEFAULT_ACCOUNT_STATE_SIZE;\n\n    case ExtensionType.ImmutableOwner:\n      return immutableOwner_js_1.IMMUTABLE_OWNER_SIZE;\n\n    case ExtensionType.MemoTransfer:\n      return index_js_2.MEMO_TRANSFER_SIZE;\n\n    case ExtensionType.NonTransferable:\n      return nonTransferable_js_1.NON_TRANSFERABLE_SIZE;\n\n    case ExtensionType.InterestBearingMint:\n      return state_js_1.INTEREST_BEARING_MINT_CONFIG_STATE_SIZE;\n\n    default:\n      throw Error(`Unknown extension type: ${e}`);\n  }\n}\n\nexports.getTypeLen = getTypeLen;\n\nfunction getAccountTypeOfMintType(e) {\n  switch (e) {\n    case ExtensionType.TransferFeeConfig:\n      return ExtensionType.TransferFeeAmount;\n\n    case ExtensionType.ConfidentialTransferMint:\n      return ExtensionType.ConfidentialTransferAccount;\n\n    case ExtensionType.TransferFeeAmount:\n    case ExtensionType.ConfidentialTransferAccount:\n    case ExtensionType.DefaultAccountState:\n    case ExtensionType.ImmutableOwner:\n    case ExtensionType.MemoTransfer:\n    case ExtensionType.MintCloseAuthority:\n    case ExtensionType.NonTransferable:\n    case ExtensionType.Uninitialized:\n    case ExtensionType.InterestBearingMint:\n      return ExtensionType.Uninitialized;\n  }\n}\n\nexports.getAccountTypeOfMintType = getAccountTypeOfMintType;\n\nfunction getLen(extensionTypes, baseSize) {\n  if (extensionTypes.length === 0) {\n    return baseSize;\n  } else {\n    const accountLength = account_js_1.ACCOUNT_SIZE + accountType_js_1.ACCOUNT_TYPE_SIZE + extensionTypes.filter((element, i) => i === extensionTypes.indexOf(element)).map(element => getTypeLen(element) + exports.TYPE_SIZE + exports.LENGTH_SIZE).reduce((a, b) => a + b);\n\n    if (accountLength === multisig_js_1.MULTISIG_SIZE) {\n      return accountLength + exports.TYPE_SIZE;\n    } else {\n      return accountLength;\n    }\n  }\n}\n\nfunction getMintLen(extensionTypes) {\n  return getLen(extensionTypes, mint_js_1.MINT_SIZE);\n}\n\nexports.getMintLen = getMintLen;\n\nfunction getAccountLen(extensionTypes) {\n  return getLen(extensionTypes, account_js_1.ACCOUNT_SIZE);\n}\n\nexports.getAccountLen = getAccountLen;\n\nfunction getExtensionData(extension, tlvData) {\n  let extensionTypeIndex = 0;\n\n  while (extensionTypeIndex < tlvData.length) {\n    const entryType = tlvData.readUInt16LE(extensionTypeIndex);\n    const entryLength = tlvData.readUInt16LE(extensionTypeIndex + exports.TYPE_SIZE);\n    const typeIndex = extensionTypeIndex + exports.TYPE_SIZE + exports.LENGTH_SIZE;\n\n    if (entryType == extension) {\n      return tlvData.slice(typeIndex, typeIndex + entryLength);\n    }\n\n    extensionTypeIndex = typeIndex + entryLength;\n  }\n\n  return null;\n}\n\nexports.getExtensionData = getExtensionData;\n\nfunction getExtensionTypes(tlvData) {\n  const extensionTypes = [];\n  let extensionTypeIndex = 0;\n\n  while (extensionTypeIndex < tlvData.length) {\n    const entryType = tlvData.readUInt16LE(extensionTypeIndex);\n    extensionTypes.push(entryType);\n    const entryLength = tlvData.readUInt16LE(extensionTypeIndex + exports.TYPE_SIZE);\n    extensionTypeIndex += exports.TYPE_SIZE + exports.LENGTH_SIZE + entryLength;\n  }\n\n  return extensionTypes;\n}\n\nexports.getExtensionTypes = getExtensionTypes;\n\nfunction getAccountLenForMint(mint) {\n  const extensionTypes = getExtensionTypes(mint.tlvData);\n  const accountExtensions = extensionTypes.map(getAccountTypeOfMintType);\n  return getAccountLen(accountExtensions);\n}\n\nexports.getAccountLenForMint = getAccountLenForMint;","map":{"version":3,"sources":["../../../src/extensions/extensionType.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountLenForMint = exports.getExtensionTypes = exports.getExtensionData = exports.getAccountLen = exports.getMintLen = exports.getAccountTypeOfMintType = exports.getTypeLen = exports.LENGTH_SIZE = exports.TYPE_SIZE = exports.ExtensionType = void 0;\nconst account_js_1 = require(\"../state/account.js\");\nconst mint_js_1 = require(\"../state/mint.js\");\nconst multisig_js_1 = require(\"../state/multisig.js\");\nconst accountType_js_1 = require(\"./accountType.js\");\nconst index_js_1 = require(\"./defaultAccountState/index.js\");\nconst immutableOwner_js_1 = require(\"./immutableOwner.js\");\nconst state_js_1 = require(\"./interestBearingMint/state.js\");\nconst index_js_2 = require(\"./memoTransfer/index.js\");\nconst mintCloseAuthority_js_1 = require(\"./mintCloseAuthority.js\");\nconst nonTransferable_js_1 = require(\"./nonTransferable.js\");\nconst index_js_3 = require(\"./transferFee/index.js\");\nvar ExtensionType;\n(function (ExtensionType) {\n    ExtensionType[ExtensionType[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    ExtensionType[ExtensionType[\"TransferFeeConfig\"] = 1] = \"TransferFeeConfig\";\n    ExtensionType[ExtensionType[\"TransferFeeAmount\"] = 2] = \"TransferFeeAmount\";\n    ExtensionType[ExtensionType[\"MintCloseAuthority\"] = 3] = \"MintCloseAuthority\";\n    ExtensionType[ExtensionType[\"ConfidentialTransferMint\"] = 4] = \"ConfidentialTransferMint\";\n    ExtensionType[ExtensionType[\"ConfidentialTransferAccount\"] = 5] = \"ConfidentialTransferAccount\";\n    ExtensionType[ExtensionType[\"DefaultAccountState\"] = 6] = \"DefaultAccountState\";\n    ExtensionType[ExtensionType[\"ImmutableOwner\"] = 7] = \"ImmutableOwner\";\n    ExtensionType[ExtensionType[\"MemoTransfer\"] = 8] = \"MemoTransfer\";\n    ExtensionType[ExtensionType[\"NonTransferable\"] = 9] = \"NonTransferable\";\n    ExtensionType[ExtensionType[\"InterestBearingMint\"] = 10] = \"InterestBearingMint\";\n})(ExtensionType = exports.ExtensionType || (exports.ExtensionType = {}));\nexports.TYPE_SIZE = 2;\nexports.LENGTH_SIZE = 2;\n// NOTE: All of these should eventually use their type's Span instead of these\n// constants.  This is provided for at least creation to work.\nfunction getTypeLen(e) {\n    switch (e) {\n        case ExtensionType.Uninitialized:\n            return 0;\n        case ExtensionType.TransferFeeConfig:\n            return index_js_3.TRANSFER_FEE_CONFIG_SIZE;\n        case ExtensionType.TransferFeeAmount:\n            return index_js_3.TRANSFER_FEE_AMOUNT_SIZE;\n        case ExtensionType.MintCloseAuthority:\n            return mintCloseAuthority_js_1.MINT_CLOSE_AUTHORITY_SIZE;\n        case ExtensionType.ConfidentialTransferMint:\n            return 97;\n        case ExtensionType.ConfidentialTransferAccount:\n            return 286;\n        case ExtensionType.DefaultAccountState:\n            return index_js_1.DEFAULT_ACCOUNT_STATE_SIZE;\n        case ExtensionType.ImmutableOwner:\n            return immutableOwner_js_1.IMMUTABLE_OWNER_SIZE;\n        case ExtensionType.MemoTransfer:\n            return index_js_2.MEMO_TRANSFER_SIZE;\n        case ExtensionType.NonTransferable:\n            return nonTransferable_js_1.NON_TRANSFERABLE_SIZE;\n        case ExtensionType.InterestBearingMint:\n            return state_js_1.INTEREST_BEARING_MINT_CONFIG_STATE_SIZE;\n        default:\n            throw Error(`Unknown extension type: ${e}`);\n    }\n}\nexports.getTypeLen = getTypeLen;\nfunction getAccountTypeOfMintType(e) {\n    switch (e) {\n        case ExtensionType.TransferFeeConfig:\n            return ExtensionType.TransferFeeAmount;\n        case ExtensionType.ConfidentialTransferMint:\n            return ExtensionType.ConfidentialTransferAccount;\n        case ExtensionType.TransferFeeAmount:\n        case ExtensionType.ConfidentialTransferAccount:\n        case ExtensionType.DefaultAccountState:\n        case ExtensionType.ImmutableOwner:\n        case ExtensionType.MemoTransfer:\n        case ExtensionType.MintCloseAuthority:\n        case ExtensionType.NonTransferable:\n        case ExtensionType.Uninitialized:\n        case ExtensionType.InterestBearingMint:\n            return ExtensionType.Uninitialized;\n    }\n}\nexports.getAccountTypeOfMintType = getAccountTypeOfMintType;\nfunction getLen(extensionTypes, baseSize) {\n    if (extensionTypes.length === 0) {\n        return baseSize;\n    }\n    else {\n        const accountLength = account_js_1.ACCOUNT_SIZE +\n            accountType_js_1.ACCOUNT_TYPE_SIZE +\n            extensionTypes\n                .filter((element, i) => i === extensionTypes.indexOf(element))\n                .map((element) => getTypeLen(element) + exports.TYPE_SIZE + exports.LENGTH_SIZE)\n                .reduce((a, b) => a + b);\n        if (accountLength === multisig_js_1.MULTISIG_SIZE) {\n            return accountLength + exports.TYPE_SIZE;\n        }\n        else {\n            return accountLength;\n        }\n    }\n}\nfunction getMintLen(extensionTypes) {\n    return getLen(extensionTypes, mint_js_1.MINT_SIZE);\n}\nexports.getMintLen = getMintLen;\nfunction getAccountLen(extensionTypes) {\n    return getLen(extensionTypes, account_js_1.ACCOUNT_SIZE);\n}\nexports.getAccountLen = getAccountLen;\nfunction getExtensionData(extension, tlvData) {\n    let extensionTypeIndex = 0;\n    while (extensionTypeIndex < tlvData.length) {\n        const entryType = tlvData.readUInt16LE(extensionTypeIndex);\n        const entryLength = tlvData.readUInt16LE(extensionTypeIndex + exports.TYPE_SIZE);\n        const typeIndex = extensionTypeIndex + exports.TYPE_SIZE + exports.LENGTH_SIZE;\n        if (entryType == extension) {\n            return tlvData.slice(typeIndex, typeIndex + entryLength);\n        }\n        extensionTypeIndex = typeIndex + entryLength;\n    }\n    return null;\n}\nexports.getExtensionData = getExtensionData;\nfunction getExtensionTypes(tlvData) {\n    const extensionTypes = [];\n    let extensionTypeIndex = 0;\n    while (extensionTypeIndex < tlvData.length) {\n        const entryType = tlvData.readUInt16LE(extensionTypeIndex);\n        extensionTypes.push(entryType);\n        const entryLength = tlvData.readUInt16LE(extensionTypeIndex + exports.TYPE_SIZE);\n        extensionTypeIndex += exports.TYPE_SIZE + exports.LENGTH_SIZE + entryLength;\n    }\n    return extensionTypes;\n}\nexports.getExtensionTypes = getExtensionTypes;\nfunction getAccountLenForMint(mint) {\n    const extensionTypes = getExtensionTypes(mint.tlvData);\n    const accountExtensions = extensionTypes.map(getAccountTypeOfMintType);\n    return getAccountLen(accountExtensions);\n}\nexports.getAccountLenForMint = getAccountLenForMint;\n//# sourceMappingURL=extensionType.js.map"]},"metadata":{},"sourceType":"script"}