{"ast":null,"code":"import { CandyMachinesV2Client } from './CandyMachinesV2Client.mjs';\nimport { createCandyMachineV2Operation, createCandyMachineV2OperationHandler } from './operations/createCandyMachineV2.mjs';\nimport { deleteCandyMachineV2Operation, deleteCandyMachineV2OperationHandler } from './operations/deleteCandyMachineV2.mjs';\nimport { findCandyMachineV2ByAddressOperation, findCandyMachineV2ByAddressOperationHandler } from './operations/findCandyMachineV2ByAddress.mjs';\nimport { findCandyMachinesV2ByPublicKeyFieldOperation, findCandyMachinesV2ByPublicKeyFieldOperationHandler } from './operations/findCandyMachinesV2ByPublicKeyField.mjs';\nimport { findMintedNftsByCandyMachineV2Operation, findMintedNftsByCandyMachineV2OperationHandler } from './operations/findMintedNftsByCandyMachineV2.mjs';\nimport { insertItemsToCandyMachineV2Operation, InsertItemsToCandyMachineV2OperationHandler } from './operations/insertItemsToCandyMachineV2.mjs';\nimport { mintCandyMachineV2Operation, mintCandyMachineV2OperationHandler } from './operations/mintCandyMachineV2.mjs';\nimport { updateCandyMachineV2Operation, updateCandyMachineV2OperationHandler } from './operations/updateCandyMachineV2.mjs';\n/** @group Plugins */\n\nconst candyMachineV2Module = () => ({\n  install(metaplex) {\n    const op = metaplex.operations();\n    op.register(createCandyMachineV2Operation, createCandyMachineV2OperationHandler);\n    op.register(deleteCandyMachineV2Operation, deleteCandyMachineV2OperationHandler);\n    op.register(findCandyMachineV2ByAddressOperation, findCandyMachineV2ByAddressOperationHandler);\n    op.register(findCandyMachinesV2ByPublicKeyFieldOperation, findCandyMachinesV2ByPublicKeyFieldOperationHandler);\n    op.register(findMintedNftsByCandyMachineV2Operation, findMintedNftsByCandyMachineV2OperationHandler);\n    op.register(insertItemsToCandyMachineV2Operation, InsertItemsToCandyMachineV2OperationHandler);\n    op.register(mintCandyMachineV2Operation, mintCandyMachineV2OperationHandler);\n    op.register(updateCandyMachineV2Operation, updateCandyMachineV2OperationHandler);\n\n    metaplex.candyMachinesV2 = function () {\n      return new CandyMachinesV2Client(this);\n    };\n  }\n\n});\n\nexport { candyMachineV2Module };","map":{"version":3,"sources":["../../../../src/plugins/candyMachineV2Module/plugin.ts"],"names":["candyMachineV2Module","install","metaplex","op","operations","register","createCandyMachineV2Operation","createCandyMachineV2OperationHandler","deleteCandyMachineV2Operation","deleteCandyMachineV2OperationHandler","findCandyMachineV2ByAddressOperation","findCandyMachineV2ByAddressOperationHandler","findCandyMachinesV2ByPublicKeyFieldOperation","findCandyMachinesV2ByPublicKeyFieldOperationHandler","findMintedNftsByCandyMachineV2Operation","findMintedNftsByCandyMachineV2OperationHandler","insertItemsToCandyMachineV2Operation","InsertItemsToCandyMachineV2OperationHandler","mintCandyMachineV2Operation","mintCandyMachineV2OperationHandler","updateCandyMachineV2Operation","updateCandyMachineV2OperationHandler","candyMachinesV2","CandyMachinesV2Client"],"mappings":";;;;;;;;;AAsBA;;AACO,MAAMA,oBAAoB,GAAG,OAAuB;EACzDC,OAAO,CAACC,QAAD,EAAqB;IAC1B,MAAMC,EAAE,GAAGD,QAAQ,CAACE,UAATF,EAAX;IACAC,EAAE,CAACE,QAAHF,CACEG,6BADFH,EAEEI,oCAFFJ;IAIAA,EAAE,CAACE,QAAHF,CACEK,6BADFL,EAEEM,oCAFFN;IAIAA,EAAE,CAACE,QAAHF,CACEO,oCADFP,EAEEQ,2CAFFR;IAIAA,EAAE,CAACE,QAAHF,CACES,4CADFT,EAEEU,mDAFFV;IAIAA,EAAE,CAACE,QAAHF,CACEW,uCADFX,EAEEY,8CAFFZ;IAIAA,EAAE,CAACE,QAAHF,CACEa,oCADFb,EAEEc,2CAFFd;IAIAA,EAAE,CAACE,QAAHF,CACEe,2BADFf,EAEEgB,kCAFFhB;IAIAA,EAAE,CAACE,QAAHF,CACEiB,6BADFjB,EAEEkB,oCAFFlB;;IAKAD,QAAQ,CAACoB,eAATpB,GAA2B,YAAY;MACrC,OAAO,IAAIqB,qBAAJ,CAA0B,IAA1B,CAAP;IACD,CAFDrB;EAGF;;AAvCyD,CAAvB,CAA7B","sourcesContent":["import { CandyMachinesV2Client } from './CandyMachinesV2Client';\nimport {\n  createCandyMachineV2Operation,\n  createCandyMachineV2OperationHandler,\n  deleteCandyMachineV2Operation,\n  deleteCandyMachineV2OperationHandler,\n  findCandyMachineV2ByAddressOperation,\n  findCandyMachineV2ByAddressOperationHandler,\n  findCandyMachinesV2ByPublicKeyFieldOperation,\n  findCandyMachinesV2ByPublicKeyFieldOperationHandler,\n  findMintedNftsByCandyMachineV2Operation,\n  findMintedNftsByCandyMachineV2OperationHandler,\n  insertItemsToCandyMachineV2Operation,\n  InsertItemsToCandyMachineV2OperationHandler,\n  mintCandyMachineV2Operation,\n  mintCandyMachineV2OperationHandler,\n  updateCandyMachineV2Operation,\n  updateCandyMachineV2OperationHandler,\n} from './operations';\nimport type { Metaplex } from '@/Metaplex';\nimport { MetaplexPlugin } from '@/types';\n\n/** @group Plugins */\nexport const candyMachineV2Module = (): MetaplexPlugin => ({\n  install(metaplex: Metaplex) {\n    const op = metaplex.operations();\n    op.register(\n      createCandyMachineV2Operation,\n      createCandyMachineV2OperationHandler\n    );\n    op.register(\n      deleteCandyMachineV2Operation,\n      deleteCandyMachineV2OperationHandler\n    );\n    op.register(\n      findCandyMachineV2ByAddressOperation,\n      findCandyMachineV2ByAddressOperationHandler\n    );\n    op.register(\n      findCandyMachinesV2ByPublicKeyFieldOperation,\n      findCandyMachinesV2ByPublicKeyFieldOperationHandler\n    );\n    op.register(\n      findMintedNftsByCandyMachineV2Operation,\n      findMintedNftsByCandyMachineV2OperationHandler\n    );\n    op.register(\n      insertItemsToCandyMachineV2Operation,\n      InsertItemsToCandyMachineV2OperationHandler\n    );\n    op.register(\n      mintCandyMachineV2Operation,\n      mintCandyMachineV2OperationHandler\n    );\n    op.register(\n      updateCandyMachineV2Operation,\n      updateCandyMachineV2OperationHandler\n    );\n\n    metaplex.candyMachinesV2 = function () {\n      return new CandyMachinesV2Client(this);\n    };\n  },\n});\n\ndeclare module '../../Metaplex' {\n  interface Metaplex {\n    candyMachinesV2(): CandyMachinesV2Client;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}