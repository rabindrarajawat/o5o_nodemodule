{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.amountToUiAmount = void 0;\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst constants_js_1 = require(\"../constants.js\");\n\nconst amountToUiAmount_js_1 = require(\"../instructions/amountToUiAmount.js\");\n/**\n * Amount as a string using mint-prescribed decimals\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param mint           Mint for the account\n * @param amount         Amount of tokens to be converted to Ui Amount\n * @param programId      SPL Token program account\n *\n * @return Ui Amount generated\n */\n\n\nfunction amountToUiAmount(connection, payer, mint, amount) {\n  let programId = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : constants_js_1.TOKEN_PROGRAM_ID;\n  return __awaiter(this, void 0, void 0, function* () {\n    const transaction = new web3_js_1.Transaction().add((0, amountToUiAmount_js_1.createAmountToUiAmountInstruction)(mint, amount, programId));\n    const {\n      returnData,\n      err\n    } = (yield connection.simulateTransaction(transaction, [payer], false)).value;\n\n    if (returnData === null || returnData === void 0 ? void 0 : returnData.data) {\n      return Buffer.from(returnData.data[0], returnData.data[1]).toString('utf-8');\n    }\n\n    return err;\n  });\n}\n\nexports.amountToUiAmount = amountToUiAmount;","map":{"version":3,"sources":["../../../src/actions/amountToUiAmount.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,cAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,qBAAA,GAAA,OAAA,CAAA,qCAAA,CAAA;AAEA;;;;;;;;;;AAUG;;;AACH,SAAsB,gBAAtB,CACI,UADJ,EAEI,KAFJ,EAGI,IAHJ,EAII,MAJJ,EAKgC;EAAA,IAA5B,SAA4B,uEAAhB,cAAA,CAAA,gBAAgB;;IAE5B,MAAM,WAAW,GAAG,IAAI,SAAA,CAAA,WAAJ,GAAkB,GAAlB,CAAsB,CAAA,GAAA,qBAAA,CAAA,iCAAA,EAAkC,IAAlC,EAAwC,MAAxC,EAAgD,SAAhD,CAAtB,CAApB;IACA,MAAM;MAAE,UAAF;MAAc;IAAd,IAAsB,CAAC,MAAM,UAAU,CAAC,mBAAX,CAA+B,WAA/B,EAA4C,CAAC,KAAD,CAA5C,EAAqD,KAArD,CAAP,EAAoE,KAAhG;;IACA,IAAI,UAAU,KAAA,IAAV,IAAA,UAAU,KAAA,KAAA,CAAV,GAAU,KAAA,CAAV,GAAA,UAAU,CAAE,IAAhB,EAAsB;MAClB,OAAO,MAAM,CAAC,IAAP,CAAY,UAAU,CAAC,IAAX,CAAgB,CAAhB,CAAZ,EAAgC,UAAU,CAAC,IAAX,CAAgB,CAAhB,CAAhC,EAAoD,QAApD,CAA6D,OAA7D,CAAP;IACH;;IACD,OAAO,GAAP;EACH,C;AAAA;;AAbD,OAAA,CAAA,gBAAA,GAAA,gBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.amountToUiAmount = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst constants_js_1 = require(\"../constants.js\");\nconst amountToUiAmount_js_1 = require(\"../instructions/amountToUiAmount.js\");\n/**\n * Amount as a string using mint-prescribed decimals\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction fees\n * @param mint           Mint for the account\n * @param amount         Amount of tokens to be converted to Ui Amount\n * @param programId      SPL Token program account\n *\n * @return Ui Amount generated\n */\nfunction amountToUiAmount(connection, payer, mint, amount, programId = constants_js_1.TOKEN_PROGRAM_ID) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const transaction = new web3_js_1.Transaction().add((0, amountToUiAmount_js_1.createAmountToUiAmountInstruction)(mint, amount, programId));\n        const { returnData, err } = (yield connection.simulateTransaction(transaction, [payer], false)).value;\n        if (returnData === null || returnData === void 0 ? void 0 : returnData.data) {\n            return Buffer.from(returnData.data[0], returnData.data[1]).toString('utf-8');\n        }\n        return err;\n    });\n}\nexports.amountToUiAmount = amountToUiAmount;\n//# sourceMappingURL=amountToUiAmount.js.map"]},"metadata":{},"sourceType":"script"}