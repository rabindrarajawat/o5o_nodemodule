{"ast":null,"code":"import { PublicKey } from '@solana/web3.js';\n/** Address of the SPL Token program */\n\nexport const TOKEN_PROGRAM_ID = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\n/** Address of the SPL Token 2022 program */\n\nexport const TOKEN_2022_PROGRAM_ID = new PublicKey('TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb');\n/** Address of the SPL Associated Token Account program */\n\nexport const ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\n/** Address of the special mint for wrapped native SOL in spl-token */\n\nexport const NATIVE_MINT = new PublicKey('So11111111111111111111111111111111111111112');\n/** Address of the special mint for wrapped native SOL in spl-token-2022 */\n\nexport const NATIVE_MINT_2022 = new PublicKey('9pan9bMn5HatX4EJdBwg9VgCa7Uz5HL8N1m5D3NdXejP');\n/** Check that the token program provided is not `Tokenkeg...`, useful when using extensions */\n\nexport function programSupportsExtensions(programId) {\n  if (programId === TOKEN_PROGRAM_ID) {\n    return false;\n  } else {\n    return true;\n  }\n}","map":{"version":3,"sources":["../../src/constants.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,iBAA1B;AAEA;;AACA,OAAO,MAAM,gBAAgB,GAAG,IAAI,SAAJ,CAAc,6CAAd,CAAzB;AAEP;;AACA,OAAO,MAAM,qBAAqB,GAAG,IAAI,SAAJ,CAAc,6CAAd,CAA9B;AAEP;;AACA,OAAO,MAAM,2BAA2B,GAAG,IAAI,SAAJ,CAAc,8CAAd,CAApC;AAEP;;AACA,OAAO,MAAM,WAAW,GAAG,IAAI,SAAJ,CAAc,6CAAd,CAApB;AAEP;;AACA,OAAO,MAAM,gBAAgB,GAAG,IAAI,SAAJ,CAAc,8CAAd,CAAzB;AAEP;;AACA,OAAM,SAAU,yBAAV,CAAoC,SAApC,EAAwD;EAC1D,IAAI,SAAS,KAAK,gBAAlB,EAAoC;IAChC,OAAO,KAAP;EACH,CAFD,MAEO;IACH,OAAO,IAAP;EACH;AACJ","sourceRoot":"","sourcesContent":["import { PublicKey } from '@solana/web3.js';\n/** Address of the SPL Token program */\nexport const TOKEN_PROGRAM_ID = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\n/** Address of the SPL Token 2022 program */\nexport const TOKEN_2022_PROGRAM_ID = new PublicKey('TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb');\n/** Address of the SPL Associated Token Account program */\nexport const ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\n/** Address of the special mint for wrapped native SOL in spl-token */\nexport const NATIVE_MINT = new PublicKey('So11111111111111111111111111111111111111112');\n/** Address of the special mint for wrapped native SOL in spl-token-2022 */\nexport const NATIVE_MINT_2022 = new PublicKey('9pan9bMn5HatX4EJdBwg9VgCa7Uz5HL8N1m5D3NdXejP');\n/** Check that the token program provided is not `Tokenkeg...`, useful when using extensions */\nexport function programSupportsExtensions(programId) {\n    if (programId === TOKEN_PROGRAM_ID) {\n        return false;\n    }\n    else {\n        return true;\n    }\n}\n//# sourceMappingURL=constants.js.map"]},"metadata":{},"sourceType":"module"}