{"ast":null,"code":"import { toPublicKey } from '../../types/PublicKey.mjs';\n\nconst toMintAddress = value => {\n  return typeof value === 'object' && 'mintAddress' in value ? value.mintAddress : toPublicKey(value);\n};\n\nexport { toMintAddress };","map":{"version":3,"sources":["../../../../src/plugins/nftModule/helpers.ts"],"names":["toMintAddress","value","mintAddress","toPublicKey"],"mappings":";;AAaaA,MAAAA,aAAa,GACxBC,KAAuC,IACzB;EACd,OAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,iBAAiBA,KAA9C,GACHA,KAAK,CAACC,WADH,GAEHC,WAAW,CAACF,KAAD,CAFf;AAGF,CANaD","sourcesContent":["import type { PublicKey } from '@solana/web3.js';\nimport type { Nft, NftWithToken, Sft, SftWithToken } from './models';\nimport type { Metadata } from './models/Metadata';\nimport { PublicKeyValues, toPublicKey } from '@/types';\n\nexport type HasMintAddress =\n  | Nft\n  | Sft\n  | NftWithToken\n  | SftWithToken\n  | Metadata\n  | PublicKey;\n\nexport const toMintAddress = (\n  value: PublicKeyValues | HasMintAddress\n): PublicKey => {\n  return typeof value === 'object' && 'mintAddress' in value\n    ? value.mintAddress\n    : toPublicKey(value);\n};\n"]},"metadata":{},"sourceType":"module"}