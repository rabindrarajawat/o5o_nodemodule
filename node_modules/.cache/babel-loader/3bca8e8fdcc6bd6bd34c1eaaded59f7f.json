{"ast":null,"code":"var _jsxFileName = \"D:\\\\software\\\\o5o BNB\\\\o5o-staking-frontend\\\\src\\\\components\\\\bridge\\\\main.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport { ethers } from \"ethers\";\nimport Contract from './Contract';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config(); //get .env params\n\n\nconst RpcHttpUrl = process.env.REACT_APP_RPC_HTTP_URL;\nconst ReceiverAddress = process.env.REACT_APP_RECEIVER_ADDRESS;\nconst SolanaAPI = process.env.REACT_APP_SOLANA_API;\nconst AuthAPI = process.env.REACT_APP_AUTH_API;\nconst SolanaRPCURL = process.env.REACT_APP_SOLANA_EXPLORER_RPC; //create web3 connection\n\nconst web3Eth = new Web3(new Web3.providers.HttpProvider(RpcHttpUrl));\n\nfunction Main(props) {\n  _s();\n\n  //set params\n  const [transferAmount, setTransferAmount] = useState(\"\");\n  const [receiverAddress, setReceiverAddress] = useState(\"\");\n  const [showResults, setShowResults] = useState(false);\n  const [hideButton, setHideButton] = useState(false);\n  const [isWalletConnected, setIsWalletConnected] = useState(false);\n  const [splTokenBalance, setSplTokenBalance] = useState(\"\");\n  const [showError, setShowError] = useState(false);\n  var signer;\n  useEffect(() => {}, []);\n\n  try {\n    if (typeof window !== 'undefined') {\n      if (window.ethereum) {\n        window.ethereum.enable();\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        signer = provider.getSigner();\n\n        if (signer.provider.provider.selectedAddress) {\n          provider.getBalance(signer.provider.provider.selectedAddress).then(balance => {\n            setIsWalletConnected(true);\n            const balanceInEth = ethers.utils.formatEther(balance);\n            console.log(`balance: ${balanceInEth} ETH`);\n\n            (async () => {\n              let solanaExplorerRPC = SolanaRPCURL; //process.env.SOLANA_EXPLORER_RPC;            \n\n              console.log(\"solanaExplorerRPC: \", solanaExplorerRPC);\n              let payload = {\n                \"method\": \"getMultipleAccounts\",\n                \"jsonrpc\": \"2.0\",\n                \"params\": [[process.env.REACT_APP_SOLANA_TOKEN], {\n                  \"encoding\": \"jsonParsed\",\n                  \"commitment\": \"confirmed\"\n                }],\n                \"id\": \"a7f4cf4d-35c5-43cf-b47c-a4a6bbdd2332\"\n              };\n              let signature = await axios.post(solanaExplorerRPC, payload);\n              setSplTokenBalance(signature.data.result.value[0].data.parsed.info.tokenAmount.uiAmountString);\n              console.log(\"result: \", signature.data.result.value[0].data.parsed.info.tokenAmount.uiAmountString);\n            })();\n          });\n        }\n      } else {\n        console.log(\"Error\");\n      }\n    }\n  } catch (error) {\n    console.log(\"getAccount ~ error\", error);\n  }\n\n  const connectWalletHandler = () => {\n    if (typeof window !== undefined) {\n      if (window.ethereum && window.ethereum.isMetaMask) {\n        console.log(\"MetaMask Here!\");\n        window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        }).then(result => {\n          //accountChangedHandler(result[0]);\n          console.log(\"ðŸš€ ~ file: Navbar.js ~ line 24 ~ .then ~ result[0]\", result[0]);\n          setIsWalletConnected(true); //setConnButtonText(\"Connected\");\n          //getAccountBalance(result[0]);\n        }).catch(error => {//setErrorMessage(error.message);\n        });\n      } else {\n        console.log(\"Need to install MetaMask\"); //setErrorMessage(\"Please install MetaMask browser extension to interact\");\n      }\n    }\n  };\n\n  async function transfer() {\n    //console.log(\"ReceiverAddress: \", ReceiverAddress);\n    setShowError(false);\n    console.log(\"Transferring the tokens...\");\n\n    if (Number(transferAmount) > Number(splTokenBalance)) {\n      setShowError(true);\n      throw new Error(\"Don't have enough amount in pool account!\");\n    }\n\n    console.log(\"Transaction is valid\");\n    const value = web3Eth.utils.toWei(transferAmount.toString(), 'Ether');\n    const hash = await Contract.transfer(ReceiverAddress, value);\n    setHideButton(true);\n    console.log(\"hash: \", hash);\n    console.log(\"receiverAddress: \", receiverAddress);\n    console.log('Authorization: ', 'Bearer ' + localStorage.getItem(\"token\").replaceAll('\"', ''));\n    fetch(AuthAPI + \"/setBridgeInfo\", {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem(\"token\").replaceAll('\"', '')\n      },\n      body: JSON.stringify({\n        solanaAddress: receiverAddress != '' ? receiverAddress : localStorage.getItem(\"wallet\"),\n        evmAddress: signer.provider.provider.selectedAddress,\n        amount: transferAmount\n      })\n    });\n    await fetch(SolanaAPI, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem(\"token\").replaceAll('\"', '')\n      },\n      body: JSON.stringify({\n        address: receiverAddress != '' ? receiverAddress : localStorage.getItem(\"wallet\"),\n        evmAddress: signer.provider.provider.selectedAddress,\n        amount: transferAmount\n      })\n    });\n    setShowResults(true);\n    console.log(\"Transferred successfully!\");\n    setTimeout(function () {\n      setHideButton(false);\n      setShowResults(false);\n    }.bind(this), 10000);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: \"30px\",\n        \"fontFamily\": \"impact\"\n      },\n      children: \"Welcome to the O5O Token Bridge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: \"16px\"\n      },\n      children: [\"Here you will be able to cross bridge your $O5O token to SOL \", !isWalletConnected && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectWalletHandler,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          class: \"mt-1\",\n          src: \"/metamask_icon.svg\",\n          style: {\n            \"width\": \"40px\",\n            height: \"30px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: \"16px\",\n        \"paddingBottom\": \"10px\",\n        \"fontFamily\": \"impact\"\n      },\n      children: \"AVAILABLE $O5O SOLANA SPL TOKENS TO BRIDGE:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        disabled: true,\n        style: {\n          height: \"1.5vw\",\n          background: \"lightgray\"\n        },\n        value: splTokenBalance,\n        placeholder: \"000....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: \"16px\",\n        \"paddingBottom\": \"10px\",\n        \"fontFamily\": \"impact\"\n      },\n      children: \"Your Solana Wallet to receive $O5O:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        style: {\n          height: \"1.5vw\"\n        },\n        value: localStorage.getItem(\"wallet\"),\n        onChange: event => setReceiverAddress(event.target.value),\n        placeholder: \"0x0000.....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: \"16px\",\n        \"paddingBottom\": \"10px\",\n        \"fontFamily\": \"impact\"\n      },\n      children: \"Total of your $O5O Tokens to bridge from Binance Smart Chain to Solana:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        style: {\n          height: \"1.5vw\"\n        },\n        onChange: event => setTransferAmount(event.target.value),\n        placeholder: \"000....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), \" $O5O\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!hideButton && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            width: \"440px\"\n          },\n          className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded\",\n          onClick: () => transfer(),\n          children: \"Bridge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/loading.gif\",\n          style: {\n            width: \"50px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), \"Processing your request, please do not refresh the page.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }, this), showResults && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"green\",\n          \"fontSize\": \"16px\"\n        },\n        children: \"Tokens transferred successfully!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }, this), showError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\",\n          \"fontSize\": \"16px\"\n        },\n        children: \"Don't have enough amount in pool account!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"OLRRkYP6FyVPzFz8L9LYRglVONI=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","Web3","ethers","Contract","axios","require","config","RpcHttpUrl","process","env","REACT_APP_RPC_HTTP_URL","ReceiverAddress","REACT_APP_RECEIVER_ADDRESS","SolanaAPI","REACT_APP_SOLANA_API","AuthAPI","REACT_APP_AUTH_API","SolanaRPCURL","REACT_APP_SOLANA_EXPLORER_RPC","web3Eth","providers","HttpProvider","Main","props","transferAmount","setTransferAmount","receiverAddress","setReceiverAddress","showResults","setShowResults","hideButton","setHideButton","isWalletConnected","setIsWalletConnected","splTokenBalance","setSplTokenBalance","showError","setShowError","signer","window","ethereum","enable","provider","Web3Provider","getSigner","selectedAddress","getBalance","then","balance","balanceInEth","utils","formatEther","console","log","solanaExplorerRPC","payload","REACT_APP_SOLANA_TOKEN","signature","post","data","result","value","parsed","info","tokenAmount","uiAmountString","error","connectWalletHandler","undefined","isMetaMask","request","method","catch","transfer","Number","Error","toWei","toString","hash","localStorage","getItem","replaceAll","fetch","headers","body","JSON","stringify","solanaAddress","evmAddress","amount","address","setTimeout","bind","fontSize","height","background","event","target","width","color"],"sources":["D:/software/o5o BNB/o5o-staking-frontend/src/components/bridge/main.component.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport { ethers } from \"ethers\";\r\nimport Contract from './Contract';\r\nimport axios from \"axios\";\r\nrequire('dotenv').config();\r\n\r\n//get .env params\r\nconst RpcHttpUrl = process.env.REACT_APP_RPC_HTTP_URL;\r\nconst ReceiverAddress = process.env.REACT_APP_RECEIVER_ADDRESS;\r\nconst SolanaAPI = process.env.REACT_APP_SOLANA_API;\r\nconst AuthAPI = process.env.REACT_APP_AUTH_API;\r\nconst SolanaRPCURL = process.env.REACT_APP_SOLANA_EXPLORER_RPC;\r\n\r\n//create web3 connection\r\nconst web3Eth = new Web3(new Web3.providers.HttpProvider(RpcHttpUrl));\r\n\r\nfunction Main(props) {\r\n    //set params\r\n    const [transferAmount, setTransferAmount] = useState(\"\");\r\n    const [receiverAddress, setReceiverAddress] = useState(\"\");\r\n    const [showResults, setShowResults] = useState(false);\r\n    const [hideButton, setHideButton] = useState(false);\r\n    const [isWalletConnected, setIsWalletConnected] = useState(false);\r\n    const [splTokenBalance, setSplTokenBalance] = useState(\"\");\r\n    const [showError, setShowError] = useState(false);\r\n    \r\n    var signer;\r\n    \r\n    useEffect(() => {        \r\n    }, [])\r\n    try {        \r\n        if (typeof window !== 'undefined') {\r\n            if (window.ethereum) {\r\n                window.ethereum.enable();\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum);                \r\n                signer = provider.getSigner();\r\n                if (signer.provider.provider.selectedAddress) {                    \r\n                    provider.getBalance(signer.provider.provider.selectedAddress).then((balance) => {                       \r\n                        setIsWalletConnected(true);\r\n                        const balanceInEth = ethers.utils.formatEther(balance);\r\n                        console.log(`balance: ${balanceInEth} ETH`);                                                \r\n                        (async()=>{\r\n                            let solanaExplorerRPC = SolanaRPCURL;//process.env.SOLANA_EXPLORER_RPC;            \r\n                            console.log(\"solanaExplorerRPC: \", solanaExplorerRPC);\r\n                            let payload = {\"method\":\"getMultipleAccounts\",\"jsonrpc\":\"2.0\",\r\n                            \"params\":[[process.env.REACT_APP_SOLANA_TOKEN],\r\n                            {\"encoding\":\"jsonParsed\",\"commitment\":\"confirmed\"}],\r\n                            \"id\":\"a7f4cf4d-35c5-43cf-b47c-a4a6bbdd2332\"};\r\n                            let signature = await axios.post(solanaExplorerRPC, payload);\r\n                            setSplTokenBalance(signature.data.result.value[0].data.parsed.info.tokenAmount.uiAmountString);\r\n                            console.log(\"result: \", signature.data.result.value[0].data.parsed.info.tokenAmount.uiAmountString);\r\n                        })();\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                console.log(\"Error\")\r\n            }            \r\n        }\r\n    } catch (error) {\r\n        console.log(\"getAccount ~ error\", error)\r\n}\r\n\r\nconst connectWalletHandler = () => {\r\n    if (typeof window !== undefined) {\r\n        if (window.ethereum && window.ethereum.isMetaMask) {\r\n            console.log(\"MetaMask Here!\");\r\n            window.ethereum\r\n                .request({ method: \"eth_requestAccounts\" })\r\n                .then((result) => {\r\n                    //accountChangedHandler(result[0]);\r\n                    console.log(\"ðŸš€ ~ file: Navbar.js ~ line 24 ~ .then ~ result[0]\", result[0])\r\n                    setIsWalletConnected(true);\r\n                    //setConnButtonText(\"Connected\");\r\n                    //getAccountBalance(result[0]);\r\n                })\r\n                .catch((error) => {\r\n                    //setErrorMessage(error.message);\r\n                });\r\n        } else {\r\n            console.log(\"Need to install MetaMask\");\r\n            //setErrorMessage(\"Please install MetaMask browser extension to interact\");\r\n        }\r\n    }\r\n};\r\n\r\nasync function transfer(){\r\n    //console.log(\"ReceiverAddress: \", ReceiverAddress);\r\n    setShowError(false);\r\n    console.log(\"Transferring the tokens...\");\r\n    if(Number(transferAmount) > Number(splTokenBalance)){\r\n        setShowError(true);\r\n        throw new Error(\"Don't have enough amount in pool account!\");\r\n    }\r\n    console.log(\"Transaction is valid\");\r\n    const value = web3Eth.utils.toWei(transferAmount.toString(), 'Ether');\r\n    const hash = await Contract.transfer(ReceiverAddress,value);\r\n    setHideButton(true);\r\n    console.log(\"hash: \", hash);  \r\n    console.log(\"receiverAddress: \", receiverAddress);  \r\n    console.log('Authorization: ', 'Bearer '+localStorage.getItem(\"token\").replaceAll('\"', ''));\r\n    fetch(AuthAPI+\"/setBridgeInfo\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization':'Bearer '+localStorage.getItem(\"token\").replaceAll('\"', '')\r\n        },\r\n        body: JSON.stringify({\r\n            solanaAddress:receiverAddress != '' ? receiverAddress : localStorage.getItem(\"wallet\"),\r\n            evmAddress:signer.provider.provider.selectedAddress,\r\n            amount:transferAmount,\r\n        })\r\n    });\r\n    await fetch(SolanaAPI, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization':'Bearer '+localStorage.getItem(\"token\").replaceAll('\"', '')\r\n        },\r\n        body: JSON.stringify({\r\n            address:receiverAddress != '' ? receiverAddress : localStorage.getItem(\"wallet\"),\r\n            evmAddress:signer.provider.provider.selectedAddress,\r\n            amount:transferAmount,\r\n        })\r\n    });\r\n    setShowResults(true);\r\n    console.log(\"Transferred successfully!\");\r\n    setTimeout(\r\n        function() {\r\n            setHideButton(false);\r\n            setShowResults(false);\r\n        }\r\n        .bind(this),\r\n        10000\r\n    );\r\n}\r\n    return (\r\n        <div>\r\n            <br />\r\n            <div style={{ fontSize: \"30px\", \"fontFamily\":\"impact\" }}>\r\n                Welcome to the O5O Token Bridge\r\n            </div>\r\n            <div style={{ fontSize: \"16px\" }}>\r\n                Here you will be able to cross bridge your $O5O token to SOL {\r\n                !isWalletConnected && ( \r\n                    <button onClick={connectWalletHandler}><img\r\n                    class='mt-1'\r\n                    src='/metamask_icon.svg'\r\n                    style={{\"width\":\"40px\", height:\"30px\"}} />\r\n                    </button>\r\n                )}\r\n            </div>            \r\n            <br/>\r\n            <div style={{fontSize:\"16px\", \"paddingBottom\":\"10px\", \"fontFamily\":\"impact\"}}>\r\n                AVAILABLE $O5O SOLANA SPL TOKENS TO BRIDGE:\r\n            </div>\r\n            <div>\r\n                <input\r\n                    type=\"text\"                   \r\n                    disabled \r\n                    style={{height:\"1.5vw\",background:\"lightgray\"}}\r\n                    value = {splTokenBalance}\r\n                    placeholder=\"000....\"\r\n                />\r\n            </div>\r\n            <br/>\r\n            <div style={{fontSize:\"16px\", \"paddingBottom\":\"10px\", \"fontFamily\":\"impact\"}}>\r\n            Your Solana Wallet to receive $O5O:\r\n            </div>\r\n            <div>\r\n                <input\r\n                    type=\"text\"                    \r\n                    style={{height:\"1.5vw\"}}\r\n                    value = {localStorage.getItem(\"wallet\")}\r\n                    onChange={(event) =>\r\n                        setReceiverAddress(event.target.value)\r\n                    }\r\n                    placeholder=\"0x0000.....\"\r\n                />\r\n            </div>\r\n            <br />\r\n            <div style={{ fontSize: \"16px\", \"paddingBottom\":\"10px\", \"fontFamily\":\"impact\" }}>\r\n                Total of your $O5O Tokens to bridge from Binance Smart Chain to Solana:\r\n            </div>\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    style={{ height: \"1.5vw\"}}\r\n                    onChange={(event) =>\r\n                        setTransferAmount(event.target.value)\r\n                    }\r\n                    placeholder=\"000....\"\r\n                /> $O5O\r\n            </div>\r\n            <br />\r\n            <div>\r\n            {!hideButton && (\r\n                    <div>\r\n                        <button \r\n                            type=\"submit\"\r\n                            style={{width:\"440px\"}}\r\n                            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded\"\r\n                            onClick={() => transfer()}\r\n                        >Bridge</button>\r\n                    </div>)\r\n                }\r\n                {/* {hideButton && !showResults && ( */}\r\n                    <div>\r\n                    <img src=\"/loading.gif\" style={{width:\"50px\"}}/> \r\n                    Processing your request, please do not refresh the page.\r\n                    </div>                    \r\n                 {/* )} */}\r\n                {showResults && (\r\n                    \r\n                    <div style={{color: \"green\", \"fontSize\": \"16px\"}}>\r\n                        Tokens transferred successfully!!!\r\n                    </div>)\r\n                }\r\n                {showError && (\r\n                    \r\n                    <div style={{color: \"red\", \"fontSize\": \"16px\"}}>\r\n                        Don't have enough amount in pool account!\r\n                    </div>)\r\n                }\r\n         </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,G,CAEA;;;AACA,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,sBAA/B;AACA,MAAMC,eAAe,GAAGH,OAAO,CAACC,GAAR,CAAYG,0BAApC;AACA,MAAMC,SAAS,GAAGL,OAAO,CAACC,GAAR,CAAYK,oBAA9B;AACA,MAAMC,OAAO,GAAGP,OAAO,CAACC,GAAR,CAAYO,kBAA5B;AACA,MAAMC,YAAY,GAAGT,OAAO,CAACC,GAAR,CAAYS,6BAAjC,C,CAEA;;AACA,MAAMC,OAAO,GAAG,IAAIlB,IAAJ,CAAS,IAAIA,IAAI,CAACmB,SAAL,CAAeC,YAAnB,CAAgCd,UAAhC,CAAT,CAAhB;;AAEA,SAASe,IAAT,CAAcC,KAAd,EAAqB;EAAA;;EACjB;EACA,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsC1B,QAAQ,CAAC,EAAD,CAApD;EACA,MAAM,CAAC2B,eAAD,EAAkBC,kBAAlB,IAAwC5B,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAAC6B,WAAD,EAAcC,cAAd,IAAgC9B,QAAQ,CAAC,KAAD,CAA9C;EACA,MAAM,CAAC+B,UAAD,EAAaC,aAAb,IAA8BhC,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAM,CAACiC,iBAAD,EAAoBC,oBAApB,IAA4ClC,QAAQ,CAAC,KAAD,CAA1D;EACA,MAAM,CAACmC,eAAD,EAAkBC,kBAAlB,IAAwCpC,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACqC,SAAD,EAAYC,YAAZ,IAA4BtC,QAAQ,CAAC,KAAD,CAA1C;EAEA,IAAIuC,MAAJ;EAEAtC,SAAS,CAAC,MAAM,CACf,CADQ,EACN,EADM,CAAT;;EAEA,IAAI;IACA,IAAI,OAAOuC,MAAP,KAAkB,WAAtB,EAAmC;MAC/B,IAAIA,MAAM,CAACC,QAAX,EAAqB;QACjBD,MAAM,CAACC,QAAP,CAAgBC,MAAhB;QACA,MAAMC,QAAQ,GAAG,IAAIxC,MAAM,CAACkB,SAAP,CAAiBuB,YAArB,CAAkCJ,MAAM,CAACC,QAAzC,CAAjB;QACAF,MAAM,GAAGI,QAAQ,CAACE,SAAT,EAAT;;QACA,IAAIN,MAAM,CAACI,QAAP,CAAgBA,QAAhB,CAAyBG,eAA7B,EAA8C;UAC1CH,QAAQ,CAACI,UAAT,CAAoBR,MAAM,CAACI,QAAP,CAAgBA,QAAhB,CAAyBG,eAA7C,EAA8DE,IAA9D,CAAoEC,OAAD,IAAa;YAC5Ef,oBAAoB,CAAC,IAAD,CAApB;YACA,MAAMgB,YAAY,GAAG/C,MAAM,CAACgD,KAAP,CAAaC,WAAb,CAAyBH,OAAzB,CAArB;YACAI,OAAO,CAACC,GAAR,CAAa,YAAWJ,YAAa,MAArC;;YACA,CAAC,YAAS;cACN,IAAIK,iBAAiB,GAAGrC,YAAxB,CADM,CAC+B;;cACrCmC,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCC,iBAAnC;cACA,IAAIC,OAAO,GAAG;gBAAC,UAAS,qBAAV;gBAAgC,WAAU,KAA1C;gBACd,UAAS,CAAC,CAAC/C,OAAO,CAACC,GAAR,CAAY+C,sBAAb,CAAD,EACT;kBAAC,YAAW,YAAZ;kBAAyB,cAAa;gBAAtC,CADS,CADK;gBAGd,MAAK;cAHS,CAAd;cAIA,IAAIC,SAAS,GAAG,MAAMrD,KAAK,CAACsD,IAAN,CAAWJ,iBAAX,EAA8BC,OAA9B,CAAtB;cACApB,kBAAkB,CAACsB,SAAS,CAACE,IAAV,CAAeC,MAAf,CAAsBC,KAAtB,CAA4B,CAA5B,EAA+BF,IAA/B,CAAoCG,MAApC,CAA2CC,IAA3C,CAAgDC,WAAhD,CAA4DC,cAA7D,CAAlB;cACAb,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBI,SAAS,CAACE,IAAV,CAAeC,MAAf,CAAsBC,KAAtB,CAA4B,CAA5B,EAA+BF,IAA/B,CAAoCG,MAApC,CAA2CC,IAA3C,CAAgDC,WAAhD,CAA4DC,cAApF;YACH,CAVD;UAWH,CAfD;QAgBH;MACJ,CAtBD,MAuBK;QACDb,OAAO,CAACC,GAAR,CAAY,OAAZ;MACH;IACJ;EACJ,CA7BD,CA6BE,OAAOa,KAAP,EAAc;IACZd,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCa,KAAlC;EACP;;EAED,MAAMC,oBAAoB,GAAG,MAAM;IAC/B,IAAI,OAAO5B,MAAP,KAAkB6B,SAAtB,EAAiC;MAC7B,IAAI7B,MAAM,CAACC,QAAP,IAAmBD,MAAM,CAACC,QAAP,CAAgB6B,UAAvC,EAAmD;QAC/CjB,OAAO,CAACC,GAAR,CAAY,gBAAZ;QACAd,MAAM,CAACC,QAAP,CACK8B,OADL,CACa;UAAEC,MAAM,EAAE;QAAV,CADb,EAEKxB,IAFL,CAEWa,MAAD,IAAY;UACd;UACAR,OAAO,CAACC,GAAR,CAAY,oDAAZ,EAAkEO,MAAM,CAAC,CAAD,CAAxE;UACA3B,oBAAoB,CAAC,IAAD,CAApB,CAHc,CAId;UACA;QACH,CARL,EASKuC,KATL,CASYN,KAAD,IAAW,CACd;QACH,CAXL;MAYH,CAdD,MAcO;QACHd,OAAO,CAACC,GAAR,CAAY,0BAAZ,EADG,CAEH;MACH;IACJ;EACJ,CArBD;;EAuBA,eAAeoB,QAAf,GAAyB;IACrB;IACApC,YAAY,CAAC,KAAD,CAAZ;IACAe,OAAO,CAACC,GAAR,CAAY,4BAAZ;;IACA,IAAGqB,MAAM,CAAClD,cAAD,CAAN,GAAyBkD,MAAM,CAACxC,eAAD,CAAlC,EAAoD;MAChDG,YAAY,CAAC,IAAD,CAAZ;MACA,MAAM,IAAIsC,KAAJ,CAAU,2CAAV,CAAN;IACH;;IACDvB,OAAO,CAACC,GAAR,CAAY,sBAAZ;IACA,MAAMQ,KAAK,GAAG1C,OAAO,CAAC+B,KAAR,CAAc0B,KAAd,CAAoBpD,cAAc,CAACqD,QAAf,EAApB,EAA+C,OAA/C,CAAd;IACA,MAAMC,IAAI,GAAG,MAAM3E,QAAQ,CAACsE,QAAT,CAAkB9D,eAAlB,EAAkCkD,KAAlC,CAAnB;IACA9B,aAAa,CAAC,IAAD,CAAb;IACAqB,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsByB,IAAtB;IACA1B,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC3B,eAAjC;IACA0B,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,YAAU0B,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,UAA9B,CAAyC,GAAzC,EAA8C,EAA9C,CAAzC;IACAC,KAAK,CAACnE,OAAO,GAAC,gBAAT,EAA2B;MAC5BwD,MAAM,EAAE,MADoB;MAE5BY,OAAO,EAAE;QACL,UAAU,kBADL;QAEL,gBAAgB,kBAFX;QAGL,iBAAgB,YAAUJ,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,UAA9B,CAAyC,GAAzC,EAA8C,EAA9C;MAHrB,CAFmB;MAO5BG,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACjBC,aAAa,EAAC7D,eAAe,IAAI,EAAnB,GAAwBA,eAAxB,GAA0CqD,YAAY,CAACC,OAAb,CAAqB,QAArB,CADvC;QAEjBQ,UAAU,EAAClD,MAAM,CAACI,QAAP,CAAgBA,QAAhB,CAAyBG,eAFnB;QAGjB4C,MAAM,EAACjE;MAHU,CAAf;IAPsB,CAA3B,CAAL;IAaA,MAAM0D,KAAK,CAACrE,SAAD,EAAY;MACnB0D,MAAM,EAAE,MADW;MAEnBY,OAAO,EAAE;QACL,UAAU,kBADL;QAEL,gBAAgB,kBAFX;QAGL,iBAAgB,YAAUJ,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,UAA9B,CAAyC,GAAzC,EAA8C,EAA9C;MAHrB,CAFU;MAOnBG,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACjBI,OAAO,EAAChE,eAAe,IAAI,EAAnB,GAAwBA,eAAxB,GAA0CqD,YAAY,CAACC,OAAb,CAAqB,QAArB,CADjC;QAEjBQ,UAAU,EAAClD,MAAM,CAACI,QAAP,CAAgBA,QAAhB,CAAyBG,eAFnB;QAGjB4C,MAAM,EAACjE;MAHU,CAAf;IAPa,CAAZ,CAAX;IAaAK,cAAc,CAAC,IAAD,CAAd;IACAuB,OAAO,CAACC,GAAR,CAAY,2BAAZ;IACAsC,UAAU,CACN,YAAW;MACP5D,aAAa,CAAC,KAAD,CAAb;MACAF,cAAc,CAAC,KAAD,CAAd;IACH,CAHD,CAIC+D,IAJD,CAIM,IAJN,CADM,EAMN,KANM,CAAV;EAQH;;EACG,oBACI;IAAA,wBACI;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,KAAK,EAAE;QAAEC,QAAQ,EAAE,MAAZ;QAAoB,cAAa;MAAjC,CAAZ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAKI;MAAK,KAAK,EAAE;QAAEA,QAAQ,EAAE;MAAZ,CAAZ;MAAA,4EAEI,CAAC7D,iBAAD,iBACI;QAAQ,OAAO,EAAEmC,oBAAjB;QAAA,uBAAuC;UACvC,KAAK,EAAC,MADiC;UAEvC,GAAG,EAAC,oBAFmC;UAGvC,KAAK,EAAE;YAAC,SAAQ,MAAT;YAAiB2B,MAAM,EAAC;UAAxB;QAHgC;UAAA;UAAA;UAAA;QAAA;MAAvC;QAAA;QAAA;QAAA;MAAA,QAHR;IAAA;MAAA;MAAA;MAAA;IAAA,QALJ,eAeI;MAAA;MAAA;MAAA;IAAA,QAfJ,eAgBI;MAAK,KAAK,EAAE;QAACD,QAAQ,EAAC,MAAV;QAAkB,iBAAgB,MAAlC;QAA0C,cAAa;MAAvD,CAAZ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAhBJ,eAmBI;MAAA,uBACI;QACI,IAAI,EAAC,MADT;QAEI,QAAQ,MAFZ;QAGI,KAAK,EAAE;UAACC,MAAM,EAAC,OAAR;UAAgBC,UAAU,EAAC;QAA3B,CAHX;QAII,KAAK,EAAI7D,eAJb;QAKI,WAAW,EAAC;MALhB;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAnBJ,eA4BI;MAAA;MAAA;MAAA;IAAA,QA5BJ,eA6BI;MAAK,KAAK,EAAE;QAAC2D,QAAQ,EAAC,MAAV;QAAkB,iBAAgB,MAAlC;QAA0C,cAAa;MAAvD,CAAZ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA7BJ,eAgCI;MAAA,uBACI;QACI,IAAI,EAAC,MADT;QAEI,KAAK,EAAE;UAACC,MAAM,EAAC;QAAR,CAFX;QAGI,KAAK,EAAIf,YAAY,CAACC,OAAb,CAAqB,QAArB,CAHb;QAII,QAAQ,EAAGgB,KAAD,IACNrE,kBAAkB,CAACqE,KAAK,CAACC,MAAN,CAAapC,KAAd,CAL1B;QAOI,WAAW,EAAC;MAPhB;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAhCJ,eA2CI;MAAA;MAAA;MAAA;IAAA,QA3CJ,eA4CI;MAAK,KAAK,EAAE;QAAEgC,QAAQ,EAAE,MAAZ;QAAoB,iBAAgB,MAApC;QAA4C,cAAa;MAAzD,CAAZ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA5CJ,eA+CI;MAAA,wBACI;QACI,IAAI,EAAC,MADT;QAEI,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAV,CAFX;QAGI,QAAQ,EAAGE,KAAD,IACNvE,iBAAiB,CAACuE,KAAK,CAACC,MAAN,CAAapC,KAAd,CAJzB;QAMI,WAAW,EAAC;MANhB;QAAA;QAAA;QAAA;MAAA,QADJ;IAAA;MAAA;MAAA;MAAA;IAAA,QA/CJ,eAyDI;MAAA;MAAA;MAAA;IAAA,QAzDJ,eA0DI;MAAA,WACC,CAAC/B,UAAD,iBACO;QAAA,uBACI;UACI,IAAI,EAAC,QADT;UAEI,KAAK,EAAE;YAACoE,KAAK,EAAC;UAAP,CAFX;UAGI,SAAS,EAAC,6FAHd;UAII,OAAO,EAAE,MAAMzB,QAAQ,EAJ3B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAFR,eAYQ;QAAA,wBACA;UAAK,GAAG,EAAC,cAAT;UAAwB,KAAK,EAAE;YAACyB,KAAK,EAAC;UAAP;QAA/B;UAAA;UAAA;UAAA;QAAA,QADA;MAAA;QAAA;QAAA;QAAA;MAAA,QAZR,EAiBKtE,WAAW,iBAER;QAAK,KAAK,EAAE;UAACuE,KAAK,EAAE,OAAR;UAAiB,YAAY;QAA7B,CAAZ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAnBR,EAuBK/D,SAAS,iBAEN;QAAK,KAAK,EAAE;UAAC+D,KAAK,EAAE,KAAR;UAAe,YAAY;QAA3B,CAAZ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAzBR;IAAA;MAAA;MAAA;MAAA;IAAA,QA1DJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA2FH;;GArNQ7E,I;;KAAAA,I;AAuNT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}