{"ast":null,"code":"import { BundlrStorageDriver } from './BundlrStorageDriver.mjs';\n\nconst bundlrStorage = function () {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    install(metaplex) {\n      metaplex.storage().setDriver(new BundlrStorageDriver(metaplex, options));\n    }\n\n  };\n};\n\nexport { bundlrStorage };","map":{"version":3,"sources":["../../../../src/plugins/bundlrStorage/plugin.ts"],"names":["bundlrStorage","options","install","metaplex","storage","setDriver","BundlrStorageDriver"],"mappings":";;AAIO,MAAMA,aAAa,GAAG;EAAA,IAACC,OAAD,uEAA0B,EAA1B;EAAA,OAAkD;IAC7EC,OAAO,CAACC,QAAD,EAAqB;MAC1BA,QAAQ,CAACC,OAATD,GAAmBE,SAAnBF,CAA6B,IAAIG,mBAAJ,CAAwBH,QAAxB,EAAkCF,OAAlC,CAA7BE;IACF;;EAH6E,CAAlD;AAAA,CAAtB","sourcesContent":["import { BundlrOptions, BundlrStorageDriver } from './BundlrStorageDriver';\nimport { Metaplex } from '@/Metaplex';\nimport { MetaplexPlugin } from '@/types';\n\nexport const bundlrStorage = (options: BundlrOptions = {}): MetaplexPlugin => ({\n  install(metaplex: Metaplex) {\n    metaplex.storage().setDriver(new BundlrStorageDriver(metaplex, options));\n  },\n});\n"]},"metadata":{},"sourceType":"module"}