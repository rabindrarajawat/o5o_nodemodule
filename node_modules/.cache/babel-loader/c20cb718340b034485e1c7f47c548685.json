{"ast":null,"code":"import { PublicKey } from '@solana/web3.js';\n\nclass Pda extends PublicKey {\n  /** The bump used to generate the PDA. */\n  constructor(value, bump) {\n    super(value);\n    this.bump = bump;\n  }\n\n  static find(programId, seeds) {\n    const [publicKey, bump] = PublicKey.findProgramAddressSync(seeds, programId);\n    return new Pda(publicKey, bump);\n  }\n\n}\n\nexport { Pda };","map":{"version":3,"sources":["../../../src/types/Pda.ts"],"names":["Pda","PublicKey","constructor","value","bump","find","programId","seeds","publicKey","findProgramAddressSync"],"mappings":";;AAGO,MAAMA,GAAN,SAAkBC,SAAlB,CAA4B;EACjC;EAGAC,WAAW,CAACC,KAAD,EAA2BC,IAA3B,EAAyC;IAClD,MAAMD,KAAN;IACA,KAAKC,IAAL,GAAYA,IAAZ;EACF;;EAEW,OAAJC,IAAI,CAACC,SAAD,EAAuBC,KAAvB,EAA+D;IACxE,MAAM,CAACC,SAAD,EAAYJ,IAAZ,IAAoBH,SAAS,CAACQ,sBAAVR,CACxBM,KADwBN,EAExBK,SAFwBL,CAA1B;IAKA,OAAO,IAAID,GAAJ,CAAQQ,SAAR,EAAmBJ,IAAnB,CAAP;EACF;;AAhBiC","sourcesContent":["import { Buffer } from 'buffer';\nimport { PublicKey, PublicKeyInitData } from '@solana/web3.js';\n\nexport class Pda extends PublicKey {\n  /** The bump used to generate the PDA. */\n  public readonly bump: number;\n\n  constructor(value: PublicKeyInitData, bump: number) {\n    super(value);\n    this.bump = bump;\n  }\n\n  static find(programId: PublicKey, seeds: Array<Buffer | Uint8Array>): Pda {\n    const [publicKey, bump] = PublicKey.findProgramAddressSync(\n      seeds,\n      programId\n    );\n\n    return new Pda(publicKey, bump);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}