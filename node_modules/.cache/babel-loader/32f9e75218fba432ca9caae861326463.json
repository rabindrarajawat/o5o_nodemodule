{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.errorFromName = exports.errorFromCode = exports.NotFullyLoadedError = exports.CouldNotRetrieveConfigLineDataError = exports.CollectionKeyMismatchError = exports.CannotChangeSequentialIndexGenerationError = exports.CannotSwitchFromHiddenSettingsError = exports.CannotIncreaseLengthError = exports.MissingConfigLinesSettingsError = exports.ExceededLengthErrorError = exports.NoChangingCollectionDuringMintError = exports.MetadataAccountMustBeEmptyError = exports.IncorrectCollectionAuthorityError = exports.CannotSwitchToHiddenSettingsError = exports.CannotChangeNumberOfLinesError = exports.HiddenSettingsDoNotHaveConfigLinesError = exports.CandyMachineEmptyError = exports.TooManyCreatorsError = exports.NumericalOverflowErrorError = exports.IndexGreaterThanLengthError = exports.MintMismatchError = exports.UninitializedError = exports.IncorrectOwnerError = void 0;\nconst createErrorFromCodeLookup = new Map();\nconst createErrorFromNameLookup = new Map();\n\nclass IncorrectOwnerError extends Error {\n  constructor() {\n    super('Account does not have correct owner');\n    this.code = 0x1770;\n    this.name = 'IncorrectOwner';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, IncorrectOwnerError);\n    }\n  }\n\n}\n\nexports.IncorrectOwnerError = IncorrectOwnerError;\ncreateErrorFromCodeLookup.set(0x1770, () => new IncorrectOwnerError());\ncreateErrorFromNameLookup.set('IncorrectOwner', () => new IncorrectOwnerError());\n\nclass UninitializedError extends Error {\n  constructor() {\n    super('Account is not initialized');\n    this.code = 0x1771;\n    this.name = 'Uninitialized';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, UninitializedError);\n    }\n  }\n\n}\n\nexports.UninitializedError = UninitializedError;\ncreateErrorFromCodeLookup.set(0x1771, () => new UninitializedError());\ncreateErrorFromNameLookup.set('Uninitialized', () => new UninitializedError());\n\nclass MintMismatchError extends Error {\n  constructor() {\n    super('Mint Mismatch');\n    this.code = 0x1772;\n    this.name = 'MintMismatch';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, MintMismatchError);\n    }\n  }\n\n}\n\nexports.MintMismatchError = MintMismatchError;\ncreateErrorFromCodeLookup.set(0x1772, () => new MintMismatchError());\ncreateErrorFromNameLookup.set('MintMismatch', () => new MintMismatchError());\n\nclass IndexGreaterThanLengthError extends Error {\n  constructor() {\n    super('Index greater than length');\n    this.code = 0x1773;\n    this.name = 'IndexGreaterThanLength';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, IndexGreaterThanLengthError);\n    }\n  }\n\n}\n\nexports.IndexGreaterThanLengthError = IndexGreaterThanLengthError;\ncreateErrorFromCodeLookup.set(0x1773, () => new IndexGreaterThanLengthError());\ncreateErrorFromNameLookup.set('IndexGreaterThanLength', () => new IndexGreaterThanLengthError());\n\nclass NumericalOverflowErrorError extends Error {\n  constructor() {\n    super('Numerical overflow error');\n    this.code = 0x1774;\n    this.name = 'NumericalOverflowError';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, NumericalOverflowErrorError);\n    }\n  }\n\n}\n\nexports.NumericalOverflowErrorError = NumericalOverflowErrorError;\ncreateErrorFromCodeLookup.set(0x1774, () => new NumericalOverflowErrorError());\ncreateErrorFromNameLookup.set('NumericalOverflowError', () => new NumericalOverflowErrorError());\n\nclass TooManyCreatorsError extends Error {\n  constructor() {\n    super('Can only provide up to 4 creators to candy machine (because candy machine is one)');\n    this.code = 0x1775;\n    this.name = 'TooManyCreators';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, TooManyCreatorsError);\n    }\n  }\n\n}\n\nexports.TooManyCreatorsError = TooManyCreatorsError;\ncreateErrorFromCodeLookup.set(0x1775, () => new TooManyCreatorsError());\ncreateErrorFromNameLookup.set('TooManyCreators', () => new TooManyCreatorsError());\n\nclass CandyMachineEmptyError extends Error {\n  constructor() {\n    super('Candy machine is empty');\n    this.code = 0x1776;\n    this.name = 'CandyMachineEmpty';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, CandyMachineEmptyError);\n    }\n  }\n\n}\n\nexports.CandyMachineEmptyError = CandyMachineEmptyError;\ncreateErrorFromCodeLookup.set(0x1776, () => new CandyMachineEmptyError());\ncreateErrorFromNameLookup.set('CandyMachineEmpty', () => new CandyMachineEmptyError());\n\nclass HiddenSettingsDoNotHaveConfigLinesError extends Error {\n  constructor() {\n    super('Candy machines using hidden uris do not have config lines, they have a single hash representing hashed order');\n    this.code = 0x1777;\n    this.name = 'HiddenSettingsDoNotHaveConfigLines';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, HiddenSettingsDoNotHaveConfigLinesError);\n    }\n  }\n\n}\n\nexports.HiddenSettingsDoNotHaveConfigLinesError = HiddenSettingsDoNotHaveConfigLinesError;\ncreateErrorFromCodeLookup.set(0x1777, () => new HiddenSettingsDoNotHaveConfigLinesError());\ncreateErrorFromNameLookup.set('HiddenSettingsDoNotHaveConfigLines', () => new HiddenSettingsDoNotHaveConfigLinesError());\n\nclass CannotChangeNumberOfLinesError extends Error {\n  constructor() {\n    super('Cannot change number of lines unless is a hidden config');\n    this.code = 0x1778;\n    this.name = 'CannotChangeNumberOfLines';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, CannotChangeNumberOfLinesError);\n    }\n  }\n\n}\n\nexports.CannotChangeNumberOfLinesError = CannotChangeNumberOfLinesError;\ncreateErrorFromCodeLookup.set(0x1778, () => new CannotChangeNumberOfLinesError());\ncreateErrorFromNameLookup.set('CannotChangeNumberOfLines', () => new CannotChangeNumberOfLinesError());\n\nclass CannotSwitchToHiddenSettingsError extends Error {\n  constructor() {\n    super('Cannot switch to hidden settings after items available is greater than 0');\n    this.code = 0x1779;\n    this.name = 'CannotSwitchToHiddenSettings';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, CannotSwitchToHiddenSettingsError);\n    }\n  }\n\n}\n\nexports.CannotSwitchToHiddenSettingsError = CannotSwitchToHiddenSettingsError;\ncreateErrorFromCodeLookup.set(0x1779, () => new CannotSwitchToHiddenSettingsError());\ncreateErrorFromNameLookup.set('CannotSwitchToHiddenSettings', () => new CannotSwitchToHiddenSettingsError());\n\nclass IncorrectCollectionAuthorityError extends Error {\n  constructor() {\n    super('Incorrect collection NFT authority');\n    this.code = 0x177a;\n    this.name = 'IncorrectCollectionAuthority';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, IncorrectCollectionAuthorityError);\n    }\n  }\n\n}\n\nexports.IncorrectCollectionAuthorityError = IncorrectCollectionAuthorityError;\ncreateErrorFromCodeLookup.set(0x177a, () => new IncorrectCollectionAuthorityError());\ncreateErrorFromNameLookup.set('IncorrectCollectionAuthority', () => new IncorrectCollectionAuthorityError());\n\nclass MetadataAccountMustBeEmptyError extends Error {\n  constructor() {\n    super('The metadata account has data in it, and this must be empty to mint a new NFT');\n    this.code = 0x177b;\n    this.name = 'MetadataAccountMustBeEmpty';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, MetadataAccountMustBeEmptyError);\n    }\n  }\n\n}\n\nexports.MetadataAccountMustBeEmptyError = MetadataAccountMustBeEmptyError;\ncreateErrorFromCodeLookup.set(0x177b, () => new MetadataAccountMustBeEmptyError());\ncreateErrorFromNameLookup.set('MetadataAccountMustBeEmpty', () => new MetadataAccountMustBeEmptyError());\n\nclass NoChangingCollectionDuringMintError extends Error {\n  constructor() {\n    super(\"Can't change collection settings after items have begun to be minted\");\n    this.code = 0x177c;\n    this.name = 'NoChangingCollectionDuringMint';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, NoChangingCollectionDuringMintError);\n    }\n  }\n\n}\n\nexports.NoChangingCollectionDuringMintError = NoChangingCollectionDuringMintError;\ncreateErrorFromCodeLookup.set(0x177c, () => new NoChangingCollectionDuringMintError());\ncreateErrorFromNameLookup.set('NoChangingCollectionDuringMint', () => new NoChangingCollectionDuringMintError());\n\nclass ExceededLengthErrorError extends Error {\n  constructor() {\n    super('Value longer than expected maximum value');\n    this.code = 0x177d;\n    this.name = 'ExceededLengthError';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, ExceededLengthErrorError);\n    }\n  }\n\n}\n\nexports.ExceededLengthErrorError = ExceededLengthErrorError;\ncreateErrorFromCodeLookup.set(0x177d, () => new ExceededLengthErrorError());\ncreateErrorFromNameLookup.set('ExceededLengthError', () => new ExceededLengthErrorError());\n\nclass MissingConfigLinesSettingsError extends Error {\n  constructor() {\n    super('Missing config lines settings');\n    this.code = 0x177e;\n    this.name = 'MissingConfigLinesSettings';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, MissingConfigLinesSettingsError);\n    }\n  }\n\n}\n\nexports.MissingConfigLinesSettingsError = MissingConfigLinesSettingsError;\ncreateErrorFromCodeLookup.set(0x177e, () => new MissingConfigLinesSettingsError());\ncreateErrorFromNameLookup.set('MissingConfigLinesSettings', () => new MissingConfigLinesSettingsError());\n\nclass CannotIncreaseLengthError extends Error {\n  constructor() {\n    super('Cannot increase the length in config lines settings');\n    this.code = 0x177f;\n    this.name = 'CannotIncreaseLength';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, CannotIncreaseLengthError);\n    }\n  }\n\n}\n\nexports.CannotIncreaseLengthError = CannotIncreaseLengthError;\ncreateErrorFromCodeLookup.set(0x177f, () => new CannotIncreaseLengthError());\ncreateErrorFromNameLookup.set('CannotIncreaseLength', () => new CannotIncreaseLengthError());\n\nclass CannotSwitchFromHiddenSettingsError extends Error {\n  constructor() {\n    super('Cannot switch from hidden settings');\n    this.code = 0x1780;\n    this.name = 'CannotSwitchFromHiddenSettings';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, CannotSwitchFromHiddenSettingsError);\n    }\n  }\n\n}\n\nexports.CannotSwitchFromHiddenSettingsError = CannotSwitchFromHiddenSettingsError;\ncreateErrorFromCodeLookup.set(0x1780, () => new CannotSwitchFromHiddenSettingsError());\ncreateErrorFromNameLookup.set('CannotSwitchFromHiddenSettings', () => new CannotSwitchFromHiddenSettingsError());\n\nclass CannotChangeSequentialIndexGenerationError extends Error {\n  constructor() {\n    super('Cannot change sequential index generation after items have begun to be minted');\n    this.code = 0x1781;\n    this.name = 'CannotChangeSequentialIndexGeneration';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, CannotChangeSequentialIndexGenerationError);\n    }\n  }\n\n}\n\nexports.CannotChangeSequentialIndexGenerationError = CannotChangeSequentialIndexGenerationError;\ncreateErrorFromCodeLookup.set(0x1781, () => new CannotChangeSequentialIndexGenerationError());\ncreateErrorFromNameLookup.set('CannotChangeSequentialIndexGeneration', () => new CannotChangeSequentialIndexGenerationError());\n\nclass CollectionKeyMismatchError extends Error {\n  constructor() {\n    super('Collection public key mismatch');\n    this.code = 0x1782;\n    this.name = 'CollectionKeyMismatch';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, CollectionKeyMismatchError);\n    }\n  }\n\n}\n\nexports.CollectionKeyMismatchError = CollectionKeyMismatchError;\ncreateErrorFromCodeLookup.set(0x1782, () => new CollectionKeyMismatchError());\ncreateErrorFromNameLookup.set('CollectionKeyMismatch', () => new CollectionKeyMismatchError());\n\nclass CouldNotRetrieveConfigLineDataError extends Error {\n  constructor() {\n    super('Could not retrive config line data');\n    this.code = 0x1783;\n    this.name = 'CouldNotRetrieveConfigLineData';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, CouldNotRetrieveConfigLineDataError);\n    }\n  }\n\n}\n\nexports.CouldNotRetrieveConfigLineDataError = CouldNotRetrieveConfigLineDataError;\ncreateErrorFromCodeLookup.set(0x1783, () => new CouldNotRetrieveConfigLineDataError());\ncreateErrorFromNameLookup.set('CouldNotRetrieveConfigLineData', () => new CouldNotRetrieveConfigLineDataError());\n\nclass NotFullyLoadedError extends Error {\n  constructor() {\n    super('Not all config lines were added to the candy machine');\n    this.code = 0x1784;\n    this.name = 'NotFullyLoaded';\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, NotFullyLoadedError);\n    }\n  }\n\n}\n\nexports.NotFullyLoadedError = NotFullyLoadedError;\ncreateErrorFromCodeLookup.set(0x1784, () => new NotFullyLoadedError());\ncreateErrorFromNameLookup.set('NotFullyLoaded', () => new NotFullyLoadedError());\n\nfunction errorFromCode(code) {\n  const createError = createErrorFromCodeLookup.get(code);\n  return createError != null ? createError() : null;\n}\n\nexports.errorFromCode = errorFromCode;\n\nfunction errorFromName(name) {\n  const createError = createErrorFromNameLookup.get(name);\n  return createError != null ? createError() : null;\n}\n\nexports.errorFromName = errorFromName;","map":{"version":3,"sources":["../../../../src/generated/errors/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.errorFromName = exports.errorFromCode = exports.NotFullyLoadedError = exports.CouldNotRetrieveConfigLineDataError = exports.CollectionKeyMismatchError = exports.CannotChangeSequentialIndexGenerationError = exports.CannotSwitchFromHiddenSettingsError = exports.CannotIncreaseLengthError = exports.MissingConfigLinesSettingsError = exports.ExceededLengthErrorError = exports.NoChangingCollectionDuringMintError = exports.MetadataAccountMustBeEmptyError = exports.IncorrectCollectionAuthorityError = exports.CannotSwitchToHiddenSettingsError = exports.CannotChangeNumberOfLinesError = exports.HiddenSettingsDoNotHaveConfigLinesError = exports.CandyMachineEmptyError = exports.TooManyCreatorsError = exports.NumericalOverflowErrorError = exports.IndexGreaterThanLengthError = exports.MintMismatchError = exports.UninitializedError = exports.IncorrectOwnerError = void 0;\nconst createErrorFromCodeLookup = new Map();\nconst createErrorFromNameLookup = new Map();\nclass IncorrectOwnerError extends Error {\n    constructor() {\n        super('Account does not have correct owner');\n        this.code = 0x1770;\n        this.name = 'IncorrectOwner';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, IncorrectOwnerError);\n        }\n    }\n}\nexports.IncorrectOwnerError = IncorrectOwnerError;\ncreateErrorFromCodeLookup.set(0x1770, () => new IncorrectOwnerError());\ncreateErrorFromNameLookup.set('IncorrectOwner', () => new IncorrectOwnerError());\nclass UninitializedError extends Error {\n    constructor() {\n        super('Account is not initialized');\n        this.code = 0x1771;\n        this.name = 'Uninitialized';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, UninitializedError);\n        }\n    }\n}\nexports.UninitializedError = UninitializedError;\ncreateErrorFromCodeLookup.set(0x1771, () => new UninitializedError());\ncreateErrorFromNameLookup.set('Uninitialized', () => new UninitializedError());\nclass MintMismatchError extends Error {\n    constructor() {\n        super('Mint Mismatch');\n        this.code = 0x1772;\n        this.name = 'MintMismatch';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, MintMismatchError);\n        }\n    }\n}\nexports.MintMismatchError = MintMismatchError;\ncreateErrorFromCodeLookup.set(0x1772, () => new MintMismatchError());\ncreateErrorFromNameLookup.set('MintMismatch', () => new MintMismatchError());\nclass IndexGreaterThanLengthError extends Error {\n    constructor() {\n        super('Index greater than length');\n        this.code = 0x1773;\n        this.name = 'IndexGreaterThanLength';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, IndexGreaterThanLengthError);\n        }\n    }\n}\nexports.IndexGreaterThanLengthError = IndexGreaterThanLengthError;\ncreateErrorFromCodeLookup.set(0x1773, () => new IndexGreaterThanLengthError());\ncreateErrorFromNameLookup.set('IndexGreaterThanLength', () => new IndexGreaterThanLengthError());\nclass NumericalOverflowErrorError extends Error {\n    constructor() {\n        super('Numerical overflow error');\n        this.code = 0x1774;\n        this.name = 'NumericalOverflowError';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, NumericalOverflowErrorError);\n        }\n    }\n}\nexports.NumericalOverflowErrorError = NumericalOverflowErrorError;\ncreateErrorFromCodeLookup.set(0x1774, () => new NumericalOverflowErrorError());\ncreateErrorFromNameLookup.set('NumericalOverflowError', () => new NumericalOverflowErrorError());\nclass TooManyCreatorsError extends Error {\n    constructor() {\n        super('Can only provide up to 4 creators to candy machine (because candy machine is one)');\n        this.code = 0x1775;\n        this.name = 'TooManyCreators';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, TooManyCreatorsError);\n        }\n    }\n}\nexports.TooManyCreatorsError = TooManyCreatorsError;\ncreateErrorFromCodeLookup.set(0x1775, () => new TooManyCreatorsError());\ncreateErrorFromNameLookup.set('TooManyCreators', () => new TooManyCreatorsError());\nclass CandyMachineEmptyError extends Error {\n    constructor() {\n        super('Candy machine is empty');\n        this.code = 0x1776;\n        this.name = 'CandyMachineEmpty';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CandyMachineEmptyError);\n        }\n    }\n}\nexports.CandyMachineEmptyError = CandyMachineEmptyError;\ncreateErrorFromCodeLookup.set(0x1776, () => new CandyMachineEmptyError());\ncreateErrorFromNameLookup.set('CandyMachineEmpty', () => new CandyMachineEmptyError());\nclass HiddenSettingsDoNotHaveConfigLinesError extends Error {\n    constructor() {\n        super('Candy machines using hidden uris do not have config lines, they have a single hash representing hashed order');\n        this.code = 0x1777;\n        this.name = 'HiddenSettingsDoNotHaveConfigLines';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, HiddenSettingsDoNotHaveConfigLinesError);\n        }\n    }\n}\nexports.HiddenSettingsDoNotHaveConfigLinesError = HiddenSettingsDoNotHaveConfigLinesError;\ncreateErrorFromCodeLookup.set(0x1777, () => new HiddenSettingsDoNotHaveConfigLinesError());\ncreateErrorFromNameLookup.set('HiddenSettingsDoNotHaveConfigLines', () => new HiddenSettingsDoNotHaveConfigLinesError());\nclass CannotChangeNumberOfLinesError extends Error {\n    constructor() {\n        super('Cannot change number of lines unless is a hidden config');\n        this.code = 0x1778;\n        this.name = 'CannotChangeNumberOfLines';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CannotChangeNumberOfLinesError);\n        }\n    }\n}\nexports.CannotChangeNumberOfLinesError = CannotChangeNumberOfLinesError;\ncreateErrorFromCodeLookup.set(0x1778, () => new CannotChangeNumberOfLinesError());\ncreateErrorFromNameLookup.set('CannotChangeNumberOfLines', () => new CannotChangeNumberOfLinesError());\nclass CannotSwitchToHiddenSettingsError extends Error {\n    constructor() {\n        super('Cannot switch to hidden settings after items available is greater than 0');\n        this.code = 0x1779;\n        this.name = 'CannotSwitchToHiddenSettings';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CannotSwitchToHiddenSettingsError);\n        }\n    }\n}\nexports.CannotSwitchToHiddenSettingsError = CannotSwitchToHiddenSettingsError;\ncreateErrorFromCodeLookup.set(0x1779, () => new CannotSwitchToHiddenSettingsError());\ncreateErrorFromNameLookup.set('CannotSwitchToHiddenSettings', () => new CannotSwitchToHiddenSettingsError());\nclass IncorrectCollectionAuthorityError extends Error {\n    constructor() {\n        super('Incorrect collection NFT authority');\n        this.code = 0x177a;\n        this.name = 'IncorrectCollectionAuthority';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, IncorrectCollectionAuthorityError);\n        }\n    }\n}\nexports.IncorrectCollectionAuthorityError = IncorrectCollectionAuthorityError;\ncreateErrorFromCodeLookup.set(0x177a, () => new IncorrectCollectionAuthorityError());\ncreateErrorFromNameLookup.set('IncorrectCollectionAuthority', () => new IncorrectCollectionAuthorityError());\nclass MetadataAccountMustBeEmptyError extends Error {\n    constructor() {\n        super('The metadata account has data in it, and this must be empty to mint a new NFT');\n        this.code = 0x177b;\n        this.name = 'MetadataAccountMustBeEmpty';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, MetadataAccountMustBeEmptyError);\n        }\n    }\n}\nexports.MetadataAccountMustBeEmptyError = MetadataAccountMustBeEmptyError;\ncreateErrorFromCodeLookup.set(0x177b, () => new MetadataAccountMustBeEmptyError());\ncreateErrorFromNameLookup.set('MetadataAccountMustBeEmpty', () => new MetadataAccountMustBeEmptyError());\nclass NoChangingCollectionDuringMintError extends Error {\n    constructor() {\n        super(\"Can't change collection settings after items have begun to be minted\");\n        this.code = 0x177c;\n        this.name = 'NoChangingCollectionDuringMint';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, NoChangingCollectionDuringMintError);\n        }\n    }\n}\nexports.NoChangingCollectionDuringMintError = NoChangingCollectionDuringMintError;\ncreateErrorFromCodeLookup.set(0x177c, () => new NoChangingCollectionDuringMintError());\ncreateErrorFromNameLookup.set('NoChangingCollectionDuringMint', () => new NoChangingCollectionDuringMintError());\nclass ExceededLengthErrorError extends Error {\n    constructor() {\n        super('Value longer than expected maximum value');\n        this.code = 0x177d;\n        this.name = 'ExceededLengthError';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, ExceededLengthErrorError);\n        }\n    }\n}\nexports.ExceededLengthErrorError = ExceededLengthErrorError;\ncreateErrorFromCodeLookup.set(0x177d, () => new ExceededLengthErrorError());\ncreateErrorFromNameLookup.set('ExceededLengthError', () => new ExceededLengthErrorError());\nclass MissingConfigLinesSettingsError extends Error {\n    constructor() {\n        super('Missing config lines settings');\n        this.code = 0x177e;\n        this.name = 'MissingConfigLinesSettings';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, MissingConfigLinesSettingsError);\n        }\n    }\n}\nexports.MissingConfigLinesSettingsError = MissingConfigLinesSettingsError;\ncreateErrorFromCodeLookup.set(0x177e, () => new MissingConfigLinesSettingsError());\ncreateErrorFromNameLookup.set('MissingConfigLinesSettings', () => new MissingConfigLinesSettingsError());\nclass CannotIncreaseLengthError extends Error {\n    constructor() {\n        super('Cannot increase the length in config lines settings');\n        this.code = 0x177f;\n        this.name = 'CannotIncreaseLength';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CannotIncreaseLengthError);\n        }\n    }\n}\nexports.CannotIncreaseLengthError = CannotIncreaseLengthError;\ncreateErrorFromCodeLookup.set(0x177f, () => new CannotIncreaseLengthError());\ncreateErrorFromNameLookup.set('CannotIncreaseLength', () => new CannotIncreaseLengthError());\nclass CannotSwitchFromHiddenSettingsError extends Error {\n    constructor() {\n        super('Cannot switch from hidden settings');\n        this.code = 0x1780;\n        this.name = 'CannotSwitchFromHiddenSettings';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CannotSwitchFromHiddenSettingsError);\n        }\n    }\n}\nexports.CannotSwitchFromHiddenSettingsError = CannotSwitchFromHiddenSettingsError;\ncreateErrorFromCodeLookup.set(0x1780, () => new CannotSwitchFromHiddenSettingsError());\ncreateErrorFromNameLookup.set('CannotSwitchFromHiddenSettings', () => new CannotSwitchFromHiddenSettingsError());\nclass CannotChangeSequentialIndexGenerationError extends Error {\n    constructor() {\n        super('Cannot change sequential index generation after items have begun to be minted');\n        this.code = 0x1781;\n        this.name = 'CannotChangeSequentialIndexGeneration';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CannotChangeSequentialIndexGenerationError);\n        }\n    }\n}\nexports.CannotChangeSequentialIndexGenerationError = CannotChangeSequentialIndexGenerationError;\ncreateErrorFromCodeLookup.set(0x1781, () => new CannotChangeSequentialIndexGenerationError());\ncreateErrorFromNameLookup.set('CannotChangeSequentialIndexGeneration', () => new CannotChangeSequentialIndexGenerationError());\nclass CollectionKeyMismatchError extends Error {\n    constructor() {\n        super('Collection public key mismatch');\n        this.code = 0x1782;\n        this.name = 'CollectionKeyMismatch';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CollectionKeyMismatchError);\n        }\n    }\n}\nexports.CollectionKeyMismatchError = CollectionKeyMismatchError;\ncreateErrorFromCodeLookup.set(0x1782, () => new CollectionKeyMismatchError());\ncreateErrorFromNameLookup.set('CollectionKeyMismatch', () => new CollectionKeyMismatchError());\nclass CouldNotRetrieveConfigLineDataError extends Error {\n    constructor() {\n        super('Could not retrive config line data');\n        this.code = 0x1783;\n        this.name = 'CouldNotRetrieveConfigLineData';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CouldNotRetrieveConfigLineDataError);\n        }\n    }\n}\nexports.CouldNotRetrieveConfigLineDataError = CouldNotRetrieveConfigLineDataError;\ncreateErrorFromCodeLookup.set(0x1783, () => new CouldNotRetrieveConfigLineDataError());\ncreateErrorFromNameLookup.set('CouldNotRetrieveConfigLineData', () => new CouldNotRetrieveConfigLineDataError());\nclass NotFullyLoadedError extends Error {\n    constructor() {\n        super('Not all config lines were added to the candy machine');\n        this.code = 0x1784;\n        this.name = 'NotFullyLoaded';\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, NotFullyLoadedError);\n        }\n    }\n}\nexports.NotFullyLoadedError = NotFullyLoadedError;\ncreateErrorFromCodeLookup.set(0x1784, () => new NotFullyLoadedError());\ncreateErrorFromNameLookup.set('NotFullyLoaded', () => new NotFullyLoadedError());\nfunction errorFromCode(code) {\n    const createError = createErrorFromCodeLookup.get(code);\n    return createError != null ? createError() : null;\n}\nexports.errorFromCode = errorFromCode;\nfunction errorFromName(name) {\n    const createError = createErrorFromNameLookup.get(name);\n    return createError != null ? createError() : null;\n}\nexports.errorFromName = errorFromName;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}