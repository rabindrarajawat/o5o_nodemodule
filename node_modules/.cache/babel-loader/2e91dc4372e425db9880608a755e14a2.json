{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeInitializeImmutableOwnerInstructionUnchecked = exports.decodeInitializeImmutableOwnerInstruction = exports.createInitializeImmutableOwnerInstruction = exports.initializeImmutableOwnerInstructionData = void 0;\n\nconst buffer_layout_1 = require(\"@solana/buffer-layout\");\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst errors_js_1 = require(\"../errors.js\");\n\nconst types_js_1 = require(\"./types.js\");\n/** The struct that represents the instruction data as it is read by the program */\n\n\nexports.initializeImmutableOwnerInstructionData = (0, buffer_layout_1.struct)([(0, buffer_layout_1.u8)('instruction')]);\n/**\n * Construct an InitializeImmutableOwner instruction\n *\n * @param account           Immutable Owner Account\n * @param programId         SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\n\nfunction createInitializeImmutableOwnerInstruction(account, programId) {\n  const keys = [{\n    pubkey: account,\n    isSigner: false,\n    isWritable: true\n  }];\n  const data = Buffer.alloc(exports.initializeImmutableOwnerInstructionData.span);\n  exports.initializeImmutableOwnerInstructionData.encode({\n    instruction: types_js_1.TokenInstruction.InitializeImmutableOwner\n  }, data);\n  return new web3_js_1.TransactionInstruction({\n    keys,\n    programId,\n    data\n  });\n}\n\nexports.createInitializeImmutableOwnerInstruction = createInitializeImmutableOwnerInstruction;\n/**\n * Decode an InitializeImmutableOwner instruction and validate it\n *\n * @param instruction InitializeImmutableOwner instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\n\nfunction decodeInitializeImmutableOwnerInstruction(instruction, programId) {\n  if (!instruction.programId.equals(programId)) throw new errors_js_1.TokenInvalidInstructionProgramError();\n  if (instruction.data.length !== exports.initializeImmutableOwnerInstructionData.span) throw new errors_js_1.TokenInvalidInstructionDataError();\n  const {\n    keys: {\n      account\n    },\n    data\n  } = decodeInitializeImmutableOwnerInstructionUnchecked(instruction);\n  if (data.instruction !== types_js_1.TokenInstruction.InitializeImmutableOwner) throw new errors_js_1.TokenInvalidInstructionTypeError();\n  if (!account) throw new errors_js_1.TokenInvalidInstructionKeysError();\n  return {\n    programId,\n    keys: {\n      account\n    },\n    data\n  };\n}\n\nexports.decodeInitializeImmutableOwnerInstruction = decodeInitializeImmutableOwnerInstruction;\n/**\n * Decode an InitializeImmutableOwner instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\n\nfunction decodeInitializeImmutableOwnerInstructionUnchecked(_ref) {\n  let {\n    programId,\n    keys: [account],\n    data\n  } = _ref;\n  const {\n    instruction\n  } = exports.initializeImmutableOwnerInstructionData.decode(data);\n  return {\n    programId,\n    keys: {\n      account: account\n    },\n    data: {\n      instruction\n    }\n  };\n}\n\nexports.decodeInitializeImmutableOwnerInstructionUnchecked = decodeInitializeImmutableOwnerInstructionUnchecked;","map":{"version":3,"sources":["../../../src/instructions/initializeImmutableOwner.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,eAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;AAEA,MAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,WAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAMA,MAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;AAOA;;;AACa,OAAA,CAAA,uCAAA,GAA0C,CAAA,GAAA,eAAA,CAAA,MAAA,EAAgD,CACnG,CAAA,GAAA,eAAA,CAAA,EAAA,EAAG,aAAH,CADmG,CAAhD,CAA1C;AAIb;;;;;;;AAOG;;AACH,SAAgB,yCAAhB,CACI,OADJ,EAEI,SAFJ,EAEwB;EAEpB,MAAM,IAAI,GAAG,CAAC;IAAE,MAAM,EAAE,OAAV;IAAmB,QAAQ,EAAE,KAA7B;IAAoC,UAAU,EAAE;EAAhD,CAAD,CAAb;EAEA,MAAM,IAAI,GAAG,MAAM,CAAC,KAAP,CAAa,OAAA,CAAA,uCAAA,CAAwC,IAArD,CAAb;EACA,OAAA,CAAA,uCAAA,CAAwC,MAAxC,CACI;IACI,WAAW,EAAE,UAAA,CAAA,gBAAA,CAAiB;EADlC,CADJ,EAII,IAJJ;EAOA,OAAO,IAAI,SAAA,CAAA,sBAAJ,CAA2B;IAAE,IAAF;IAAQ,SAAR;IAAmB;EAAnB,CAA3B,CAAP;AACH;;AAfD,OAAA,CAAA,yCAAA,GAAA,yCAAA;AA4BA;;;;;;;AAOG;;AACH,SAAgB,yCAAhB,CACI,WADJ,EAEI,SAFJ,EAEwB;EAEpB,IAAI,CAAC,WAAW,CAAC,SAAZ,CAAsB,MAAtB,CAA6B,SAA7B,CAAL,EAA8C,MAAM,IAAI,WAAA,CAAA,mCAAJ,EAAN;EAC9C,IAAI,WAAW,CAAC,IAAZ,CAAiB,MAAjB,KAA4B,OAAA,CAAA,uCAAA,CAAwC,IAAxE,EACI,MAAM,IAAI,WAAA,CAAA,gCAAJ,EAAN;EAEJ,MAAM;IACF,IAAI,EAAE;MAAE;IAAF,CADJ;IAEF;EAFE,IAGF,kDAAkD,CAAC,WAAD,CAHtD;EAIA,IAAI,IAAI,CAAC,WAAL,KAAqB,UAAA,CAAA,gBAAA,CAAiB,wBAA1C,EAAoE,MAAM,IAAI,WAAA,CAAA,gCAAJ,EAAN;EACpE,IAAI,CAAC,OAAL,EAAc,MAAM,IAAI,WAAA,CAAA,gCAAJ,EAAN;EAEd,OAAO;IACH,SADG;IAEH,IAAI,EAAE;MACF;IADE,CAFH;IAKH;EALG,CAAP;AAOH;;AAtBD,OAAA,CAAA,yCAAA,GAAA,yCAAA;AAmCA;;;;;;AAMG;;AACH,SAAgB,kDAAhB,OAIyB;EAAA,IAJ0C;IAC/D,SAD+D;IAE/D,IAAI,EAAE,CAAC,OAAD,CAFyD;IAG/D;EAH+D,CAI1C;EACrB,MAAM;IAAE;EAAF,IAAkB,OAAA,CAAA,uCAAA,CAAwC,MAAxC,CAA+C,IAA/C,CAAxB;EAEA,OAAO;IACH,SADG;IAEH,IAAI,EAAE;MACF,OAAO,EAAE;IADP,CAFH;IAKH,IAAI,EAAE;MACF;IADE;EALH,CAAP;AASH;;AAhBD,OAAA,CAAA,kDAAA,GAAA,kDAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeInitializeImmutableOwnerInstructionUnchecked = exports.decodeInitializeImmutableOwnerInstruction = exports.createInitializeImmutableOwnerInstruction = exports.initializeImmutableOwnerInstructionData = void 0;\nconst buffer_layout_1 = require(\"@solana/buffer-layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst errors_js_1 = require(\"../errors.js\");\nconst types_js_1 = require(\"./types.js\");\n/** The struct that represents the instruction data as it is read by the program */\nexports.initializeImmutableOwnerInstructionData = (0, buffer_layout_1.struct)([\n    (0, buffer_layout_1.u8)('instruction'),\n]);\n/**\n * Construct an InitializeImmutableOwner instruction\n *\n * @param account           Immutable Owner Account\n * @param programId         SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createInitializeImmutableOwnerInstruction(account, programId) {\n    const keys = [{ pubkey: account, isSigner: false, isWritable: true }];\n    const data = Buffer.alloc(exports.initializeImmutableOwnerInstructionData.span);\n    exports.initializeImmutableOwnerInstructionData.encode({\n        instruction: types_js_1.TokenInstruction.InitializeImmutableOwner,\n    }, data);\n    return new web3_js_1.TransactionInstruction({ keys, programId, data });\n}\nexports.createInitializeImmutableOwnerInstruction = createInitializeImmutableOwnerInstruction;\n/**\n * Decode an InitializeImmutableOwner instruction and validate it\n *\n * @param instruction InitializeImmutableOwner instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeInitializeImmutableOwnerInstruction(instruction, programId) {\n    if (!instruction.programId.equals(programId))\n        throw new errors_js_1.TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== exports.initializeImmutableOwnerInstructionData.span)\n        throw new errors_js_1.TokenInvalidInstructionDataError();\n    const { keys: { account }, data, } = decodeInitializeImmutableOwnerInstructionUnchecked(instruction);\n    if (data.instruction !== types_js_1.TokenInstruction.InitializeImmutableOwner)\n        throw new errors_js_1.TokenInvalidInstructionTypeError();\n    if (!account)\n        throw new errors_js_1.TokenInvalidInstructionKeysError();\n    return {\n        programId,\n        keys: {\n            account,\n        },\n        data,\n    };\n}\nexports.decodeInitializeImmutableOwnerInstruction = decodeInitializeImmutableOwnerInstruction;\n/**\n * Decode an InitializeImmutableOwner instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeInitializeImmutableOwnerInstructionUnchecked({ programId, keys: [account], data, }) {\n    const { instruction } = exports.initializeImmutableOwnerInstructionData.decode(data);\n    return {\n        programId,\n        keys: {\n            account: account,\n        },\n        data: {\n            instruction,\n        },\n    };\n}\nexports.decodeInitializeImmutableOwnerInstructionUnchecked = decodeInitializeImmutableOwnerInstructionUnchecked;\n//# sourceMappingURL=initializeImmutableOwner.js.map"]},"metadata":{},"sourceType":"script"}