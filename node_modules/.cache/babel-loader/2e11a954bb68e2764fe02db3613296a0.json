{"ast":null,"code":"import { defineProperty as _defineProperty } from '../../_virtual/_rollupPluginBabelHelpers.mjs';\nimport { MetaplexError } from '../../errors/MetaplexError.mjs';\n/** @group Errors */\n\nclass CandyMachineV3Error extends MetaplexError {\n  constructor(message, cause) {\n    super(message, 'plugin', 'Candy Machine V3', cause);\n\n    _defineProperty(this, \"name\", 'CandyMachineV3Error');\n  }\n\n}\n/** @group Errors */\n\n\nclass UnregisteredCandyGuardError extends CandyMachineV3Error {\n  constructor(name) {\n    const message = `The SDK is trying to access a custom Candy Guard named [${name}] ` + `but that guard was not registered in the SDK ` + 'Register your custom guard by calling the `metaplex.candyMachines().guards().register()` method.';\n    super(message);\n\n    _defineProperty(this, \"name\", 'UnregisteredCandyGuardError');\n  }\n\n}\n/** @group Errors */\n\n\nclass CandyMachineIsFullError extends CandyMachineV3Error {\n  constructor(index, itemsAvailable) {\n    const message = `You are trying to add an item at index ${index} to a Candy Machine that ` + `can only hold a maximum of ${itemsAvailable} items. ` + 'Limit number of items you are adding or create a Candy Machine that can hold more of them.';\n    super(message);\n\n    _defineProperty(this, \"name\", 'CandyMachineIsFullError');\n  }\n\n}\n/** @group Errors */\n\n\nclass CandyMachineCannotAddAmountError extends CandyMachineV3Error {\n  constructor(index, amount, itemsAvailable) {\n    const message = `You are trying to add ${amount} items to candy machine starting at index ${index} ` + ` but it can only hold a maximum of ${itemsAvailable} items. ` + 'Limit number of assets you are adding or create a Candy Machine that can hold more of them.';\n    super(message);\n\n    _defineProperty(this, \"name\", 'CandyMachineCannotAddAmountError');\n  }\n\n}\n/** @group Errors */\n\n\nclass CandyMachineItemTextTooLongError extends CandyMachineV3Error {\n  constructor(index, type, text, limit) {\n    const message = `You are trying to add an item to a Candy Machine but its ${type} is too long. ` + `The item settings define the ${type} limit as ${limit} characters but the following ` + `content was provided [${text}] for the item at index ${index} ` + `Reduce the size of the ${type} for the item at index ${index}.`;\n    super(message);\n\n    _defineProperty(this, \"name\", 'CandyMachineItemTextTooLongError');\n  }\n\n}\n/** @group Errors */\n\n\nclass CandyMachineBotTaxError extends CandyMachineV3Error {\n  constructor(explorerLink, cause) {\n    const message = `The NFT couldn't be fetched after being minted. ` + `This is most likely due to a bot tax that occured during minting. ` + `When someone tries to mint an NFT from a Candy Machine which cannot be minted from, ` + `the program will succeed and charge a small tax to fight against bots. ` + `Ensure you can mint from the Candy Machine. ` + `You may want to check the transaction logs for more details: [${explorerLink}].`;\n    super(message, cause);\n\n    _defineProperty(this, \"name\", 'CandyMachineBotTaxError');\n  }\n\n}\n/** @group Errors */\n\n\nclass GuardGroupRequiredError extends CandyMachineV3Error {\n  constructor(availableGroups) {\n    const message = 'The provided Candy Machine defines groups of guards but no' + 'group label was provided to identity which group we should select. ' + 'Please provide the label of the group you wish to select from via the `group` parameter. ' + `The available groups are [${availableGroups.join(', ')}]`;\n    super(message);\n\n    _defineProperty(this, \"name\", 'GuardGroupRequiredError');\n  }\n\n}\n/** @group Errors */\n\n\nclass SelectedGuardGroupDoesNotExistError extends CandyMachineV3Error {\n  constructor(selectedGroup, availableGroups) {\n    const message = `You're trying to select the guard group [${selectedGroup}] from a ` + 'Candy Machine but this group does not exists on this Candy Machine. ' + (availableGroups.length > 0 ? 'Please provide the label of a group that exists on the Candy Machine. ' + `The available groups are [${availableGroups.join(', ')}]` : 'There are no guard groups defined on the Candy Machine. ' + 'Please set the `group` parameter to `null` or remove it altogether.');\n    super(message);\n\n    _defineProperty(this, \"name\", 'SelectedGuardGroupDoesNotExistError');\n  }\n\n}\n/** @group Errors */\n\n\nclass GuardMintSettingsMissingError extends CandyMachineV3Error {\n  constructor(guardName) {\n    const message = `The Candy Machine you are trying to mint from has the [${guardName}] guard enabled. ` + 'This guard requires you to provide some additional settings when minting which you did not provide. ' + `Please provide some minting settings for the [${guardName}] guard ` + `via the \\`guards\\` parameter like so: \\`guards.${guardName} = {...}\\`.`;\n    super(message);\n\n    _defineProperty(this, \"name\", 'GuardMintSettingsMissingError');\n  }\n\n}\n/** @group Errors */\n\n\nclass GuardRouteNotSupportedError extends CandyMachineV3Error {\n  constructor(guardName) {\n    const message = `You are trying to call the route instruction of the [${guardName}] guard ` + 'but this guard does not support this feature or did not register it on the SDK. ' + 'Please select a guard that support the route instruction feature. ' + 'If you are using a custom guard, make sure you registered the route instruction ' + 'feature by implementing the `routeSettingsParser` method on the guard manifest.';\n    super(message);\n\n    _defineProperty(this, \"name\", 'GuardRouteNotSupportedError');\n  }\n\n}\n/** @group Errors */\n\n\nclass CandyGuardRequiredOnCandyMachineError extends CandyMachineV3Error {\n  constructor() {\n    const message = `The provided Candy Machine does not have a Candy Guard associated with ` + `it yet, it is required for the operation you are trying to execute. ` + 'Please provide a Candy Machine with an associated Candy Guard account.';\n    super(message);\n\n    _defineProperty(this, \"name\", 'CandyGuardRequiredOnCandyMachineError');\n  }\n\n}\n/** @group Errors */\n\n\nclass GuardNotEnabledError extends CandyMachineV3Error {\n  constructor(guard, group) {\n    const message = (group ? `The guard [${guard}] is not enabled on the group [${group}] of the Candy Machine.` : `The guard [${guard}] is not enabled on the Candy Machine. `) + 'Please provide a different guard or select a different group ' + 'such that the provided guard is enabled on the selected group.';\n    super(message);\n\n    _defineProperty(this, \"name\", 'GuardNotEnabledError');\n  }\n\n}\n/** @group Errors */\n\n\nclass GuardGroupLabelTooLongError extends CandyMachineV3Error {\n  constructor(label, maxLength) {\n    const message = `The provided group label [${label}] is too long. ` + `Group labels cannot be longer than ${maxLength} characters. ` + 'Please provide a shorter group label.';\n    super(message);\n\n    _defineProperty(this, \"name\", 'GuardGroupLabelTooLongError');\n  }\n\n}\n/** @group Errors */\n\n\nclass UnrecognizePathForRouteInstructionError extends CandyMachineV3Error {\n  constructor(guard, path) {\n    const message = `The provided path [${path}] does not exist on the route instruction of the [${guard}] guard. ` + 'Please provide a recognized path.';\n    super(message);\n\n    _defineProperty(this, \"name\", 'UnrecognizePathForRouteInstructionError');\n  }\n\n}\n/** @group Errors */\n\n\nclass MintOwnerMustBeMintPayerError extends CandyMachineV3Error {\n  constructor(guard) {\n    const message = `The payer must be the owner when using the [${guard}] guard. ` + 'Please remove the `owner` attribute from the mint input so they can be the same.';\n    super(message);\n\n    _defineProperty(this, \"name\", 'MintOwnerMustBeMintPayerError');\n  }\n\n}\n/** @group Errors */\n\n\nclass MaximumOfFiveAdditionalProgramsError extends CandyMachineV3Error {\n  constructor() {\n    const message = `There is a maximum of five additional programs when using the [programGate] guard. ` + 'Please reduce the number of additional programs to <= 5.';\n    super(message);\n\n    _defineProperty(this, \"name\", 'MaximumOfFiveAdditionalProgramsError');\n  }\n\n}\n\nexport { CandyGuardRequiredOnCandyMachineError, CandyMachineBotTaxError, CandyMachineCannotAddAmountError, CandyMachineIsFullError, CandyMachineItemTextTooLongError, CandyMachineV3Error, GuardGroupLabelTooLongError, GuardGroupRequiredError, GuardMintSettingsMissingError, GuardNotEnabledError, GuardRouteNotSupportedError, MaximumOfFiveAdditionalProgramsError, MintOwnerMustBeMintPayerError, SelectedGuardGroupDoesNotExistError, UnrecognizePathForRouteInstructionError, UnregisteredCandyGuardError };","map":{"version":3,"sources":["../../../../src/plugins/candyMachineModule/errors.ts"],"names":["CandyMachineV3Error","MetaplexError","constructor","message","cause","UnregisteredCandyGuardError","name","CandyMachineIsFullError","index","itemsAvailable","CandyMachineCannotAddAmountError","amount","CandyMachineItemTextTooLongError","type","text","limit","CandyMachineBotTaxError","explorerLink","GuardGroupRequiredError","availableGroups","join","SelectedGuardGroupDoesNotExistError","selectedGroup","length","GuardMintSettingsMissingError","guardName","GuardRouteNotSupportedError","CandyGuardRequiredOnCandyMachineError","GuardNotEnabledError","guard","group","GuardGroupLabelTooLongError","label","maxLength","UnrecognizePathForRouteInstructionError","path","MintOwnerMustBeMintPayerError","MaximumOfFiveAdditionalProgramsError"],"mappings":"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","sourcesContent":["import { MetaplexError } from '@/errors';\n\n/** @group Errors */\nexport class CandyMachineV3Error extends MetaplexError {\n  readonly name: string = 'CandyMachineV3Error';\n  constructor(message: string, cause?: Error) {\n    super(message, 'plugin', 'Candy Machine V3', cause);\n  }\n}\n\n/** @group Errors */\nexport class UnregisteredCandyGuardError extends CandyMachineV3Error {\n  readonly name: string = 'UnregisteredCandyGuardError';\n  constructor(name: string) {\n    const message =\n      `The SDK is trying to access a custom Candy Guard named [${name}] ` +\n      `but that guard was not registered in the SDK ` +\n      'Register your custom guard by calling the `metaplex.candyMachines().guards().register()` method.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineIsFullError extends CandyMachineV3Error {\n  readonly name: string = 'CandyMachineIsFullError';\n  constructor(index: number, itemsAvailable: number) {\n    const message =\n      `You are trying to add an item at index ${index} to a Candy Machine that ` +\n      `can only hold a maximum of ${itemsAvailable} items. ` +\n      'Limit number of items you are adding or create a Candy Machine that can hold more of them.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineCannotAddAmountError extends CandyMachineV3Error {\n  readonly name: string = 'CandyMachineCannotAddAmountError';\n  constructor(index: number, amount: number, itemsAvailable: number) {\n    const message =\n      `You are trying to add ${amount} items to candy machine starting at index ${index} ` +\n      ` but it can only hold a maximum of ${itemsAvailable} items. ` +\n      'Limit number of assets you are adding or create a Candy Machine that can hold more of them.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineItemTextTooLongError extends CandyMachineV3Error {\n  readonly name: string = 'CandyMachineItemTextTooLongError';\n  constructor(\n    index: number,\n    type: 'name' | 'uri',\n    text: string,\n    limit: number\n  ) {\n    const message =\n      `You are trying to add an item to a Candy Machine but its ${type} is too long. ` +\n      `The item settings define the ${type} limit as ${limit} characters but the following ` +\n      `content was provided [${text}] for the item at index ${index} ` +\n      `Reduce the size of the ${type} for the item at index ${index}.`;\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineBotTaxError extends CandyMachineV3Error {\n  readonly name: string = 'CandyMachineBotTaxError';\n  constructor(explorerLink: string, cause: Error) {\n    const message =\n      `The NFT couldn't be fetched after being minted. ` +\n      `This is most likely due to a bot tax that occured during minting. ` +\n      `When someone tries to mint an NFT from a Candy Machine which cannot be minted from, ` +\n      `the program will succeed and charge a small tax to fight against bots. ` +\n      `Ensure you can mint from the Candy Machine. ` +\n      `You may want to check the transaction logs for more details: [${explorerLink}].`;\n    super(message, cause);\n  }\n}\n\n/** @group Errors */\nexport class GuardGroupRequiredError extends CandyMachineV3Error {\n  readonly name: string = 'GuardGroupRequiredError';\n  constructor(availableGroups: string[]) {\n    const message =\n      'The provided Candy Machine defines groups of guards but no' +\n      'group label was provided to identity which group we should select. ' +\n      'Please provide the label of the group you wish to select from via the `group` parameter. ' +\n      `The available groups are [${availableGroups.join(', ')}]`;\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class SelectedGuardGroupDoesNotExistError extends CandyMachineV3Error {\n  readonly name: string = 'SelectedGuardGroupDoesNotExistError';\n  constructor(selectedGroup: string, availableGroups: string[]) {\n    const message =\n      `You're trying to select the guard group [${selectedGroup}] from a ` +\n      'Candy Machine but this group does not exists on this Candy Machine. ' +\n      (availableGroups.length > 0\n        ? 'Please provide the label of a group that exists on the Candy Machine. ' +\n          `The available groups are [${availableGroups.join(', ')}]`\n        : 'There are no guard groups defined on the Candy Machine. ' +\n          'Please set the `group` parameter to `null` or remove it altogether.');\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class GuardMintSettingsMissingError extends CandyMachineV3Error {\n  readonly name: string = 'GuardMintSettingsMissingError';\n  constructor(guardName: string) {\n    const message =\n      `The Candy Machine you are trying to mint from has the [${guardName}] guard enabled. ` +\n      'This guard requires you to provide some additional settings when minting which you did not provide. ' +\n      `Please provide some minting settings for the [${guardName}] guard ` +\n      `via the \\`guards\\` parameter like so: \\`guards.${guardName} = {...}\\`.`;\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class GuardRouteNotSupportedError extends CandyMachineV3Error {\n  readonly name: string = 'GuardRouteNotSupportedError';\n  constructor(guardName: string) {\n    const message =\n      `You are trying to call the route instruction of the [${guardName}] guard ` +\n      'but this guard does not support this feature or did not register it on the SDK. ' +\n      'Please select a guard that support the route instruction feature. ' +\n      'If you are using a custom guard, make sure you registered the route instruction ' +\n      'feature by implementing the `routeSettingsParser` method on the guard manifest.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class CandyGuardRequiredOnCandyMachineError extends CandyMachineV3Error {\n  readonly name: string = 'CandyGuardRequiredOnCandyMachineError';\n  constructor() {\n    const message =\n      `The provided Candy Machine does not have a Candy Guard associated with ` +\n      `it yet, it is required for the operation you are trying to execute. ` +\n      'Please provide a Candy Machine with an associated Candy Guard account.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class GuardNotEnabledError extends CandyMachineV3Error {\n  readonly name: string = 'GuardNotEnabledError';\n  constructor(guard: string, group: string | null) {\n    const message =\n      (group\n        ? `The guard [${guard}] is not enabled on the group [${group}] of the Candy Machine.`\n        : `The guard [${guard}] is not enabled on the Candy Machine. `) +\n      'Please provide a different guard or select a different group ' +\n      'such that the provided guard is enabled on the selected group.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class GuardGroupLabelTooLongError extends CandyMachineV3Error {\n  readonly name: string = 'GuardGroupLabelTooLongError';\n  constructor(label: string, maxLength: number) {\n    const message =\n      `The provided group label [${label}] is too long. ` +\n      `Group labels cannot be longer than ${maxLength} characters. ` +\n      'Please provide a shorter group label.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class UnrecognizePathForRouteInstructionError extends CandyMachineV3Error {\n  readonly name: string = 'UnrecognizePathForRouteInstructionError';\n  constructor(guard: string, path: string) {\n    const message =\n      `The provided path [${path}] does not exist on the route instruction of the [${guard}] guard. ` +\n      'Please provide a recognized path.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class MintOwnerMustBeMintPayerError extends CandyMachineV3Error {\n  readonly name: string = 'MintOwnerMustBeMintPayerError';\n  constructor(guard: string) {\n    const message =\n      `The payer must be the owner when using the [${guard}] guard. ` +\n      'Please remove the `owner` attribute from the mint input so they can be the same.';\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class MaximumOfFiveAdditionalProgramsError extends CandyMachineV3Error {\n  readonly name: string = 'MaximumOfFiveAdditionalProgramsError';\n  constructor() {\n    const message =\n      `There is a maximum of five additional programs when using the [programGate] guard. ` +\n      'Please reduce the number of additional programs to <= 5.';\n    super(message);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}