{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getParsedNftAccountsByUpdateAuthority = exports.createConnectionConfig = void 0; // @ts-nocheck\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar metaplex_1 = require(\"./config/metaplex\");\n\nvar utils_1 = require(\"./utils\");\n\nvar createConnectionConfig = function (clusterApi, commitment) {\n  if (clusterApi === void 0) {\n    clusterApi = (0, web3_js_1.clusterApiUrl)('mainnet-beta');\n  }\n\n  if (commitment === void 0) {\n    commitment = 'confirmed';\n  }\n\n  return new web3_js_1.Connection(clusterApi, commitment);\n};\n\nexports.createConnectionConfig = createConnectionConfig;\n\nvar getParsedNftAccountsByUpdateAuthority = function (_a) {\n  var updateAuthority = _a.updateAuthority,\n      _b = _a.connection,\n      connection = _b === void 0 ? (0, exports.createConnectionConfig)() : _b;\n  return __awaiter(void 0, void 0, void 0, function () {\n    var res, decodedArray, err_1;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _c.trys.push([0, 3,, 4]);\n\n          return [4\n          /*yield*/\n          , connection.getProgramAccounts(new web3_js_1.PublicKey(metaplex_1.METADATA_PROGRAM), {\n            encoding: 'base64',\n            filters: [{\n              memcmp: {\n                offset: 1,\n                bytes: updateAuthority\n              }\n            }]\n          })];\n\n        case 1:\n          res = _c.sent();\n          return [4\n          /*yield*/\n          , Promise.all(res.map(function (acc) {\n            return (0, utils_1.decodeTokenMetadata)(acc.account.data);\n          }))];\n\n        case 2:\n          decodedArray = _c.sent();\n          return [2\n          /*return*/\n          , decodedArray];\n\n        case 3:\n          err_1 = _c.sent();\n          console.error(err_1);\n          return [2\n          /*return*/\n          , []];\n\n        case 4:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n};\n\nexports.getParsedNftAccountsByUpdateAuthority = getParsedNftAccountsByUpdateAuthority;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yFAAA;;AACA;;AACA;;AACA;;AAEO,IAAMA,sBAAsB,GAAG,UAACC,UAAD,EAA6CC,UAA7C,EAAqE;EAApE;IAAAD,iBAAaE,uBAAb,EAA2B,cAA3B;EAA0C;;EAAE;IAAAD;EAAwB;;EACzG,WAAIC,oBAAJ,CAAeF,UAAf,EAA2BC,UAA3B;AAAoD,CAD/C;;AAAME,iCAAsBJ,sBAAtB;;AAGN,IAAMK,qCAAqC,GAAG,UAAOC,EAAP,EAGpD;MAFCC,eAAe;MACfC;MAAAC,UAAU,mBAAG,qCAAH,GAA2BD;;;;;;;;UAGvB;UAAA;UAAA,EAAMC,UAAU,CAACC,kBAAX,CAA8B,IAAIP,mBAAJ,CAAcQ,2BAAd,CAA9B,EAA+D;YAC/EC,QAAQ,EAAE,QADqE;YAE/EC,OAAO,EAAE,CACP;cACEC,MAAM,EAAE;gBACNC,MAAM,EAAE,CADF;gBAENC,KAAK,EAAET;cAFD;YADV,CADO;UAFsE,CAA/D,CAAN;;;UAANU,GAAG,GAAGC,SAAN;UAYe;UAAA;UAAA,EAAMC,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,GAAJ,CAAQ,eAAG;YAAI,wCAAoBC,GAAG,CAACC,OAAJ,CAAYC,IAAhC;UAAqC,CAApD,CAAZ,CAAN;;;UAAfC,YAAY,GAAGP,SAAf;UAEN;UAAA;UAAA,EAAOO,YAAP;;;;UAEAC,OAAO,CAACC,KAAR,CAAcC,KAAd;UACA;UAAA;UAAA,EAAO,EAAP;;;;;;;;;AAEH,CAxBM;;AAAMxB,gDAAqCC,qCAArC","names":["createConnectionConfig","clusterApi","commitment","web3_js_1","exports","getParsedNftAccountsByUpdateAuthority","_a","updateAuthority","_b","connection","getProgramAccounts","metaplex_1","encoding","filters","memcmp","offset","bytes","res","_c","Promise","all","map","acc","account","data","decodedArray","console","error","err_1"],"sourceRoot":"","sources":["../src/getParsedNftAccountsByUpdateAuthority.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}