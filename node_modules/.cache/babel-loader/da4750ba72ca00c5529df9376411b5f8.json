{"ast":null,"code":"import { identityModule } from '../identityModule/plugin.mjs';\nimport { storageModule } from '../storageModule/plugin.mjs';\nimport { rpcModule } from '../rpcModule/plugin.mjs';\nimport { operationModule } from '../operationModule/plugin.mjs';\nimport { programModule } from '../programModule/plugin.mjs';\nimport { utilsModule } from '../utilsModule/plugin.mjs';\nimport { guestIdentity } from '../guestIdentity/plugin.mjs';\nimport { bundlrStorage } from '../bundlrStorage/plugin.mjs';\nimport { systemModule } from '../systemModule/plugin.mjs';\nimport { tokenModule } from '../tokenModule/plugin.mjs';\nimport { nftModule } from '../nftModule/plugin.mjs';\nimport { candyMachineV2Module } from '../candyMachineV2Module/plugin.mjs';\nimport { candyMachineModule } from '../candyMachineModule/plugin.mjs';\nimport { auctionHouseModule } from '../auctionHouseModule/plugin.mjs'; // Low-level modules.\n\nconst corePlugins = () => ({\n  install(metaplex) {\n    // Low-level modules.\n    metaplex.use(identityModule());\n    metaplex.use(storageModule());\n    metaplex.use(rpcModule());\n    metaplex.use(operationModule());\n    metaplex.use(programModule());\n    metaplex.use(utilsModule()); // Default drivers.\n\n    metaplex.use(guestIdentity());\n    metaplex.use(bundlrStorage()); // Verticals.\n\n    metaplex.use(systemModule());\n    metaplex.use(tokenModule());\n    metaplex.use(nftModule());\n    metaplex.use(candyMachineV2Module());\n    metaplex.use(candyMachineModule());\n    metaplex.use(auctionHouseModule());\n  }\n\n});\n\nexport { corePlugins };","map":{"version":3,"sources":["../../../../src/plugins/corePlugins/plugin.ts"],"names":["corePlugins","install","metaplex","use","identityModule","storageModule","rpcModule","operationModule","programModule","utilsModule","guestIdentity","bundlrStorage","systemModule","tokenModule","nftModule","candyMachineV2Module","candyMachineModule","auctionHouseModule"],"mappings":";;;;;;;;;;;;;uEAEA;;AAoBO,MAAMA,WAAW,GAAG,OAAO;EAChCC,OAAO,CAACC,QAAD,EAAqB;IAC1B;IACAA,QAAQ,CAACC,GAATD,CAAaE,cAAc,EAA3BF;IACAA,QAAQ,CAACC,GAATD,CAAaG,aAAa,EAA1BH;IACAA,QAAQ,CAACC,GAATD,CAAaI,SAAS,EAAtBJ;IACAA,QAAQ,CAACC,GAATD,CAAaK,eAAe,EAA5BL;IACAA,QAAQ,CAACC,GAATD,CAAaM,aAAa,EAA1BN;IACAA,QAAQ,CAACC,GAATD,CAAaO,WAAW,EAAxBP,EAP0B,CAS1B;;IACAA,QAAQ,CAACC,GAATD,CAAaQ,aAAa,EAA1BR;IACAA,QAAQ,CAACC,GAATD,CAAaS,aAAa,EAA1BT,EAX0B,CAa1B;;IACAA,QAAQ,CAACC,GAATD,CAAaU,YAAY,EAAzBV;IACAA,QAAQ,CAACC,GAATD,CAAaW,WAAW,EAAxBX;IACAA,QAAQ,CAACC,GAATD,CAAaY,SAAS,EAAtBZ;IACAA,QAAQ,CAACC,GAATD,CAAaa,oBAAoB,EAAjCb;IACAA,QAAQ,CAACC,GAATD,CAAac,kBAAkB,EAA/Bd;IACAA,QAAQ,CAACC,GAATD,CAAae,kBAAkB,EAA/Bf;EACF;;AArBgC,CAAP,CAApB","sourcesContent":["import type { Metaplex } from '../../Metaplex';\n\n// Low-level modules.\nimport { identityModule } from '../identityModule';\nimport { storageModule } from '../storageModule';\nimport { rpcModule } from '../rpcModule';\nimport { operationModule } from '../operationModule';\nimport { programModule } from '../programModule';\nimport { utilsModule } from '../utilsModule';\n\n// Default drivers.\nimport { guestIdentity } from '../guestIdentity';\nimport { bundlrStorage } from '../bundlrStorage';\n\n// Verticals.\nimport { systemModule } from '../systemModule';\nimport { tokenModule } from '../tokenModule';\nimport { nftModule } from '../nftModule';\nimport { candyMachineV2Module } from '../candyMachineV2Module';\nimport { candyMachineModule } from '../candyMachineModule';\nimport { auctionHouseModule } from '../auctionHouseModule';\n\nexport const corePlugins = () => ({\n  install(metaplex: Metaplex) {\n    // Low-level modules.\n    metaplex.use(identityModule());\n    metaplex.use(storageModule());\n    metaplex.use(rpcModule());\n    metaplex.use(operationModule());\n    metaplex.use(programModule());\n    metaplex.use(utilsModule());\n\n    // Default drivers.\n    metaplex.use(guestIdentity());\n    metaplex.use(bundlrStorage());\n\n    // Verticals.\n    metaplex.use(systemModule());\n    metaplex.use(tokenModule());\n    metaplex.use(nftModule());\n    metaplex.use(candyMachineV2Module());\n    metaplex.use(candyMachineModule());\n    metaplex.use(auctionHouseModule());\n  },\n});\n"]},"metadata":{},"sourceType":"module"}