{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isElementCollectionFixedSizeBeet = exports.isFixableBeet = exports.assertFixedSizeBeet = exports.isFixedSizeBeet = exports.BEET_TYPE_ARG_INNER = exports.BEET_TYPE_ARG_LEN = exports.BEET_PACKAGE = void 0;\n\nconst assert_1 = require(\"assert\");\n/**\n * Matches name in package.json\n *\n * @private\n */\n\n\nexports.BEET_PACKAGE = '@metaplex-foundation/beet';\n/**\n * @private\n * @category beet\n */\n\nexports.BEET_TYPE_ARG_LEN = 'len';\n/**\n * @private\n * @category beet\n */\n\nexports.BEET_TYPE_ARG_INNER = 'Beet<{innner}>'; // -----------------\n// Guards\n// -----------------\n\n/**\n * @private\n */\n\nfunction isFixedSizeBeet(x) {\n  return Object.keys(x).includes('byteSize');\n}\n\nexports.isFixedSizeBeet = isFixedSizeBeet;\n/**\n * @private\n */\n\nfunction assertFixedSizeBeet(x) {\n  let msg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : `${x} should have been a fixed beet`;\n  (0, assert_1.strict)(isFixedSizeBeet(x), msg);\n}\n\nexports.assertFixedSizeBeet = assertFixedSizeBeet;\n/**\n * @private\n */\n\nfunction isFixableBeet(x) {\n  return typeof x.toFixedFromData === 'function' && typeof x.toFixedFromValue === 'function';\n}\n\nexports.isFixableBeet = isFixableBeet;\n/**\n * @private\n */\n\nfunction isElementCollectionFixedSizeBeet(x) {\n  const keys = Object.keys(x);\n  return keys.includes('length') && keys.includes('elementByteSize') && keys.includes('lenPrefixByteSize');\n}\n\nexports.isElementCollectionFixedSizeBeet = isElementCollectionFixedSizeBeet;","map":{"version":3,"sources":["../../../src/types.ts"],"names":[],"mappings":";;;;;;;AACA,MAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;AAEA;;;;AAIG;;;AACU,OAAA,CAAA,YAAA,GAAe,2BAAf;AAsKb;;;AAGG;;AACU,OAAA,CAAA,iBAAA,GAAoB,KAApB;AAEb;;;AAGG;;AACU,OAAA,CAAA,mBAAA,GAAsB,gBAAtB,C,CA+Bb;AACA;AACA;;AACA;;AAEG;;AACH,SAAgB,eAAhB,CACE,CADF,EACe;EAEb,OAAO,MAAM,CAAC,IAAP,CAAY,CAAZ,EAAe,QAAf,CAAwB,UAAxB,CAAP;AACD;;AAJD,OAAA,CAAA,eAAA,GAAA,eAAA;AAMA;;AAEG;;AACH,SAAgB,mBAAhB,CACE,CADF,EAE4C;EAAA,IAA1C,GAA0C,uEAApC,GAAG,CAAC,gCAAgC;EAE1C,CAAA,GAAA,QAAA,CAAA,MAAA,EAAO,eAAe,CAAC,CAAD,CAAtB,EAA2B,GAA3B;AACD;;AALD,OAAA,CAAA,mBAAA,GAAA,mBAAA;AAOA;;AAEG;;AACH,SAAgB,aAAhB,CAAoC,CAApC,EAAiD;EAC/C,OACE,OAAQ,CAAuB,CAAC,eAAhC,KAAoD,UAApD,IACA,OAAQ,CAAuB,CAAC,gBAAhC,KAAqD,UAFvD;AAID;;AALD,OAAA,CAAA,aAAA,GAAA,aAAA;AAOA;;AAEG;;AACH,SAAgB,gCAAhB,CACE,CADF,EACwB;EAEtB,MAAM,IAAI,GAAG,MAAM,CAAC,IAAP,CAAY,CAAZ,CAAb;EACA,OACE,IAAI,CAAC,QAAL,CAAc,QAAd,KACA,IAAI,CAAC,QAAL,CAAc,iBAAd,CADA,IAEA,IAAI,CAAC,QAAL,CAAc,mBAAd,CAHF;AAKD;;AATD,OAAA,CAAA,gCAAA,GAAA,gCAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isElementCollectionFixedSizeBeet = exports.isFixableBeet = exports.assertFixedSizeBeet = exports.isFixedSizeBeet = exports.BEET_TYPE_ARG_INNER = exports.BEET_TYPE_ARG_LEN = exports.BEET_PACKAGE = void 0;\nconst assert_1 = require(\"assert\");\n/**\n * Matches name in package.json\n *\n * @private\n */\nexports.BEET_PACKAGE = '@metaplex-foundation/beet';\n/**\n * @private\n * @category beet\n */\nexports.BEET_TYPE_ARG_LEN = 'len';\n/**\n * @private\n * @category beet\n */\nexports.BEET_TYPE_ARG_INNER = 'Beet<{innner}>';\n// -----------------\n// Guards\n// -----------------\n/**\n * @private\n */\nfunction isFixedSizeBeet(x) {\n    return Object.keys(x).includes('byteSize');\n}\nexports.isFixedSizeBeet = isFixedSizeBeet;\n/**\n * @private\n */\nfunction assertFixedSizeBeet(x, msg = `${x} should have been a fixed beet`) {\n    (0, assert_1.strict)(isFixedSizeBeet(x), msg);\n}\nexports.assertFixedSizeBeet = assertFixedSizeBeet;\n/**\n * @private\n */\nfunction isFixableBeet(x) {\n    return (typeof x.toFixedFromData === 'function' &&\n        typeof x.toFixedFromValue === 'function');\n}\nexports.isFixableBeet = isFixableBeet;\n/**\n * @private\n */\nfunction isElementCollectionFixedSizeBeet(x) {\n    const keys = Object.keys(x);\n    return (keys.includes('length') &&\n        keys.includes('elementByteSize') &&\n        keys.includes('lenPrefixByteSize'));\n}\nexports.isElementCollectionFixedSizeBeet = isElementCollectionFixedSizeBeet;\n//# sourceMappingURL=types.js.map"]},"metadata":{},"sourceType":"script"}