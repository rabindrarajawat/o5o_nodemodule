{"ast":null,"code":"import { OperationClient } from './OperationClient.mjs';\n/** @group Plugins */\n\nconst operationModule = () => ({\n  install(metaplex) {\n    const operationClient = new OperationClient(metaplex);\n\n    metaplex.operations = () => operationClient;\n  }\n\n});\n\nexport { operationModule };","map":{"version":3,"sources":["../../../../src/plugins/operationModule/plugin.ts"],"names":["operationModule","install","metaplex","operationClient","OperationClient","operations"],"mappings":";AAIA;;AACO,MAAMA,eAAe,GAAG,OAAuB;EACpDC,OAAO,CAACC,QAAD,EAAqB;IAC1B,MAAMC,eAAe,GAAG,IAAIC,eAAJ,CAAoBF,QAApB,CAAxB;;IACAA,QAAQ,CAACG,UAATH,GAAsB,MAAMC,eAA5BD;EACF;;AAJoD,CAAvB,CAAxB","sourcesContent":["import { OperationClient } from './OperationClient';\nimport type { Metaplex } from '@/Metaplex';\nimport { MetaplexPlugin } from '@/types';\n\n/** @group Plugins */\nexport const operationModule = (): MetaplexPlugin => ({\n  install(metaplex: Metaplex) {\n    const operationClient = new OperationClient(metaplex);\n    metaplex.operations = () => operationClient;\n  },\n});\n\ndeclare module '../../Metaplex' {\n  interface Metaplex {\n    operations(): OperationClient;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}