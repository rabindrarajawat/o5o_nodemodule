{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keysTypeMap = exports.publicKey = void 0;\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst beet_1 = require(\"@metaplex-foundation/beet\");\n\nconst BEET_SOLANA_PACKAGE = '@metaplex-foundation/beet-solana';\nconst SOLANA_WEB3_PACKAGE = '@solana/web3.js';\nconst uint8Array32 = (0, beet_1.fixedSizeUint8Array)(32);\n/**\n * De/Serializer for solana {@link PublicKey}s aka `publicKey`.\n *\n *\n * ## Using PublicKey Directly\n *\n * ```ts\n * import { publicKey } from '@metaplex-foundation/beet-solana'\n *\n * const generatedKey  = Keypair.generate().publicKey\n * const buf = Buffer.alloc(publicKey.byteSize)\n * beet.write(buf, 0, generatedKey)\n * beet.read(buf, 0) // same as generatedKey\n * ```\n *\n * ## PublicKey as part of a Struct Configuration\n *\n * ```ts\n * import { publicKey } from '@metaplex-foundation/beet-solana'\n *\n * type InstructionArgs = {\n *   authority: web3.PublicKey\n * }\n *\n * const createStruct = new beet.BeetArgsStruct<InstructionArgs>(\n *   [\n *     ['authority', publicKey]\n *   ],\n *   'InstructionArgs'\n * )\n * ```\n *\n * @category beet/solana\n */\n\nexports.publicKey = {\n  write: function (buf, offset, value) {\n    const arr = value.toBytes();\n    uint8Array32.write(buf, offset, arr);\n  },\n  read: function (buf, offset) {\n    const bytes = uint8Array32.read(buf, offset);\n    return new web3_js_1.PublicKey(bytes);\n  },\n  byteSize: uint8Array32.byteSize,\n  description: 'PublicKey'\n};\n/**\n * Maps solana keys beet exports to metadata which describes in which package it\n * is defined as well as which TypeScript type is used to represent the\n * deserialized value in JavaScript.\n *\n * @category TypeDefinition\n */\n\nexports.keysTypeMap = {\n  publicKey: {\n    beet: 'publicKey',\n    isFixable: false,\n    sourcePack: BEET_SOLANA_PACKAGE,\n    ts: 'PublicKey',\n    pack: SOLANA_WEB3_PACKAGE\n  }\n};","map":{"version":3,"sources":["../../../src/keys.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,MAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;AAKA,MAAM,mBAAmB,GAAG,kCAA5B;AACA,MAAM,mBAAmB,GAAG,iBAA5B;AAEA,MAAM,YAAY,GAAG,CAAA,GAAA,MAAA,CAAA,mBAAA,EAAoB,EAApB,CAArB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCG;;AACU,OAAA,CAAA,SAAA,GAAsC;EACjD,KAAK,EAAE,UAAU,GAAV,EAAuB,MAAvB,EAAuC,KAAvC,EAAuD;IAC5D,MAAM,GAAG,GAAG,KAAK,CAAC,OAAN,EAAZ;IACA,YAAY,CAAC,KAAb,CAAmB,GAAnB,EAAwB,MAAxB,EAAgC,GAAhC;EACD,CAJgD;EAKjD,IAAI,EAAE,UAAU,GAAV,EAAuB,MAAvB,EAAqC;IACzC,MAAM,KAAK,GAAG,YAAY,CAAC,IAAb,CAAkB,GAAlB,EAAuB,MAAvB,CAAd;IACA,OAAO,IAAI,SAAA,CAAA,SAAJ,CAAc,KAAd,CAAP;EACD,CARgD;EAUjD,QAAQ,EAAE,YAAY,CAAC,QAV0B;EAWjD,WAAW,EAAE;AAXoC,CAAtC;AA8Bb;;;;;;AAMG;;AACU,OAAA,CAAA,WAAA,GAA2B;EACtC,SAAS,EAAE;IACT,IAAI,EAAE,WADG;IAET,SAAS,EAAE,KAFF;IAGT,UAAU,EAAE,mBAHH;IAIT,EAAE,EAAE,WAJK;IAKT,IAAI,EAAE;EALG;AAD2B,CAA3B","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keysTypeMap = exports.publicKey = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst beet_1 = require(\"@metaplex-foundation/beet\");\nconst BEET_SOLANA_PACKAGE = '@metaplex-foundation/beet-solana';\nconst SOLANA_WEB3_PACKAGE = '@solana/web3.js';\nconst uint8Array32 = (0, beet_1.fixedSizeUint8Array)(32);\n/**\n * De/Serializer for solana {@link PublicKey}s aka `publicKey`.\n *\n *\n * ## Using PublicKey Directly\n *\n * ```ts\n * import { publicKey } from '@metaplex-foundation/beet-solana'\n *\n * const generatedKey  = Keypair.generate().publicKey\n * const buf = Buffer.alloc(publicKey.byteSize)\n * beet.write(buf, 0, generatedKey)\n * beet.read(buf, 0) // same as generatedKey\n * ```\n *\n * ## PublicKey as part of a Struct Configuration\n *\n * ```ts\n * import { publicKey } from '@metaplex-foundation/beet-solana'\n *\n * type InstructionArgs = {\n *   authority: web3.PublicKey\n * }\n *\n * const createStruct = new beet.BeetArgsStruct<InstructionArgs>(\n *   [\n *     ['authority', publicKey]\n *   ],\n *   'InstructionArgs'\n * )\n * ```\n *\n * @category beet/solana\n */\nexports.publicKey = {\n    write: function (buf, offset, value) {\n        const arr = value.toBytes();\n        uint8Array32.write(buf, offset, arr);\n    },\n    read: function (buf, offset) {\n        const bytes = uint8Array32.read(buf, offset);\n        return new web3_js_1.PublicKey(bytes);\n    },\n    byteSize: uint8Array32.byteSize,\n    description: 'PublicKey',\n};\n/**\n * Maps solana keys beet exports to metadata which describes in which package it\n * is defined as well as which TypeScript type is used to represent the\n * deserialized value in JavaScript.\n *\n * @category TypeDefinition\n */\nexports.keysTypeMap = {\n    publicKey: {\n        beet: 'publicKey',\n        isFixable: false,\n        sourcePack: BEET_SOLANA_PACKAGE,\n        ts: 'PublicKey',\n        pack: SOLANA_WEB3_PACKAGE,\n    },\n};\n//# sourceMappingURL=keys.js.map"]},"metadata":{},"sourceType":"script"}