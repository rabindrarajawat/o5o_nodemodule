{"ast":null,"code":"import { RpcClient } from './RpcClient.mjs';\n/** @group Plugins */\n\nconst rpcModule = () => ({\n  install(metaplex) {\n    const rpcClient = new RpcClient(metaplex);\n\n    metaplex.rpc = () => rpcClient;\n  }\n\n});\n\nexport { rpcModule };","map":{"version":3,"sources":["../../../../src/plugins/rpcModule/plugin.ts"],"names":["rpcModule","install","metaplex","rpcClient","RpcClient","rpc"],"mappings":";AAIA;;AACO,MAAMA,SAAS,GAAG,OAAuB;EAC9CC,OAAO,CAACC,QAAD,EAAqB;IAC1B,MAAMC,SAAS,GAAG,IAAIC,SAAJ,CAAcF,QAAd,CAAlB;;IACAA,QAAQ,CAACG,GAATH,GAAe,MAAMC,SAArBD;EACF;;AAJ8C,CAAvB,CAAlB","sourcesContent":["import { RpcClient } from './RpcClient';\nimport type { Metaplex } from '@/Metaplex';\nimport { MetaplexPlugin } from '@/types';\n\n/** @group Plugins */\nexport const rpcModule = (): MetaplexPlugin => ({\n  install(metaplex: Metaplex) {\n    const rpcClient = new RpcClient(metaplex);\n    metaplex.rpc = () => rpcClient;\n  },\n});\n\ndeclare module '../../Metaplex' {\n  interface Metaplex {\n    rpc(): RpcClient;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}