{"ast":null,"code":"import { strict as assert } from 'assert';\n/**\n * Matches name in package.json\n *\n * @private\n */\n\nexport const BEET_PACKAGE = '@metaplex-foundation/beet';\n/**\n * @private\n * @category beet\n */\n\nexport const BEET_TYPE_ARG_LEN = 'len';\n/**\n * @private\n * @category beet\n */\n\nexport const BEET_TYPE_ARG_INNER = 'Beet<{innner}>'; // -----------------\n// Guards\n// -----------------\n\n/**\n * @private\n */\n\nexport function isFixedSizeBeet(x) {\n  return Object.keys(x).includes('byteSize');\n}\n/**\n * @private\n */\n\nexport function assertFixedSizeBeet(x) {\n  let msg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : `${x} should have been a fixed beet`;\n  assert(isFixedSizeBeet(x), msg);\n}\n/**\n * @private\n */\n\nexport function isFixableBeet(x) {\n  return typeof x.toFixedFromData === 'function' && typeof x.toFixedFromValue === 'function';\n}\n/**\n * @private\n */\n\nexport function isElementCollectionFixedSizeBeet(x) {\n  const keys = Object.keys(x);\n  return keys.includes('length') && keys.includes('elementByteSize') && keys.includes('lenPrefixByteSize');\n}","map":{"version":3,"sources":["../../../src/types.ts"],"names":[],"mappings":"AACA,SAAS,MAAM,IAAI,MAAnB,QAAiC,QAAjC;AAEA;;;;AAIG;;AACH,OAAO,MAAM,YAAY,GAAG,2BAArB;AAsKP;;;AAGG;;AACH,OAAO,MAAM,iBAAiB,GAAG,KAA1B;AAEP;;;AAGG;;AACH,OAAO,MAAM,mBAAmB,GAAG,gBAA5B,C,CA+BP;AACA;AACA;;AACA;;AAEG;;AACH,OAAM,SAAU,eAAV,CACJ,CADI,EACS;EAEb,OAAO,MAAM,CAAC,IAAP,CAAY,CAAZ,EAAe,QAAf,CAAwB,UAAxB,CAAP;AACD;AAED;;AAEG;;AACH,OAAM,SAAU,mBAAV,CACJ,CADI,EAEsC;EAAA,IAA1C,GAA0C,uEAApC,GAAG,CAAC,gCAAgC;EAE1C,MAAM,CAAC,eAAe,CAAC,CAAD,CAAhB,EAAqB,GAArB,CAAN;AACD;AAED;;AAEG;;AACH,OAAM,SAAU,aAAV,CAA8B,CAA9B,EAA2C;EAC/C,OACE,OAAQ,CAAuB,CAAC,eAAhC,KAAoD,UAApD,IACA,OAAQ,CAAuB,CAAC,gBAAhC,KAAqD,UAFvD;AAID;AAED;;AAEG;;AACH,OAAM,SAAU,gCAAV,CACJ,CADI,EACkB;EAEtB,MAAM,IAAI,GAAG,MAAM,CAAC,IAAP,CAAY,CAAZ,CAAb;EACA,OACE,IAAI,CAAC,QAAL,CAAc,QAAd,KACA,IAAI,CAAC,QAAL,CAAc,iBAAd,CADA,IAEA,IAAI,CAAC,QAAL,CAAc,mBAAd,CAHF;AAKD","sourceRoot":"","sourcesContent":["import { strict as assert } from 'assert';\n/**\n * Matches name in package.json\n *\n * @private\n */\nexport const BEET_PACKAGE = '@metaplex-foundation/beet';\n/**\n * @private\n * @category beet\n */\nexport const BEET_TYPE_ARG_LEN = 'len';\n/**\n * @private\n * @category beet\n */\nexport const BEET_TYPE_ARG_INNER = 'Beet<{innner}>';\n// -----------------\n// Guards\n// -----------------\n/**\n * @private\n */\nexport function isFixedSizeBeet(x) {\n    return Object.keys(x).includes('byteSize');\n}\n/**\n * @private\n */\nexport function assertFixedSizeBeet(x, msg = `${x} should have been a fixed beet`) {\n    assert(isFixedSizeBeet(x), msg);\n}\n/**\n * @private\n */\nexport function isFixableBeet(x) {\n    return (typeof x.toFixedFromData === 'function' &&\n        typeof x.toFixedFromValue === 'function');\n}\n/**\n * @private\n */\nexport function isElementCollectionFixedSizeBeet(x) {\n    const keys = Object.keys(x);\n    return (keys.includes('length') &&\n        keys.includes('elementByteSize') &&\n        keys.includes('lenPrefixByteSize'));\n}\n//# sourceMappingURL=types.js.map"]},"metadata":{},"sourceType":"module"}