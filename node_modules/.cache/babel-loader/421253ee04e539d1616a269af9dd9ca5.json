{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addSigners = void 0;\n/** @internal */\n\nfunction addSigners(keys, ownerOrAuthority, multiSigners) {\n  if (multiSigners.length) {\n    keys.push({\n      pubkey: ownerOrAuthority,\n      isSigner: false,\n      isWritable: false\n    });\n\n    for (const signer of multiSigners) {\n      keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n  } else {\n    keys.push({\n      pubkey: ownerOrAuthority,\n      isSigner: true,\n      isWritable: false\n    });\n  }\n\n  return keys;\n}\n\nexports.addSigners = addSigners;","map":{"version":3,"sources":["../../../src/instructions/internal.ts"],"names":[],"mappings":";;;;;;AAEA;;AACA,SAAgB,UAAhB,CAA2B,IAA3B,EAAgD,gBAAhD,EAA6E,YAA7E,EAAmG;EAC/F,IAAI,YAAY,CAAC,MAAjB,EAAyB;IACrB,IAAI,CAAC,IAAL,CAAU;MAAE,MAAM,EAAE,gBAAV;MAA4B,QAAQ,EAAE,KAAtC;MAA6C,UAAU,EAAE;IAAzD,CAAV;;IACA,KAAK,MAAM,MAAX,IAAqB,YAArB,EAAmC;MAC/B,IAAI,CAAC,IAAL,CAAU;QAAE,MAAM,EAAE,MAAM,CAAC,SAAjB;QAA4B,QAAQ,EAAE,IAAtC;QAA4C,UAAU,EAAE;MAAxD,CAAV;IACH;EACJ,CALD,MAKO;IACH,IAAI,CAAC,IAAL,CAAU;MAAE,MAAM,EAAE,gBAAV;MAA4B,QAAQ,EAAE,IAAtC;MAA4C,UAAU,EAAE;IAAxD,CAAV;EACH;;EACD,OAAO,IAAP;AACH;;AAVD,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addSigners = void 0;\n/** @internal */\nfunction addSigners(keys, ownerOrAuthority, multiSigners) {\n    if (multiSigners.length) {\n        keys.push({ pubkey: ownerOrAuthority, isSigner: false, isWritable: false });\n        for (const signer of multiSigners) {\n            keys.push({ pubkey: signer.publicKey, isSigner: true, isWritable: false });\n        }\n    }\n    else {\n        keys.push({ pubkey: ownerOrAuthority, isSigner: true, isWritable: false });\n    }\n    return keys;\n}\nexports.addSigners = addSigners;\n//# sourceMappingURL=internal.js.map"]},"metadata":{},"sourceType":"script"}