{"ast":null,"code":"import { findCandyMachineV2CreatorPda } from '../pdas.mjs';\nimport { useOperation } from '../../../types/Operation.mjs'; // -----------------\n// Operation\n// -----------------\n\nconst Key = 'FindMintedNftsByCandyMachineV2Operation';\n/**\n * Find all minted NFTs from a given Candy Machine address.\n *\n * ```ts\n * const nfts = await metaplex\n *   .candyMachinesV2()\n *   .findMintedNfts({ candyMachine };\n * ```\n *\n * @group Operations\n * @category Constructors\n */\n\nconst findMintedNftsByCandyMachineV2Operation = useOperation(Key);\n/**\n * @group Operations\n * @category Types\n */\n\n/**\n * @group Operations\n * @category Handlers\n */\n\nconst findMintedNftsByCandyMachineV2OperationHandler = {\n  handle: async (operation, metaplex, scope) => {\n    const {\n      candyMachine,\n      version = 2\n    } = operation.input;\n    const firstCreator = version === 2 ? findCandyMachineV2CreatorPda(candyMachine) : candyMachine;\n    const mintedNfts = await metaplex.nfts().findAllByCreator({\n      creator: firstCreator,\n      position: 1\n    }, scope);\n    return mintedNfts;\n  }\n};\nexport { findMintedNftsByCandyMachineV2Operation, findMintedNftsByCandyMachineV2OperationHandler };","map":{"version":3,"sources":["../../../../../src/plugins/candyMachineV2Module/operations/findMintedNftsByCandyMachineV2.ts"],"names":["Key","findMintedNftsByCandyMachineV2Operation","useOperation","findMintedNftsByCandyMachineV2OperationHandler","handle","operation","metaplex","scope","candyMachine","version","input","firstCreator","findCandyMachineV2CreatorPda","mintedNfts","nfts","findAllByCreator","creator","position"],"mappings":";6DAWA;AACA;AACA;;AAEA,MAAMA,GAAG,GAAG,yCAAZ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MACaC,uCAAuC,GAClDC,YAAY,CAA0CF,GAA1C,C;AAEd;AACA;AACA;AACA;;AA6BA;AACA;AACA;AACA;;AACO,MAAMG,8CAAyG,GACpH;EACEC,MAAM,EAAE,OACNC,SADM,EAENC,QAFM,EAGNC,KAHM,KAIH;IACH,MAAM;MAAEC,YAAF;MAAgBC,OAAO,GAAG;IAA1B,IAAgCJ,SAAS,CAACK,KAAhD;IACA,MAAMC,YAAY,GAChBF,OAAO,KAAK,CAAZA,GACIG,4BAA4B,CAACJ,YAAD,CADhCC,GAEID,YAHN;IAKA,MAAMK,UAAU,GAAG,MAAMP,QAAQ,CAC9BQ,IADsBR,GAEtBS,gBAFsBT,CAEL;MAAEU,OAAO,EAAEL,YAAX;MAAyBM,QAAQ,EAAE;IAAnC,CAFKX,EAEmCC,KAFnCD,CAAzB;IAIA,OAAOO,UAAP;EACF;AAjBF,CADK","sourcesContent":["import { PublicKey } from '@solana/web3.js';\nimport { Metadata, Nft } from '../../nftModule';\nimport { findCandyMachineV2CreatorPda } from '../pdas';\nimport {\n  Operation,\n  OperationHandler,\n  OperationScope,\n  useOperation,\n} from '@/types';\nimport { Metaplex } from '@/Metaplex';\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'FindMintedNftsByCandyMachineV2Operation' as const;\n\n/**\n * Find all minted NFTs from a given Candy Machine address.\n *\n * ```ts\n * const nfts = await metaplex\n *   .candyMachinesV2()\n *   .findMintedNfts({ candyMachine };\n * ```\n *\n * @group Operations\n * @category Constructors\n */\nexport const findMintedNftsByCandyMachineV2Operation =\n  useOperation<FindMintedNftsByCandyMachineV2Operation>(Key);\n\n/**\n * @group Operations\n * @category Types\n */\nexport type FindMintedNftsByCandyMachineV2Operation = Operation<\n  typeof Key,\n  FindMintedNftsByCandyMachineV2Input,\n  FindMintedNftsByCandyMachineV2Output\n>;\n\n/**\n * @group Operations\n * @category Inputs\n */\nexport type FindMintedNftsByCandyMachineV2Input = {\n  /** The Candy Machine address. */\n  candyMachine: PublicKey;\n\n  /**\n   * The Candy Machine version\n   *\n   * @defaultValue `2`\n   */\n  version?: 1 | 2;\n};\n\n/**\n * @group Operations\n * @category Outputs\n */\nexport type FindMintedNftsByCandyMachineV2Output = (Metadata | Nft)[];\n\n/**\n * @group Operations\n * @category Handlers\n */\nexport const findMintedNftsByCandyMachineV2OperationHandler: OperationHandler<FindMintedNftsByCandyMachineV2Operation> =\n  {\n    handle: async (\n      operation: FindMintedNftsByCandyMachineV2Operation,\n      metaplex: Metaplex,\n      scope: OperationScope\n    ) => {\n      const { candyMachine, version = 2 } = operation.input;\n      const firstCreator =\n        version === 2\n          ? findCandyMachineV2CreatorPda(candyMachine)\n          : candyMachine;\n\n      const mintedNfts = await metaplex\n        .nfts()\n        .findAllByCreator({ creator: firstCreator, position: 1 }, scope);\n\n      return mintedNfts as (Nft | Metadata)[];\n    },\n  };\n"]},"metadata":{},"sourceType":"module"}