{"ast":null,"code":"/** Solana Mainnet (beta) cluster, e.g. https://api.mainnet-beta.solana.com */\nexport const SOLANA_MAINNET_CHAIN = 'solana:mainnet';\n/** Solana Devnet cluster, e.g. https://api.devnet.solana.com */\n\nexport const SOLANA_DEVNET_CHAIN = 'solana:devnet';\n/** Solana Testnet cluster, e.g. https://api.testnet.solana.com */\n\nexport const SOLANA_TESTNET_CHAIN = 'solana:testnet';\n/** Solana Localnet cluster, e.g. http://localhost:8899 */\n\nexport const SOLANA_LOCALNET_CHAIN = 'solana:localnet';\n/** Array of all Solana clusters */\n\nexport const SOLANA_CHAINS = [SOLANA_MAINNET_CHAIN, SOLANA_DEVNET_CHAIN, SOLANA_TESTNET_CHAIN, SOLANA_LOCALNET_CHAIN];\n/**\n * Check if a chain corresponds with one of the Solana clusters.\n */\n\nexport function isSolanaChain(chain) {\n  return SOLANA_CHAINS.includes(chain);\n}","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":"AAEA;AACA,OAAO,MAAM,oBAAoB,GAAG,gBAA7B;AAEP;;AACA,OAAO,MAAM,mBAAmB,GAAG,eAA5B;AAEP;;AACA,OAAO,MAAM,oBAAoB,GAAG,gBAA7B;AAEP;;AACA,OAAO,MAAM,qBAAqB,GAAG,iBAA9B;AAEP;;AACA,OAAO,MAAM,aAAa,GAAG,CACzB,oBADyB,EAEzB,mBAFyB,EAGzB,oBAHyB,EAIzB,qBAJyB,CAAtB;AAUP;;AAEG;;AACH,OAAM,SAAU,aAAV,CAAwB,KAAxB,EAA+C;EACjD,OAAO,aAAa,CAAC,QAAd,CAAuB,KAAvB,CAAP;AACH","sourceRoot":"","sourcesContent":["/** Solana Mainnet (beta) cluster, e.g. https://api.mainnet-beta.solana.com */\nexport const SOLANA_MAINNET_CHAIN = 'solana:mainnet';\n/** Solana Devnet cluster, e.g. https://api.devnet.solana.com */\nexport const SOLANA_DEVNET_CHAIN = 'solana:devnet';\n/** Solana Testnet cluster, e.g. https://api.testnet.solana.com */\nexport const SOLANA_TESTNET_CHAIN = 'solana:testnet';\n/** Solana Localnet cluster, e.g. http://localhost:8899 */\nexport const SOLANA_LOCALNET_CHAIN = 'solana:localnet';\n/** Array of all Solana clusters */\nexport const SOLANA_CHAINS = [\n    SOLANA_MAINNET_CHAIN,\n    SOLANA_DEVNET_CHAIN,\n    SOLANA_TESTNET_CHAIN,\n    SOLANA_LOCALNET_CHAIN,\n];\n/**\n * Check if a chain corresponds with one of the Solana clusters.\n */\nexport function isSolanaChain(chain) {\n    return SOLANA_CHAINS.includes(chain);\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}