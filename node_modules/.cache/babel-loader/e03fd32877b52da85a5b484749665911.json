{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TokenUnsupportedInstructionError = exports.TokenInvalidInstructionTypeError = exports.TokenInvalidInstructionDataError = exports.TokenInvalidInstructionKeysError = exports.TokenInvalidInstructionProgramError = exports.TokenOwnerOffCurveError = exports.TokenInvalidOwnerError = exports.TokenInvalidMintError = exports.TokenInvalidAccountSizeError = exports.TokenInvalidAccountOwnerError = exports.TokenInvalidAccountError = exports.TokenAccountNotFoundError = exports.TokenError = void 0;\n/** Base class for errors */\n\nclass TokenError extends Error {\n  constructor(message) {\n    super(message);\n  }\n\n}\n\nexports.TokenError = TokenError;\n/** Thrown if an account is not found at the expected address */\n\nclass TokenAccountNotFoundError extends TokenError {\n  constructor() {\n    super(...arguments);\n    this.name = 'TokenAccountNotFoundError';\n  }\n\n}\n\nexports.TokenAccountNotFoundError = TokenAccountNotFoundError;\n/** Thrown if a program state account is not a valid Account */\n\nclass TokenInvalidAccountError extends TokenError {\n  constructor() {\n    super(...arguments);\n    this.name = 'TokenInvalidAccountError';\n  }\n\n}\n\nexports.TokenInvalidAccountError = TokenInvalidAccountError;\n/** Thrown if a program state account is not owned by the expected token program */\n\nclass TokenInvalidAccountOwnerError extends TokenError {\n  constructor() {\n    super(...arguments);\n    this.name = 'TokenInvalidAccountOwnerError';\n  }\n\n}\n\nexports.TokenInvalidAccountOwnerError = TokenInvalidAccountOwnerError;\n/** Thrown if the byte length of an program state account doesn't match the expected size */\n\nclass TokenInvalidAccountSizeError extends TokenError {\n  constructor() {\n    super(...arguments);\n    this.name = 'TokenInvalidAccountSizeError';\n  }\n\n}\n\nexports.TokenInvalidAccountSizeError = TokenInvalidAccountSizeError;\n/** Thrown if the mint of a token account doesn't match the expected mint */\n\nclass TokenInvalidMintError extends TokenError {\n  constructor() {\n    super(...arguments);\n    this.name = 'TokenInvalidMintError';\n  }\n\n}\n\nexports.TokenInvalidMintError = TokenInvalidMintError;\n/** Thrown if the owner of a token account doesn't match the expected owner */\n\nclass TokenInvalidOwnerError extends TokenError {\n  constructor() {\n    super(...arguments);\n    this.name = 'TokenInvalidOwnerError';\n  }\n\n}\n\nexports.TokenInvalidOwnerError = TokenInvalidOwnerError;\n/** Thrown if the owner of a token account is a PDA (Program Derived Address) */\n\nclass TokenOwnerOffCurveError extends TokenError {\n  constructor() {\n    super(...arguments);\n    this.name = 'TokenOwnerOffCurveError';\n  }\n\n}\n\nexports.TokenOwnerOffCurveError = TokenOwnerOffCurveError;\n/** Thrown if an instruction's program is invalid */\n\nclass TokenInvalidInstructionProgramError extends TokenError {\n  constructor() {\n    super(...arguments);\n    this.name = 'TokenInvalidInstructionProgramError';\n  }\n\n}\n\nexports.TokenInvalidInstructionProgramError = TokenInvalidInstructionProgramError;\n/** Thrown if an instruction's keys are invalid */\n\nclass TokenInvalidInstructionKeysError extends TokenError {\n  constructor() {\n    super(...arguments);\n    this.name = 'TokenInvalidInstructionKeysError';\n  }\n\n}\n\nexports.TokenInvalidInstructionKeysError = TokenInvalidInstructionKeysError;\n/** Thrown if an instruction's data is invalid */\n\nclass TokenInvalidInstructionDataError extends TokenError {\n  constructor() {\n    super(...arguments);\n    this.name = 'TokenInvalidInstructionDataError';\n  }\n\n}\n\nexports.TokenInvalidInstructionDataError = TokenInvalidInstructionDataError;\n/** Thrown if an instruction's type is invalid */\n\nclass TokenInvalidInstructionTypeError extends TokenError {\n  constructor() {\n    super(...arguments);\n    this.name = 'TokenInvalidInstructionTypeError';\n  }\n\n}\n\nexports.TokenInvalidInstructionTypeError = TokenInvalidInstructionTypeError;\n/** Thrown if the program does not support the desired instruction */\n\nclass TokenUnsupportedInstructionError extends TokenError {\n  constructor() {\n    super(...arguments);\n    this.name = 'TokenUnsupportedInstructionError';\n  }\n\n}\n\nexports.TokenUnsupportedInstructionError = TokenUnsupportedInstructionError;","map":{"version":3,"sources":["../../src/errors.ts"],"names":[],"mappings":";;;;;;AAAA;;AACA,MAAsB,UAAtB,SAAyC,KAAzC,CAA8C;EAC1C,WAAA,CAAY,OAAZ,EAA4B;IACxB,MAAM,OAAN;EACH;;AAHyC;;AAA9C,OAAA,CAAA,UAAA,GAAA,UAAA;AAMA;;AACA,MAAa,yBAAb,SAA+C,UAA/C,CAAyD;EAAzD,WAAA,GAAA;;IACI,KAAA,IAAA,GAAO,2BAAP;EACH;;AAFwD;;AAAzD,OAAA,CAAA,yBAAA,GAAA,yBAAA;AAIA;;AACA,MAAa,wBAAb,SAA8C,UAA9C,CAAwD;EAAxD,WAAA,GAAA;;IACI,KAAA,IAAA,GAAO,0BAAP;EACH;;AAFuD;;AAAxD,OAAA,CAAA,wBAAA,GAAA,wBAAA;AAIA;;AACA,MAAa,6BAAb,SAAmD,UAAnD,CAA6D;EAA7D,WAAA,GAAA;;IACI,KAAA,IAAA,GAAO,+BAAP;EACH;;AAF4D;;AAA7D,OAAA,CAAA,6BAAA,GAAA,6BAAA;AAIA;;AACA,MAAa,4BAAb,SAAkD,UAAlD,CAA4D;EAA5D,WAAA,GAAA;;IACI,KAAA,IAAA,GAAO,8BAAP;EACH;;AAF2D;;AAA5D,OAAA,CAAA,4BAAA,GAAA,4BAAA;AAIA;;AACA,MAAa,qBAAb,SAA2C,UAA3C,CAAqD;EAArD,WAAA,GAAA;;IACI,KAAA,IAAA,GAAO,uBAAP;EACH;;AAFoD;;AAArD,OAAA,CAAA,qBAAA,GAAA,qBAAA;AAIA;;AACA,MAAa,sBAAb,SAA4C,UAA5C,CAAsD;EAAtD,WAAA,GAAA;;IACI,KAAA,IAAA,GAAO,wBAAP;EACH;;AAFqD;;AAAtD,OAAA,CAAA,sBAAA,GAAA,sBAAA;AAIA;;AACA,MAAa,uBAAb,SAA6C,UAA7C,CAAuD;EAAvD,WAAA,GAAA;;IACI,KAAA,IAAA,GAAO,yBAAP;EACH;;AAFsD;;AAAvD,OAAA,CAAA,uBAAA,GAAA,uBAAA;AAIA;;AACA,MAAa,mCAAb,SAAyD,UAAzD,CAAmE;EAAnE,WAAA,GAAA;;IACI,KAAA,IAAA,GAAO,qCAAP;EACH;;AAFkE;;AAAnE,OAAA,CAAA,mCAAA,GAAA,mCAAA;AAIA;;AACA,MAAa,gCAAb,SAAsD,UAAtD,CAAgE;EAAhE,WAAA,GAAA;;IACI,KAAA,IAAA,GAAO,kCAAP;EACH;;AAF+D;;AAAhE,OAAA,CAAA,gCAAA,GAAA,gCAAA;AAIA;;AACA,MAAa,gCAAb,SAAsD,UAAtD,CAAgE;EAAhE,WAAA,GAAA;;IACI,KAAA,IAAA,GAAO,kCAAP;EACH;;AAF+D;;AAAhE,OAAA,CAAA,gCAAA,GAAA,gCAAA;AAIA;;AACA,MAAa,gCAAb,SAAsD,UAAtD,CAAgE;EAAhE,WAAA,GAAA;;IACI,KAAA,IAAA,GAAO,kCAAP;EACH;;AAF+D;;AAAhE,OAAA,CAAA,gCAAA,GAAA,gCAAA;AAIA;;AACA,MAAa,gCAAb,SAAsD,UAAtD,CAAgE;EAAhE,WAAA,GAAA;;IACI,KAAA,IAAA,GAAO,kCAAP;EACH;;AAF+D;;AAAhE,OAAA,CAAA,gCAAA,GAAA,gCAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenUnsupportedInstructionError = exports.TokenInvalidInstructionTypeError = exports.TokenInvalidInstructionDataError = exports.TokenInvalidInstructionKeysError = exports.TokenInvalidInstructionProgramError = exports.TokenOwnerOffCurveError = exports.TokenInvalidOwnerError = exports.TokenInvalidMintError = exports.TokenInvalidAccountSizeError = exports.TokenInvalidAccountOwnerError = exports.TokenInvalidAccountError = exports.TokenAccountNotFoundError = exports.TokenError = void 0;\n/** Base class for errors */\nclass TokenError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nexports.TokenError = TokenError;\n/** Thrown if an account is not found at the expected address */\nclass TokenAccountNotFoundError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenAccountNotFoundError';\n    }\n}\nexports.TokenAccountNotFoundError = TokenAccountNotFoundError;\n/** Thrown if a program state account is not a valid Account */\nclass TokenInvalidAccountError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountError';\n    }\n}\nexports.TokenInvalidAccountError = TokenInvalidAccountError;\n/** Thrown if a program state account is not owned by the expected token program */\nclass TokenInvalidAccountOwnerError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountOwnerError';\n    }\n}\nexports.TokenInvalidAccountOwnerError = TokenInvalidAccountOwnerError;\n/** Thrown if the byte length of an program state account doesn't match the expected size */\nclass TokenInvalidAccountSizeError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountSizeError';\n    }\n}\nexports.TokenInvalidAccountSizeError = TokenInvalidAccountSizeError;\n/** Thrown if the mint of a token account doesn't match the expected mint */\nclass TokenInvalidMintError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidMintError';\n    }\n}\nexports.TokenInvalidMintError = TokenInvalidMintError;\n/** Thrown if the owner of a token account doesn't match the expected owner */\nclass TokenInvalidOwnerError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidOwnerError';\n    }\n}\nexports.TokenInvalidOwnerError = TokenInvalidOwnerError;\n/** Thrown if the owner of a token account is a PDA (Program Derived Address) */\nclass TokenOwnerOffCurveError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenOwnerOffCurveError';\n    }\n}\nexports.TokenOwnerOffCurveError = TokenOwnerOffCurveError;\n/** Thrown if an instruction's program is invalid */\nclass TokenInvalidInstructionProgramError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionProgramError';\n    }\n}\nexports.TokenInvalidInstructionProgramError = TokenInvalidInstructionProgramError;\n/** Thrown if an instruction's keys are invalid */\nclass TokenInvalidInstructionKeysError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionKeysError';\n    }\n}\nexports.TokenInvalidInstructionKeysError = TokenInvalidInstructionKeysError;\n/** Thrown if an instruction's data is invalid */\nclass TokenInvalidInstructionDataError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionDataError';\n    }\n}\nexports.TokenInvalidInstructionDataError = TokenInvalidInstructionDataError;\n/** Thrown if an instruction's type is invalid */\nclass TokenInvalidInstructionTypeError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionTypeError';\n    }\n}\nexports.TokenInvalidInstructionTypeError = TokenInvalidInstructionTypeError;\n/** Thrown if the program does not support the desired instruction */\nclass TokenUnsupportedInstructionError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenUnsupportedInstructionError';\n    }\n}\nexports.TokenUnsupportedInstructionError = TokenUnsupportedInstructionError;\n//# sourceMappingURL=errors.js.map"]},"metadata":{},"sourceType":"script"}