{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sanitizeMetaStrings = exports.getParsedNftAccountsByOwner = void 0;\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar lodash_chunk_1 = __importDefault(require(\"lodash.chunk\"));\n\nvar lodash_orderby_1 = __importDefault(require(\"lodash.orderby\"));\n\nvar utils_1 = require(\"./utils\");\n\nvar solana_1 = require(\"./config/solana\");\n\nvar sortKeys;\n\n(function (sortKeys) {\n  sortKeys[\"updateAuthority\"] = \"updateAuthority\";\n})(sortKeys || (sortKeys = {}));\n\nvar getParsedNftAccountsByOwner = function (_a) {\n  var publicAddress = _a.publicAddress,\n      _b = _a.connection,\n      connection = _b === void 0 ? (0, utils_1.createConnectionConfig)() : _b,\n      _c = _a.sanitize,\n      sanitize = _c === void 0 ? true : _c,\n      _d = _a.stringifyPubKeys,\n      stringifyPubKeys = _d === void 0 ? true : _d,\n      _e = _a.sort,\n      sort = _e === void 0 ? true : _e,\n      _f = _a.limit,\n      limit = _f === void 0 ? 5000 : _f;\n  return __awaiter(void 0, void 0, void 0, function () {\n    var isValidAddress, splAccounts, nftAccounts, accountsSlice, metadataAcountsAddressPromises, metadataAccounts, metaAccountsRawPromises, accountsRawMeta, accountsDecodedMeta, accountsFiltered, accountsSorted;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          isValidAddress = (0, utils_1.isValidSolanaAddress)(publicAddress);\n\n          if (!isValidAddress) {\n            return [2\n            /*return*/\n            , []];\n          }\n\n          return [4\n          /*yield*/\n          , connection.getParsedTokenAccountsByOwner(new web3_js_1.PublicKey(publicAddress), {\n            programId: new web3_js_1.PublicKey(solana_1.TOKEN_PROGRAM)\n          })];\n\n        case 1:\n          splAccounts = _g.sent().value;\n          nftAccounts = splAccounts.filter(function (t) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n\n            var amount = (_e = (_d = (_c = (_b = (_a = t.account) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.parsed) === null || _c === void 0 ? void 0 : _c.info) === null || _d === void 0 ? void 0 : _d.tokenAmount) === null || _e === void 0 ? void 0 : _e.uiAmount;\n            var decimals = (_k = (_j = (_h = (_g = (_f = t.account) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.parsed) === null || _h === void 0 ? void 0 : _h.info) === null || _j === void 0 ? void 0 : _j.tokenAmount) === null || _k === void 0 ? void 0 : _k.decimals;\n            return decimals === 0 && amount >= 1;\n          }).map(function (t) {\n            var _a, _b, _c, _d;\n\n            var address = (_d = (_c = (_b = (_a = t.account) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.parsed) === null || _c === void 0 ? void 0 : _c.info) === null || _d === void 0 ? void 0 : _d.mint;\n            return new web3_js_1.PublicKey(address);\n          });\n          accountsSlice = nftAccounts === null || nftAccounts === void 0 ? void 0 : nftAccounts.slice(0, limit);\n          return [4\n          /*yield*/\n          , Promise.allSettled(accountsSlice.map(utils_1.getSolanaMetadataAddress))];\n\n        case 2:\n          metadataAcountsAddressPromises = _g.sent();\n          metadataAccounts = metadataAcountsAddressPromises.filter(onlySuccessfullPromises).map(function (p) {\n            return p.value;\n          });\n          return [4\n          /*yield*/\n          , Promise.allSettled((0, lodash_chunk_1.default)(metadataAccounts, 99).map(function (chunk) {\n            return connection.getMultipleAccountsInfo(chunk);\n          }))];\n\n        case 3:\n          metaAccountsRawPromises = _g.sent();\n          accountsRawMeta = metaAccountsRawPromises.filter(function (_a) {\n            var status = _a.status;\n            return status === \"fulfilled\";\n          }).flatMap(function (p) {\n            return p.value;\n          }); // There is no reason to continue processing\n          // if Mints doesn't have associated metadata account. just return []\n\n          if (!(accountsRawMeta === null || accountsRawMeta === void 0 ? void 0 : accountsRawMeta.length) || (accountsRawMeta === null || accountsRawMeta === void 0 ? void 0 : accountsRawMeta.length) === 0) {\n            return [2\n            /*return*/\n            , []];\n          }\n\n          return [4\n          /*yield*/\n          , Promise.allSettled(accountsRawMeta.map(function (accountInfo) {\n            var _a;\n\n            return (0, utils_1.decodeTokenMetadata)((_a = accountInfo) === null || _a === void 0 ? void 0 : _a.data);\n          }))];\n\n        case 4:\n          accountsDecodedMeta = _g.sent();\n          accountsFiltered = accountsDecodedMeta.filter(onlySuccessfullPromises).filter(onlyNftsWithMetadata).map(function (p) {\n            var value = p.value;\n            return sanitize ? sanitizeTokenMeta(value) : value;\n          }).map(function (token) {\n            return stringifyPubKeys ? publicKeyToString(token) : token;\n          }); // sort accounts if sort is true & updateAuthority stringified\n\n          if (stringifyPubKeys && sort) {\n            accountsSorted = (0, lodash_orderby_1.default)(accountsFiltered, [sortKeys.updateAuthority], [\"asc\"]);\n            return [2\n            /*return*/\n            , accountsSorted];\n          } // otherwise return unsorted\n\n\n          return [2\n          /*return*/\n          , accountsFiltered];\n      }\n    });\n  });\n};\n\nexports.getParsedNftAccountsByOwner = getParsedNftAccountsByOwner;\n\nvar sanitizeTokenMeta = function (tokenData) {\n  var _a, _b, _c;\n\n  return __assign(__assign({}, tokenData), {\n    data: __assign(__assign({}, tokenData === null || tokenData === void 0 ? void 0 : tokenData.data), {\n      name: (0, exports.sanitizeMetaStrings)((_a = tokenData === null || tokenData === void 0 ? void 0 : tokenData.data) === null || _a === void 0 ? void 0 : _a.name),\n      symbol: (0, exports.sanitizeMetaStrings)((_b = tokenData === null || tokenData === void 0 ? void 0 : tokenData.data) === null || _b === void 0 ? void 0 : _b.symbol),\n      uri: (0, exports.sanitizeMetaStrings)((_c = tokenData === null || tokenData === void 0 ? void 0 : tokenData.data) === null || _c === void 0 ? void 0 : _c.uri)\n    })\n  });\n}; // Convert all PublicKey to string\n\n\nvar publicKeyToString = function (tokenData) {\n  var _a, _b, _c, _d, _e, _f;\n\n  return __assign(__assign({}, tokenData), {\n    mint: (_b = (_a = tokenData === null || tokenData === void 0 ? void 0 : tokenData.mint) === null || _a === void 0 ? void 0 : _a.toString) === null || _b === void 0 ? void 0 : _b.call(_a),\n    updateAuthority: (_d = (_c = tokenData === null || tokenData === void 0 ? void 0 : tokenData.updateAuthority) === null || _c === void 0 ? void 0 : _c.toString) === null || _d === void 0 ? void 0 : _d.call(_c),\n    data: __assign(__assign({}, tokenData === null || tokenData === void 0 ? void 0 : tokenData.data), {\n      creators: (_f = (_e = tokenData === null || tokenData === void 0 ? void 0 : tokenData.data) === null || _e === void 0 ? void 0 : _e.creators) === null || _f === void 0 ? void 0 : _f.map(function (c) {\n        var _a, _b;\n\n        return __assign(__assign({}, c), {\n          address: (_b = (_a = new web3_js_1.PublicKey(c === null || c === void 0 ? void 0 : c.address)) === null || _a === void 0 ? void 0 : _a.toString) === null || _b === void 0 ? void 0 : _b.call(_a)\n        });\n      })\n    })\n  });\n}; // Remove all empty space, new line, etc. symbols\n// In some reason such symbols parsed back from Buffer looks weird\n// like \"\\x0000\" instead of usual spaces.\n\n\nvar sanitizeMetaStrings = function (metaString) {\n  return metaString.replace(/\\0/g, \"\");\n};\n\nexports.sanitizeMetaStrings = sanitizeMetaStrings;\n\nvar onlySuccessfullPromises = function (result) {\n  return result && result.status === \"fulfilled\";\n}; // Remove any NFT Metadata Account which doesn't have uri field\n// We can assume such NFTs are broken or invalid.\n\n\nvar onlyNftsWithMetadata = function (t) {\n  var _a, _b, _c;\n\n  var uri = (_c = (_b = (_a = t.value.data) === null || _a === void 0 ? void 0 : _a.uri) === null || _b === void 0 ? void 0 : _b.replace) === null || _c === void 0 ? void 0 : _c.call(_b, /\\0/g, \"\");\n  return uri !== \"\" && uri !== undefined;\n};","map":{"version":3,"sources":["../src/getParsedNftAccountsByOwner.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sanitizeMetaStrings = exports.getParsedNftAccountsByOwner = void 0;\nvar web3_js_1 = require(\"@solana/web3.js\");\nvar lodash_chunk_1 = __importDefault(require(\"lodash.chunk\"));\nvar lodash_orderby_1 = __importDefault(require(\"lodash.orderby\"));\nvar utils_1 = require(\"./utils\");\nvar solana_1 = require(\"./config/solana\");\nvar sortKeys;\n(function (sortKeys) {\n    sortKeys[\"updateAuthority\"] = \"updateAuthority\";\n})(sortKeys || (sortKeys = {}));\nvar getParsedNftAccountsByOwner = function (_a) {\n    var publicAddress = _a.publicAddress, _b = _a.connection, connection = _b === void 0 ? (0, utils_1.createConnectionConfig)() : _b, _c = _a.sanitize, sanitize = _c === void 0 ? true : _c, _d = _a.stringifyPubKeys, stringifyPubKeys = _d === void 0 ? true : _d, _e = _a.sort, sort = _e === void 0 ? true : _e, _f = _a.limit, limit = _f === void 0 ? 5000 : _f;\n    return __awaiter(void 0, void 0, void 0, function () {\n        var isValidAddress, splAccounts, nftAccounts, accountsSlice, metadataAcountsAddressPromises, metadataAccounts, metaAccountsRawPromises, accountsRawMeta, accountsDecodedMeta, accountsFiltered, accountsSorted;\n        return __generator(this, function (_g) {\n            switch (_g.label) {\n                case 0:\n                    isValidAddress = (0, utils_1.isValidSolanaAddress)(publicAddress);\n                    if (!isValidAddress) {\n                        return [2 /*return*/, []];\n                    }\n                    return [4 /*yield*/, connection.getParsedTokenAccountsByOwner(new web3_js_1.PublicKey(publicAddress), {\n                            programId: new web3_js_1.PublicKey(solana_1.TOKEN_PROGRAM),\n                        })];\n                case 1:\n                    splAccounts = (_g.sent()).value;\n                    nftAccounts = splAccounts\n                        .filter(function (t) {\n                        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n                        var amount = (_e = (_d = (_c = (_b = (_a = t.account) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.parsed) === null || _c === void 0 ? void 0 : _c.info) === null || _d === void 0 ? void 0 : _d.tokenAmount) === null || _e === void 0 ? void 0 : _e.uiAmount;\n                        var decimals = (_k = (_j = (_h = (_g = (_f = t.account) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.parsed) === null || _h === void 0 ? void 0 : _h.info) === null || _j === void 0 ? void 0 : _j.tokenAmount) === null || _k === void 0 ? void 0 : _k.decimals;\n                        return decimals === 0 && amount >= 1;\n                    })\n                        .map(function (t) {\n                        var _a, _b, _c, _d;\n                        var address = (_d = (_c = (_b = (_a = t.account) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.parsed) === null || _c === void 0 ? void 0 : _c.info) === null || _d === void 0 ? void 0 : _d.mint;\n                        return new web3_js_1.PublicKey(address);\n                    });\n                    accountsSlice = nftAccounts === null || nftAccounts === void 0 ? void 0 : nftAccounts.slice(0, limit);\n                    return [4 /*yield*/, Promise.allSettled(accountsSlice.map(utils_1.getSolanaMetadataAddress))];\n                case 2:\n                    metadataAcountsAddressPromises = _g.sent();\n                    metadataAccounts = metadataAcountsAddressPromises\n                        .filter(onlySuccessfullPromises)\n                        .map(function (p) { return p.value; });\n                    return [4 /*yield*/, Promise.allSettled((0, lodash_chunk_1.default)(metadataAccounts, 99).map(function (chunk) {\n                            return connection.getMultipleAccountsInfo(chunk);\n                        }))];\n                case 3:\n                    metaAccountsRawPromises = _g.sent();\n                    accountsRawMeta = metaAccountsRawPromises\n                        .filter(function (_a) {\n                        var status = _a.status;\n                        return status === \"fulfilled\";\n                    })\n                        .flatMap(function (p) { return p.value; });\n                    // There is no reason to continue processing\n                    // if Mints doesn't have associated metadata account. just return []\n                    if (!(accountsRawMeta === null || accountsRawMeta === void 0 ? void 0 : accountsRawMeta.length) || (accountsRawMeta === null || accountsRawMeta === void 0 ? void 0 : accountsRawMeta.length) === 0) {\n                        return [2 /*return*/, []];\n                    }\n                    return [4 /*yield*/, Promise.allSettled(accountsRawMeta.map(function (accountInfo) { var _a; return (0, utils_1.decodeTokenMetadata)((_a = accountInfo) === null || _a === void 0 ? void 0 : _a.data); }))];\n                case 4:\n                    accountsDecodedMeta = _g.sent();\n                    accountsFiltered = accountsDecodedMeta\n                        .filter(onlySuccessfullPromises)\n                        .filter(onlyNftsWithMetadata)\n                        .map(function (p) {\n                        var value = p.value;\n                        return sanitize ? sanitizeTokenMeta(value) : value;\n                    })\n                        .map(function (token) { return (stringifyPubKeys ? publicKeyToString(token) : token); });\n                    // sort accounts if sort is true & updateAuthority stringified\n                    if (stringifyPubKeys && sort) {\n                        accountsSorted = (0, lodash_orderby_1.default)(accountsFiltered, [sortKeys.updateAuthority], [\"asc\"]);\n                        return [2 /*return*/, accountsSorted];\n                    }\n                    // otherwise return unsorted\n                    return [2 /*return*/, accountsFiltered];\n            }\n        });\n    });\n};\nexports.getParsedNftAccountsByOwner = getParsedNftAccountsByOwner;\nvar sanitizeTokenMeta = function (tokenData) {\n    var _a, _b, _c;\n    return (__assign(__assign({}, tokenData), { data: __assign(__assign({}, tokenData === null || tokenData === void 0 ? void 0 : tokenData.data), { name: (0, exports.sanitizeMetaStrings)((_a = tokenData === null || tokenData === void 0 ? void 0 : tokenData.data) === null || _a === void 0 ? void 0 : _a.name), symbol: (0, exports.sanitizeMetaStrings)((_b = tokenData === null || tokenData === void 0 ? void 0 : tokenData.data) === null || _b === void 0 ? void 0 : _b.symbol), uri: (0, exports.sanitizeMetaStrings)((_c = tokenData === null || tokenData === void 0 ? void 0 : tokenData.data) === null || _c === void 0 ? void 0 : _c.uri) }) }));\n};\n// Convert all PublicKey to string\nvar publicKeyToString = function (tokenData) {\n    var _a, _b, _c, _d, _e, _f;\n    return (__assign(__assign({}, tokenData), { mint: (_b = (_a = tokenData === null || tokenData === void 0 ? void 0 : tokenData.mint) === null || _a === void 0 ? void 0 : _a.toString) === null || _b === void 0 ? void 0 : _b.call(_a), updateAuthority: (_d = (_c = tokenData === null || tokenData === void 0 ? void 0 : tokenData.updateAuthority) === null || _c === void 0 ? void 0 : _c.toString) === null || _d === void 0 ? void 0 : _d.call(_c), data: __assign(__assign({}, tokenData === null || tokenData === void 0 ? void 0 : tokenData.data), { creators: (_f = (_e = tokenData === null || tokenData === void 0 ? void 0 : tokenData.data) === null || _e === void 0 ? void 0 : _e.creators) === null || _f === void 0 ? void 0 : _f.map(function (c) {\n                var _a, _b;\n                return (__assign(__assign({}, c), { address: (_b = (_a = new web3_js_1.PublicKey(c === null || c === void 0 ? void 0 : c.address)) === null || _a === void 0 ? void 0 : _a.toString) === null || _b === void 0 ? void 0 : _b.call(_a) }));\n            }) }) }));\n};\n// Remove all empty space, new line, etc. symbols\n// In some reason such symbols parsed back from Buffer looks weird\n// like \"\\x0000\" instead of usual spaces.\nvar sanitizeMetaStrings = function (metaString) {\n    return metaString.replace(/\\0/g, \"\");\n};\nexports.sanitizeMetaStrings = sanitizeMetaStrings;\nvar onlySuccessfullPromises = function (result) { return result && result.status === \"fulfilled\"; };\n// Remove any NFT Metadata Account which doesn't have uri field\n// We can assume such NFTs are broken or invalid.\nvar onlyNftsWithMetadata = function (t) {\n    var _a, _b, _c;\n    var uri = (_c = (_b = (_a = t.value.data) === null || _a === void 0 ? void 0 : _a.uri) === null || _b === void 0 ? void 0 : _b.replace) === null || _c === void 0 ? void 0 : _c.call(_b, /\\0/g, \"\");\n    return uri !== \"\" && uri !== undefined;\n};\n//# sourceMappingURL=getParsedNftAccountsByOwner.js.map"]},"metadata":{},"sourceType":"script"}