{"ast":null,"code":"const isErrorWithLogs = error => error instanceof Error && 'logs' in error;\n\nexport { isErrorWithLogs };","map":{"version":3,"sources":["../../../src/types/Program.ts"],"names":["isErrorWithLogs","error","Error"],"mappings":"AAQO,MAAMA,eAAe,GAAIC,KAAc,IAC5CA,KAAK,YAAYC,KAAjBD,IAA0B,UAAUA,KAD/B","sourcesContent":["import { PublicKey } from '@solana/web3.js';\nimport { Metaplex } from '@/Metaplex';\nimport { Cluster } from '@/types';\nimport { GpaBuilder } from '@/utils';\n\nexport type ErrorWithLogs = Error & { logs: string[] };\nexport type ErrorWithCode = Error & { code: number };\n\nexport const isErrorWithLogs = (error: unknown): error is ErrorWithLogs =>\n  error instanceof Error && 'logs' in error;\n\nexport type Program = {\n  name: string;\n  address: PublicKey;\n  clusterFilter?: (cluster: Cluster) => boolean;\n  errorResolver?: (error: ErrorWithLogs) => ErrorWithCode | null | undefined;\n  gpaResolver?: (metaplex: Metaplex) => GpaBuilder;\n};\n"]},"metadata":{},"sourceType":"module"}