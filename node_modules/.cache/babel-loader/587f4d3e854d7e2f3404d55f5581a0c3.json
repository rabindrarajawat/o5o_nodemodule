{"ast":null,"code":"import { Button } from '@mui/material';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport React, { useCallback, useMemo } from 'react';\nimport { WalletIcon } from './WalletIcon.js';\nexport const WalletDisconnectButton = _ref => {\n  let {\n    color = 'primary',\n    variant = 'contained',\n    type = 'button',\n    children: children,\n    disabled: disabled,\n    onClick: onClick,\n    ...props\n  } = _ref;\n  const {\n    wallet: wallet,\n    disconnect: disconnect,\n    disconnecting: disconnecting\n  } = useWallet();\n  const handleClick = useCallback(event => {\n    if (onClick) onClick(event); // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n    if (!event.defaultPrevented) disconnect().catch(() => {// Silently catch because any errors are caught by the context `onError` handler\n    });\n  }, [onClick, disconnect]);\n  const content = useMemo(() => {\n    if (children) return children;\n    if (disconnecting) return 'Disconnecting ...';\n    if (wallet) return 'Disconnect';\n    return 'Disconnect Wallet';\n  }, [children, disconnecting, wallet]);\n  return React.createElement(Button, {\n    color: color,\n    variant: variant,\n    type: type,\n    onClick: handleClick,\n    disabled: disabled || !wallet,\n    startIcon: React.createElement(WalletIcon, {\n      wallet: wallet\n    }),\n    ...props\n  }, content);\n};","map":{"version":3,"sources":["../../src/WalletDisconnectButton.tsx"],"names":[],"mappings":"AACA,SAAS,MAAT,QAAuB,eAAvB;AACA,SAAS,SAAT,QAA0B,8BAA1B;AAEA,OAAO,KAAP,IAAgB,WAAhB,EAA6B,OAA7B,QAA4C,OAA5C;AACA,SAAS,UAAT,QAA2B,iBAA3B;AAEA,OAAO,MAAM,sBAAsB,GAAoB,QAQlD;EAAA,IARmD;IACpD,KAAK,GAAG,SAD4C;IAEpD,OAAO,GAAG,WAF0C;IAGpD,IAAI,GAAG,QAH6C;IAIpD,QAAQ,EAAR,QAJoD;IAKpD,QAAQ,EAAR,QALoD;IAMpD,OAAO,EAAP,OANoD;IAOpD,GAAG;EAPiD,CAQnD;EACD,MAAM;IAAE,MAAM,EAAN,MAAF;IAAU,UAAU,EAAV,UAAV;IAAsB,aAAa,EAAb;EAAtB,IAAwC,SAAS,EAAvD;EAEA,MAAM,WAAW,GAAyC,WAAW,CAChE,KAAD,IAAU;IACN,IAAI,OAAJ,EAAa,OAAO,CAAC,KAAD,CAAP,CADP,CAEN;;IACA,IAAI,CAAC,KAAK,CAAC,gBAAX,EACI,UAAU,GAAG,KAAb,CAAmB,MAAK,CACpB;IACH,CAFD;EAGP,CARgE,EASjE,CAAC,OAAD,EAAU,UAAV,CATiE,CAArE;EAYA,MAAM,OAAO,GAAG,OAAO,CAAC,MAAK;IACzB,IAAI,QAAJ,EAAc,OAAO,QAAP;IACd,IAAI,aAAJ,EAAmB,OAAO,mBAAP;IACnB,IAAI,MAAJ,EAAY,OAAO,YAAP;IACZ,OAAO,mBAAP;EACH,CALsB,EAKpB,CAAC,QAAD,EAAW,aAAX,EAA0B,MAA1B,CALoB,CAAvB;EAOA,OACI,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO;IACH,KAAK,EAAE,KADJ;IAEH,OAAO,EAAE,OAFN;IAGH,IAAI,EAAE,IAHH;IAIH,OAAO,EAAE,WAJN;IAKH,QAAQ,EAAE,QAAQ,IAAI,CAAC,MALpB;IAMH,SAAS,EAAE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;MAAC,MAAM,EAAE;IAAT,CAAX,CANR;IAMsC,GACrC;EAPD,CAAP,EASK,OATL,CADJ;AAaH,CA3CM","sourceRoot":"","sourcesContent":["import { Button } from '@mui/material';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport React, { useCallback, useMemo } from 'react';\nimport { WalletIcon } from './WalletIcon.js';\nexport const WalletDisconnectButton = ({ color = 'primary', variant = 'contained', type = 'button', children, disabled, onClick, ...props }) => {\n    const { wallet, disconnect, disconnecting } = useWallet();\n    const handleClick = useCallback((event) => {\n        if (onClick)\n            onClick(event);\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        if (!event.defaultPrevented)\n            disconnect().catch(() => {\n                // Silently catch because any errors are caught by the context `onError` handler\n            });\n    }, [onClick, disconnect]);\n    const content = useMemo(() => {\n        if (children)\n            return children;\n        if (disconnecting)\n            return 'Disconnecting ...';\n        if (wallet)\n            return 'Disconnect';\n        return 'Disconnect Wallet';\n    }, [children, disconnecting, wallet]);\n    return (React.createElement(Button, { color: color, variant: variant, type: type, onClick: handleClick, disabled: disabled || !wallet, startIcon: React.createElement(WalletIcon, { wallet: wallet }), ...props }, content));\n};\n//# sourceMappingURL=WalletDisconnectButton.js.map"]},"metadata":{},"sourceType":"module"}