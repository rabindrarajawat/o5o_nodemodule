{"ast":null,"code":"var _jsxFileName = \"D:\\\\software\\\\o5o BNB\\\\o5o-staking-frontend\\\\src\\\\components\\\\bridge\\\\main.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport { ethers } from \"ethers\";\nimport Contract from './Contract';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config(); //get .env params\n\n\nconst RpcHttpUrl = process.env.REACT_APP_RPC_HTTP_URL;\nconst ReceiverAddress = process.env.REACT_APP_RECEIVER_ADDRESS;\nconst SolanaAPI = process.env.REACT_APP_SOLANA_API; //create web3 connection\n\nconst web3Eth = new Web3(new Web3.providers.HttpProvider(RpcHttpUrl));\n\nfunction Main(props) {\n  _s();\n\n  //set params\n  const [transferAmount, setTransferAmount] = useState(\"\");\n  const [receiverAddress, setReceiverAddress] = useState(\"\");\n  const [showResults, setShowResults] = useState(false);\n  var signer;\n  useEffect(() => {}, []);\n\n  try {\n    if (typeof window !== 'undefined') {\n      console.log(\"token: \", localStorage.getItem(\"token\"));\n      console.log(\"wallet: \", localStorage.getItem(\"wallet\"));\n      setReceiverAddress(localStorage.getItem(\"wallet\"));\n\n      if (window.ethereum) {\n        window.ethereum.enable();\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        signer = provider.getSigner();\n\n        if (signer.provider.provider.selectedAddress) {\n          provider.getBalance(signer.provider.provider.selectedAddress).then(balance => {\n            const balanceInEth = ethers.utils.formatEther(balance);\n            console.log(`balance: ${balanceInEth} ETH`);\n          });\n        }\n      } else {\n        console.log(\"Error\");\n      }\n    }\n  } catch (error) {\n    console.log(\"getAccount ~ error\", error);\n  }\n\n  async function transfer() {\n    //console.log(\"ReceiverAddress: \", ReceiverAddress);\n    console.log(\"Transferring the tokens...\");\n    const value = web3Eth.utils.toWei(transferAmount.toString(), 'Ether');\n    const hash = await Contract.transfer(ReceiverAddress, value);\n    console.log(\"hash: \", hash);\n    fetch(SolanaAPI, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'token': localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        address: receiverAddress,\n        amount: transferAmount\n      })\n    });\n    setShowResults(true);\n    console.log(\"Transferred successfully!\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: \"2rem\"\n      },\n      children: \"Bridge o5o BEP20 Token to o5o SPL Token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: \"1.5rem\",\n        \"paddingBottom\": \"10px\"\n      },\n      children: \"Solana Wallet Address :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        style: {\n          height: \"1.5vw\"\n        },\n        onChange: event => setReceiverAddress(event.target.value),\n        placeholder: \"0x0000.....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: \"1.5rem\",\n        \"paddingBottom\": \"10px\"\n      },\n      children: \"o5o Token Amount :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        style: {\n          height: \"1.5vw\"\n        },\n        onChange: event => setTransferAmount(event.target.value),\n        placeholder: \"000....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), \" tokens\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !showResults ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded\",\n          onClick: () => transfer(),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"green\",\n          \"fontSize\": \"1.5rem\"\n        },\n        children: \"Tokens transferred successfully!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"zTBoO/7Wa0bh+s6zWI7tGQ6eyhA=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","Web3","ethers","Contract","require","config","RpcHttpUrl","process","env","REACT_APP_RPC_HTTP_URL","ReceiverAddress","REACT_APP_RECEIVER_ADDRESS","SolanaAPI","REACT_APP_SOLANA_API","web3Eth","providers","HttpProvider","Main","props","transferAmount","setTransferAmount","receiverAddress","setReceiverAddress","showResults","setShowResults","signer","window","console","log","localStorage","getItem","ethereum","enable","provider","Web3Provider","getSigner","selectedAddress","getBalance","then","balance","balanceInEth","utils","formatEther","error","transfer","value","toWei","toString","hash","fetch","method","headers","body","JSON","stringify","address","amount","fontSize","height","event","target","color"],"sources":["D:/software/o5o BNB/o5o-staking-frontend/src/components/bridge/main.component.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport { ethers } from \"ethers\";\r\nimport Contract from './Contract';\r\nrequire('dotenv').config();\r\n\r\n//get .env params\r\nconst RpcHttpUrl = process.env.REACT_APP_RPC_HTTP_URL;\r\nconst ReceiverAddress = process.env.REACT_APP_RECEIVER_ADDRESS;\r\nconst SolanaAPI = process.env.REACT_APP_SOLANA_API;\r\n\r\n//create web3 connection\r\nconst web3Eth = new Web3(new Web3.providers.HttpProvider(RpcHttpUrl));\r\n\r\nfunction Main(props) {\r\n    //set params\r\n    const [transferAmount, setTransferAmount] = useState(\"\");\r\n    const [receiverAddress, setReceiverAddress] = useState(\"\");\r\n    const [showResults, setShowResults] = useState(false);\r\n    var signer\r\n    useEffect(() => {\r\n    }, [])\r\n    try {\r\n        if (typeof window !== 'undefined') {\r\n            console.log(\"token: \", localStorage.getItem(\"token\"));\r\n            console.log(\"wallet: \", localStorage.getItem(\"wallet\"));\r\n            setReceiverAddress(localStorage.getItem(\"wallet\"));\r\n            if (window.ethereum) {\r\n                window.ethereum.enable();\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n                signer = provider.getSigner();\r\n                if (signer.provider.provider.selectedAddress) {\r\n                    provider.getBalance(signer.provider.provider.selectedAddress).then((balance) => {                       \r\n                        const balanceInEth = ethers.utils.formatEther(balance);\r\n                        console.log(`balance: ${balanceInEth} ETH`)\r\n                    })\r\n                }\r\n            }\r\n            else {\r\n                console.log(\"Error\")\r\n            }\r\n        }\r\n    } catch (error) {\r\n        console.log(\"getAccount ~ error\", error)\r\n}\r\n\r\nasync function transfer(){\r\n    //console.log(\"ReceiverAddress: \", ReceiverAddress);\r\n    console.log(\"Transferring the tokens...\");\r\n    const value = web3Eth.utils.toWei(transferAmount.toString(), 'Ether');\r\n    const hash = await Contract.transfer(ReceiverAddress,value);\r\n    console.log(\"hash: \", hash);    \r\n    fetch(SolanaAPI, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'token':localStorage.getItem(\"token\")\r\n        },\r\n        body: JSON.stringify({\r\n            address:receiverAddress,\r\n            amount:transferAmount,\r\n        })\r\n    });\r\n    setShowResults(true);\r\n    console.log(\"Transferred successfully!\");\r\n}\r\n    return (\r\n        <div>\r\n            <br />\r\n            <div style={{ fontSize: \"2rem\" }}>\r\n                Bridge o5o BEP20 Token to o5o SPL Token\r\n            </div>            \r\n            <br/>\r\n            <div style={{fontSize:\"1.5rem\", \"paddingBottom\":\"10px\"}}>\r\n                Solana Wallet Address :\r\n            </div>\r\n            <div>\r\n                <input\r\n                    type=\"text\"                    \r\n                    style={{height:\"1.5vw\"}}\r\n                    onChange={(event) =>\r\n                        setReceiverAddress(event.target.value)\r\n                    }\r\n                    placeholder=\"0x0000.....\"\r\n                />\r\n            </div>\r\n            <br />\r\n            <div style={{ fontSize: \"1.5rem\", \"paddingBottom\":\"10px\" }}>\r\n                o5o Token Amount :\r\n            </div>\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    style={{ height: \"1.5vw\"}}\r\n                    onChange={(event) =>\r\n                        setTransferAmount(event.target.value)\r\n                    }\r\n                    placeholder=\"000....\"\r\n                /> tokens\r\n            </div>\r\n            <br />\r\n            <div>\r\n            {!showResults? (\r\n                    <div>\r\n                        <button \r\n                            type=\"submit\"\r\n                            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded\"\r\n                            onClick={() => transfer()}\r\n                        >Send</button>\r\n                    </div>) : (\r\n                    <div style={{color: \"green\", \"fontSize\": \"1.5rem\"}}>\r\n                        Tokens transferred successfully!!!\r\n                    </div>)\r\n                }\r\n         </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module"}