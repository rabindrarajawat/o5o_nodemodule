{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAccount = void 0;\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst constants_js_1 = require(\"../constants.js\");\n\nconst extensionType_js_1 = require(\"../extensions/extensionType.js\");\n\nconst initializeAccount_js_1 = require(\"../instructions/initializeAccount.js\");\n\nconst mint_js_1 = require(\"../state/mint.js\");\n\nconst createAssociatedTokenAccount_js_1 = require(\"./createAssociatedTokenAccount.js\");\n/**\n * Create and initialize a new token account\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction and initialization fees\n * @param mint           Mint for the account\n * @param owner          Owner of the new account\n * @param keypair        Optional keypair, defaulting to the associated token account for the `mint` and `owner`\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Address of the new token account\n */\n\n\nfunction createAccount(connection, payer, mint, owner, keypair, confirmOptions) {\n  let programId = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : constants_js_1.TOKEN_PROGRAM_ID;\n  return __awaiter(this, void 0, void 0, function* () {\n    // If a keypair isn't provided, create the associated token account and return its address\n    if (!keypair) return yield (0, createAssociatedTokenAccount_js_1.createAssociatedTokenAccount)(connection, payer, mint, owner, confirmOptions, programId); // Otherwise, create the account with the provided keypair and return its public key\n\n    const mintState = yield (0, mint_js_1.getMint)(connection, mint, confirmOptions === null || confirmOptions === void 0 ? void 0 : confirmOptions.commitment, programId);\n    const space = (0, extensionType_js_1.getAccountLenForMint)(mintState);\n    const lamports = yield connection.getMinimumBalanceForRentExemption(space);\n    const transaction = new web3_js_1.Transaction().add(web3_js_1.SystemProgram.createAccount({\n      fromPubkey: payer.publicKey,\n      newAccountPubkey: keypair.publicKey,\n      space,\n      lamports,\n      programId\n    }), (0, initializeAccount_js_1.createInitializeAccountInstruction)(keypair.publicKey, mint, owner, programId));\n    yield (0, web3_js_1.sendAndConfirmTransaction)(connection, transaction, [payer, keypair], confirmOptions);\n    return keypair.publicKey;\n  });\n}\n\nexports.createAccount = createAccount;","map":{"version":3,"sources":["../../../src/actions/createAccount.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,cAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,kBAAA,GAAA,OAAA,CAAA,gCAAA,CAAA;;AACA,MAAA,sBAAA,GAAA,OAAA,CAAA,sCAAA,CAAA;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,MAAA,iCAAA,GAAA,OAAA,CAAA,mCAAA,CAAA;AAEA;;;;;;;;;;;;AAYG;;;AACH,SAAsB,aAAtB,CACI,UADJ,EAEI,KAFJ,EAGI,IAHJ,EAII,KAJJ,EAKI,OALJ,EAMI,cANJ,EAOgC;EAAA,IAA5B,SAA4B,uEAAhB,cAAA,CAAA,gBAAgB;;IAE5B;IACA,IAAI,CAAC,OAAL,EAAc,OAAO,MAAM,CAAA,GAAA,iCAAA,CAAA,4BAAA,EAA6B,UAA7B,EAAyC,KAAzC,EAAgD,IAAhD,EAAsD,KAAtD,EAA6D,cAA7D,EAA6E,SAA7E,CAAb,C,CAEd;;IACA,MAAM,SAAS,GAAG,MAAM,CAAA,GAAA,SAAA,CAAA,OAAA,EAAQ,UAAR,EAAoB,IAApB,EAA0B,cAAc,KAAA,IAAd,IAAA,cAAc,KAAA,KAAA,CAAd,GAAc,KAAA,CAAd,GAAA,cAAc,CAAE,UAA1C,EAAsD,SAAtD,CAAxB;IACA,MAAM,KAAK,GAAG,CAAA,GAAA,kBAAA,CAAA,oBAAA,EAAqB,SAArB,CAAd;IACA,MAAM,QAAQ,GAAG,MAAM,UAAU,CAAC,iCAAX,CAA6C,KAA7C,CAAvB;IAEA,MAAM,WAAW,GAAG,IAAI,SAAA,CAAA,WAAJ,GAAkB,GAAlB,CAChB,SAAA,CAAA,aAAA,CAAc,aAAd,CAA4B;MACxB,UAAU,EAAE,KAAK,CAAC,SADM;MAExB,gBAAgB,EAAE,OAAO,CAAC,SAFF;MAGxB,KAHwB;MAIxB,QAJwB;MAKxB;IALwB,CAA5B,CADgB,EAQhB,CAAA,GAAA,sBAAA,CAAA,kCAAA,EAAmC,OAAO,CAAC,SAA3C,EAAsD,IAAtD,EAA4D,KAA5D,EAAmE,SAAnE,CARgB,CAApB;IAWA,MAAM,CAAA,GAAA,SAAA,CAAA,yBAAA,EAA0B,UAA1B,EAAsC,WAAtC,EAAmD,CAAC,KAAD,EAAQ,OAAR,CAAnD,EAAqE,cAArE,CAAN;IAEA,OAAO,OAAO,CAAC,SAAf;EACH,C;AAAA;;AA/BD,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createAccount = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst constants_js_1 = require(\"../constants.js\");\nconst extensionType_js_1 = require(\"../extensions/extensionType.js\");\nconst initializeAccount_js_1 = require(\"../instructions/initializeAccount.js\");\nconst mint_js_1 = require(\"../state/mint.js\");\nconst createAssociatedTokenAccount_js_1 = require(\"./createAssociatedTokenAccount.js\");\n/**\n * Create and initialize a new token account\n *\n * @param connection     Connection to use\n * @param payer          Payer of the transaction and initialization fees\n * @param mint           Mint for the account\n * @param owner          Owner of the new account\n * @param keypair        Optional keypair, defaulting to the associated token account for the `mint` and `owner`\n * @param confirmOptions Options for confirming the transaction\n * @param programId      SPL Token program account\n *\n * @return Address of the new token account\n */\nfunction createAccount(connection, payer, mint, owner, keypair, confirmOptions, programId = constants_js_1.TOKEN_PROGRAM_ID) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // If a keypair isn't provided, create the associated token account and return its address\n        if (!keypair)\n            return yield (0, createAssociatedTokenAccount_js_1.createAssociatedTokenAccount)(connection, payer, mint, owner, confirmOptions, programId);\n        // Otherwise, create the account with the provided keypair and return its public key\n        const mintState = yield (0, mint_js_1.getMint)(connection, mint, confirmOptions === null || confirmOptions === void 0 ? void 0 : confirmOptions.commitment, programId);\n        const space = (0, extensionType_js_1.getAccountLenForMint)(mintState);\n        const lamports = yield connection.getMinimumBalanceForRentExemption(space);\n        const transaction = new web3_js_1.Transaction().add(web3_js_1.SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: keypair.publicKey,\n            space,\n            lamports,\n            programId,\n        }), (0, initializeAccount_js_1.createInitializeAccountInstruction)(keypair.publicKey, mint, owner, programId));\n        yield (0, web3_js_1.sendAndConfirmTransaction)(connection, transaction, [payer, keypair], confirmOptions);\n        return keypair.publicKey;\n    });\n}\nexports.createAccount = createAccount;\n//# sourceMappingURL=createAccount.js.map"]},"metadata":{},"sourceType":"script"}