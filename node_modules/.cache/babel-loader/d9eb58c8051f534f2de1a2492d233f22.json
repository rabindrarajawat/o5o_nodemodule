{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\n\nconst solana_gateway_ts_1 = require(\"@identity.com/solana-gateway-ts\");\n\nconst web3_js_1 = require(\"@solana/web3.js\"); // @ts-ignore\n\n\nconst react_1 = require(\"react\");\n\nconst connection_1 = require(\"../connection\");\n\nconst Badge_svg_1 = __importDefault(require(\"./Badge.svg\")); // Used to avoid making multiple blockchain calls when rerendering\n\n\nfunction usePrevious(value) {\n  const ref = (0, react_1.useRef)();\n  (0, react_1.useEffect)(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n  // Return previous value (happens before update in useEffect above)\n\n  return ref.current;\n}\n\nconst Badge = _ref => {\n  let {\n    connection,\n    gatekeeperNetwork,\n    publicKey,\n    clusterUrl = (0, web3_js_1.clusterApiUrl)('mainnet-beta')\n  } = _ref;\n  const [token, setToken] = (0, react_1.useState)();\n  const prevGKN = usePrevious(gatekeeperNetwork === null || gatekeeperNetwork === void 0 ? void 0 : gatekeeperNetwork.toBase58());\n  const prevPubkey = usePrevious(publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58());\n  const prevClusterName = usePrevious(clusterUrl);\n  (0, react_1.useEffect)(() => {\n    // only make another call if anything changes, as we cannot\n    // rely on useEffect to protect us from this\n    if ((gatekeeperNetwork === null || gatekeeperNetwork === void 0 ? void 0 : gatekeeperNetwork.toBase58()) !== prevGKN || (publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58()) !== prevPubkey || clusterUrl !== prevClusterName) {\n      const normalizedConnection = connection || (0, connection_1.getSolanaConnection)(clusterUrl); // only set the GT if one was found\n\n      (0, solana_gateway_ts_1.findGatewayToken)(normalizedConnection, publicKey, gatekeeperNetwork).then(gt => setToken(gt || undefined));\n    }\n  }, [gatekeeperNetwork === null || gatekeeperNetwork === void 0 ? void 0 : gatekeeperNetwork.toBase58(), publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58(), clusterUrl, connection]);\n  return (token === null || token === void 0 ? void 0 : token.state) === solana_gateway_ts_1.State.ACTIVE ? (0, jsx_runtime_1.jsx)(\"a\", Object.assign({\n    href: \"https://www.civic.com\",\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    \"data-testid\": \"badgeLink\"\n  }, {\n    children: (0, jsx_runtime_1.jsx)(Badge_svg_1.default, {})\n  })) : (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, {});\n};\n\nexports.default = Badge;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","jsx_runtime_1","require","solana_gateway_ts_1","web3_js_1","react_1","connection_1","Badge_svg_1","usePrevious","ref","useRef","useEffect","current","Badge","connection","gatekeeperNetwork","publicKey","clusterUrl","clusterApiUrl","token","setToken","useState","prevGKN","toBase58","prevPubkey","prevClusterName","normalizedConnection","getSolanaConnection","findGatewayToken","then","gt","undefined","state","State","ACTIVE","jsx","assign","href","target","rel","children","default","Fragment"],"sources":["D:/software/o5o BNB/o5o-staking-frontend/node_modules/@civic/solana-gateway-react/dist/esm/badge/Badge.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst solana_gateway_ts_1 = require(\"@identity.com/solana-gateway-ts\");\nconst web3_js_1 = require(\"@solana/web3.js\");\n// @ts-ignore\nconst react_1 = require(\"react\");\nconst connection_1 = require(\"../connection\");\nconst Badge_svg_1 = __importDefault(require(\"./Badge.svg\"));\n// Used to avoid making multiple blockchain calls when rerendering\nfunction usePrevious(value) {\n    const ref = (0, react_1.useRef)();\n    (0, react_1.useEffect)(() => {\n        ref.current = value;\n    }, [value]); // Only re-run if value changes\n    // Return previous value (happens before update in useEffect above)\n    return ref.current;\n}\nconst Badge = ({ connection, gatekeeperNetwork, publicKey, clusterUrl = (0, web3_js_1.clusterApiUrl)('mainnet-beta'), }) => {\n    const [token, setToken] = (0, react_1.useState)();\n    const prevGKN = usePrevious(gatekeeperNetwork === null || gatekeeperNetwork === void 0 ? void 0 : gatekeeperNetwork.toBase58());\n    const prevPubkey = usePrevious(publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58());\n    const prevClusterName = usePrevious(clusterUrl);\n    (0, react_1.useEffect)(() => {\n        // only make another call if anything changes, as we cannot\n        // rely on useEffect to protect us from this\n        if ((gatekeeperNetwork === null || gatekeeperNetwork === void 0 ? void 0 : gatekeeperNetwork.toBase58()) !== prevGKN ||\n            (publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58()) !== prevPubkey ||\n            clusterUrl !== prevClusterName) {\n            const normalizedConnection = connection || (0, connection_1.getSolanaConnection)(clusterUrl);\n            // only set the GT if one was found\n            (0, solana_gateway_ts_1.findGatewayToken)(normalizedConnection, publicKey, gatekeeperNetwork).then((gt) => setToken(gt || undefined));\n        }\n    }, [gatekeeperNetwork === null || gatekeeperNetwork === void 0 ? void 0 : gatekeeperNetwork.toBase58(), publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58(), clusterUrl, connection]);\n    return (token === null || token === void 0 ? void 0 : token.state) === solana_gateway_ts_1.State.ACTIVE ? ((0, jsx_runtime_1.jsx)(\"a\", Object.assign({ href: \"https://www.civic.com\", target: \"_blank\", rel: \"noreferrer\", \"data-testid\": \"badgeLink\" }, { children: (0, jsx_runtime_1.jsx)(Badge_svg_1.default, {}) }))) : ((0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, {}));\n};\nexports.default = Badge;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}