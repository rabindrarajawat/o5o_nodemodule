{"ast":null,"code":"import { Button } from '@mui/material';\nimport React, { useCallback } from 'react';\nimport { useWalletDialog } from './useWalletDialog.js';\nexport const WalletDialogButton = _ref => {\n  let {\n    children = 'Select Wallet',\n    color = 'primary',\n    variant = 'contained',\n    type = 'button',\n    onClick: onClick,\n    ...props\n  } = _ref;\n  const {\n    setOpen: setOpen\n  } = useWalletDialog();\n  const handleClick = useCallback(event => {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) setOpen(true);\n  }, [onClick, setOpen]);\n  return React.createElement(Button, {\n    color: color,\n    variant: variant,\n    type: type,\n    onClick: handleClick,\n    ...props\n  }, children);\n};","map":{"version":3,"sources":["../../src/WalletDialogButton.tsx"],"names":[],"mappings":"AACA,SAAS,MAAT,QAAuB,eAAvB;AAEA,OAAO,KAAP,IAAgB,WAAhB,QAAmC,OAAnC;AACA,SAAS,eAAT,QAAgC,sBAAhC;AAEA,OAAO,MAAM,kBAAkB,GAAoB,QAO9C;EAAA,IAP+C;IAChD,QAAQ,GAAG,eADqC;IAEhD,KAAK,GAAG,SAFwC;IAGhD,OAAO,GAAG,WAHsC;IAIhD,IAAI,GAAG,QAJyC;IAKhD,OAAO,EAAP,OALgD;IAMhD,GAAG;EAN6C,CAO/C;EACD,MAAM;IAAE,OAAO,EAAP;EAAF,IAAc,eAAe,EAAnC;EAEA,MAAM,WAAW,GAAyC,WAAW,CAChE,KAAD,IAAU;IACN,IAAI,OAAJ,EAAa,OAAO,CAAC,KAAD,CAAP;IACb,IAAI,CAAC,KAAK,CAAC,gBAAX,EAA6B,OAAO,CAAC,IAAD,CAAP;EAChC,CAJgE,EAKjE,CAAC,OAAD,EAAU,OAAV,CALiE,CAArE;EAQA,OACI,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO;IAAC,KAAK,EAAE,KAAR;IAAe,OAAO,EAAE,OAAxB;IAAiC,IAAI,EAAE,IAAvC;IAA6C,OAAO,EAAE,WAAtD;IAAiE,GAAM;EAAvE,CAAP,EACK,QADL,CADJ;AAKH,CAvBM","sourceRoot":"","sourcesContent":["import { Button } from '@mui/material';\nimport React, { useCallback } from 'react';\nimport { useWalletDialog } from './useWalletDialog.js';\nexport const WalletDialogButton = ({ children = 'Select Wallet', color = 'primary', variant = 'contained', type = 'button', onClick, ...props }) => {\n    const { setOpen } = useWalletDialog();\n    const handleClick = useCallback((event) => {\n        if (onClick)\n            onClick(event);\n        if (!event.defaultPrevented)\n            setOpen(true);\n    }, [onClick, setOpen]);\n    return (React.createElement(Button, { color: color, variant: variant, type: type, onClick: handleClick, ...props }, children));\n};\n//# sourceMappingURL=WalletDialogButton.js.map"]},"metadata":{},"sourceType":"module"}