{"ast":null,"code":"import { SystemBuildersClient } from './SystemBuildersClient.mjs';\nimport { createAccountOperation } from './operations/createAccount.mjs';\nimport { transferSolOperation } from './operations/transferSol.mjs';\n/**\n * This is a client for the System module.\n *\n * It enables us to interact with the System program in order to\n * create uninitialized accounts and transfer SOL.\n *\n * You may access this client via the `system()` method of your `Metaplex` instance.\n *\n * ```ts\n * const systemClient = metaplex.system();\n * ```\n *\n * @example\n * You can create a new uninitialized account with a given space in bytes\n * using the code below.\n *\n * ```ts\n * const { newAccount } = await metaplex.system().createAccount({ space: 42 });\n * ```\n *\n * @group Modules\n */\n\nclass SystemClient {\n  constructor(metaplex) {\n    this.metaplex = metaplex;\n  }\n  /**\n   * You may use the `builders()` client to access the\n   * underlying Transaction Builders of this module.\n   *\n   * ```ts\n   * const buildersClient = metaplex.system().builders();\n   * ```\n   */\n\n\n  builders() {\n    return new SystemBuildersClient(this.metaplex);\n  }\n  /** {@inheritDoc createAccountOperation} */\n\n\n  createAccount(input, options) {\n    return this.metaplex.operations().execute(createAccountOperation(input), options);\n  }\n  /** {@inheritDoc transferSolOperation} */\n\n\n  transferSol(input, options) {\n    return this.metaplex.operations().execute(transferSolOperation(input), options);\n  }\n\n}\n\nexport { SystemClient };","map":{"version":3,"sources":["../../../../src/plugins/systemModule/SystemClient.ts"],"names":["SystemClient","constructor","metaplex","builders","SystemBuildersClient","createAccount","input","options","operations","execute","createAccountOperation","transferSol","transferSolOperation"],"mappings":";;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,MAAMA,YAAN,CAAmB;EACxBC,WAAW,CAAoBC,QAApB,EAAwC;IAApBA,KAAAA,QAAAA,GAAAA,QAAAA;EAAqB;EAEpD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;EACEC,QAAQ,GAAG;IACT,OAAO,IAAIC,oBAAJ,CAAyB,KAAKF,QAA9B,CAAP;EACF;EAEA;;;EACAG,aAAa,CAACC,KAAD,EAA4BC,OAA5B,EAAwD;IACnE,OAAO,KAAKL,QAAL,CACJM,UADI,GAEJC,OAFI,CAEIC,sBAAsB,CAACJ,KAAD,CAF1B,EAEmCC,OAFnC,CAAP;EAGF;EAEA;;;EACAI,WAAW,CAACL,KAAD,EAA0BC,OAA1B,EAAsD;IAC/D,OAAO,KAAKL,QAAL,CACJM,UADI,GAEJC,OAFI,CAEIG,oBAAoB,CAACN,KAAD,CAFxB,EAEiCC,OAFjC,CAAP;EAGF;;AA3BwB","sourcesContent":["import {\n  CreateAccountInput,\n  createAccountOperation,\n  TransferSolInput,\n  transferSolOperation,\n} from './operations';\nimport { SystemBuildersClient } from './SystemBuildersClient';\nimport type { Metaplex } from '@/Metaplex';\nimport { OperationOptions } from '@/types';\n\n/**\n * This is a client for the System module.\n *\n * It enables us to interact with the System program in order to\n * create uninitialized accounts and transfer SOL.\n *\n * You may access this client via the `system()` method of your `Metaplex` instance.\n *\n * ```ts\n * const systemClient = metaplex.system();\n * ```\n *\n * @example\n * You can create a new uninitialized account with a given space in bytes\n * using the code below.\n *\n * ```ts\n * const { newAccount } = await metaplex.system().createAccount({ space: 42 });\n * ```\n *\n * @group Modules\n */\nexport class SystemClient {\n  constructor(protected readonly metaplex: Metaplex) {}\n\n  /**\n   * You may use the `builders()` client to access the\n   * underlying Transaction Builders of this module.\n   *\n   * ```ts\n   * const buildersClient = metaplex.system().builders();\n   * ```\n   */\n  builders() {\n    return new SystemBuildersClient(this.metaplex);\n  }\n\n  /** {@inheritDoc createAccountOperation} */\n  createAccount(input: CreateAccountInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(createAccountOperation(input), options);\n  }\n\n  /** {@inheritDoc transferSolOperation} */\n  transferSol(input: TransferSolInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(transferSolOperation(input), options);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}