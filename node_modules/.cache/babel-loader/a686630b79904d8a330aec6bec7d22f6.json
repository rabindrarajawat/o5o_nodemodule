{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serialize = exports.deserialize = void 0;\n\nconst bn_js_1 = require(\"bn.js\");\n\nconst beet = __importStar(require(\"@metaplex-foundation/beet\"));\n\nconst log_1 = require(\"./utils/log\");\n\nconst generated_1 = require(\"./generated\");\n\nconst SolPayment_1 = require(\"./generated/types/SolPayment\");\n\nconst TokenPayment_1 = require(\"./generated/types/TokenPayment\");\n\nconst EndDate_1 = require(\"./generated/types/EndDate\");\n\nconst RedeemedAmount_1 = require(\"./generated/types/RedeemedAmount\");\n\nconst AddressGate_1 = require(\"./generated/types/AddressGate\");\n\nconst NftGate_1 = require(\"./generated/types/NftGate\");\n\nconst NftBurn_1 = require(\"./generated/types/NftBurn\");\n\nconst TokenBurn_1 = require(\"./generated/types/TokenBurn\");\n\nconst beet_1 = require(\"@metaplex-foundation/beet\");\n\nconst GUARDS_SIZE = {\n  botTax: 9,\n  solPayment: 40,\n  tokenPayment: 72,\n  startDate: 8,\n  thirdPartySigner: 32,\n  tokenGate: 40,\n  gatekeeper: 33,\n  endDate: 8,\n  allowList: 32,\n  mintLimit: 3,\n  nftPayment: 64,\n  redeemedAmount: 8,\n  addressGate: 32,\n  nftGate: 32,\n  nftBurn: 32,\n  tokenBurn: 40,\n  freezeSolPayment: 40,\n  freezeTokenPayment: 72,\n  programGate: 164,\n  allocation: 5\n};\nconst GUARDS_NAME = ['botTax', 'solPayment', 'tokenPayment', 'startDate', 'thirdPartySigner', 'tokenGate', 'gatekeeper', 'endDate', 'allowList', 'mintLimit', 'nftPayment', 'redeemedAmount', 'addressGate', 'nftGate', 'nftBurn', 'tokenBurn', 'freezeSolPayment', 'freezeTokenPayment', 'programGate', 'allocation'];\nconst GUARDS_COUNT = GUARDS_NAME.length;\nconst MAX_LABEL_LENGTH = 6;\nconst MAX_PROGRAM_COUNT = 5;\n\nfunction guardsFromData(buffer) {\n  const enabled = new bn_js_1.BN(beet.u64.read(buffer, 0)).toNumber();\n  const guards = [];\n\n  for (let i = 0; i < GUARDS_COUNT; i++) {\n    guards.push(!!(1 << i & enabled));\n  }\n\n  const [botTaxEnabled, solPaymentEnabled, tokenPaymentEnabled, startDateEnabled, thirdPartySignerEnabled, tokenGateEnabled, gatekeeperEnabled, endDateEnabled, allowListEnabled, mintLimitEnabled, nftPaymentEnabled, redeemedAmountEnabled, addressGateEnabled, nftGateEnabled, nftBurnEnabled, tokenBurnEnabled, freezeSolPaymentEnabled, freezeTokenPaymentEnabled, programGateEnabled, allocationEnabled] = guards;\n  return {\n    botTaxEnabled,\n    solPaymentEnabled,\n    tokenPaymentEnabled,\n    startDateEnabled,\n    thirdPartySignerEnabled,\n    tokenGateEnabled,\n    gatekeeperEnabled,\n    endDateEnabled,\n    allowListEnabled,\n    mintLimitEnabled,\n    nftPaymentEnabled,\n    redeemedAmountEnabled,\n    addressGateEnabled,\n    nftGateEnabled,\n    nftBurnEnabled,\n    tokenBurnEnabled,\n    freezeSolPaymentEnabled,\n    freezeTokenPaymentEnabled,\n    programGateEnabled,\n    allocationEnabled\n  };\n}\n\nfunction deserialize(buffer) {\n  const {\n    guardSet: defaultSet,\n    offset\n  } = deserializeGuardSet(buffer);\n  const groupsCount = new bn_js_1.BN(beet.u32.read(buffer, offset)).toNumber();\n  const groups = [];\n  let cursor = beet.u32.byteSize + offset;\n\n  for (let i = 0; i < groupsCount; i++) {\n    const label = buffer.subarray(cursor, cursor + MAX_LABEL_LENGTH).toString();\n    cursor += MAX_LABEL_LENGTH;\n    const {\n      guardSet: guards,\n      offset\n    } = deserializeGuardSet(buffer.subarray(cursor));\n    groups.push({\n      label,\n      guards\n    });\n    cursor += offset;\n  }\n\n  return {\n    default: defaultSet,\n    groups: groups.length === 0 ? null : groups\n  };\n}\n\nexports.deserialize = deserialize;\n\nfunction serialize(data) {\n  const buffer = Buffer.alloc(size(data));\n  let offset = serializeGuardSet(buffer, 0, data.default);\n  const groupsCount = data.groups ? data.groups.length : 0;\n  beet_1.u32.write(buffer, offset, groupsCount);\n  offset += beet_1.u32.byteSize;\n\n  for (let i = 0; i < groupsCount; i++) {\n    const group = data.groups.at(i);\n\n    if (group.label.length > MAX_LABEL_LENGTH) {\n      throw `Exceeded maximum label length: ${group.label.length} > ${MAX_LABEL_LENGTH}`;\n    }\n\n    buffer.write(group.label, offset, MAX_LABEL_LENGTH, 'utf8');\n    offset += MAX_LABEL_LENGTH;\n    offset = serializeGuardSet(buffer, offset, group.guards);\n  }\n\n  return buffer;\n}\n\nexports.serialize = serialize;\n\nfunction size(data) {\n  let size = guardSetSize(data.default);\n  size += beet_1.u32.byteSize;\n\n  if (data.groups) {\n    for (let i = 0; i < data.groups.length; i++) {\n      size += MAX_LABEL_LENGTH;\n      size += guardSetSize(data.groups.at(i).guards);\n    }\n  }\n\n  return size;\n}\n\nfunction guardSetSize(guardSet) {\n  const guards = [];\n\n  for (let i = 0; i < GUARDS_COUNT; i++) {\n    const index = GUARDS_NAME[i];\n\n    if (guardSet[index]) {\n      guards.push(GUARDS_SIZE[index]);\n    }\n  }\n\n  return beet_1.u64.byteSize + guards.reduce((previousValue, currentValue) => previousValue + currentValue, 0);\n}\n\nfunction deserializeGuardSet(buffer) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v;\n\n  const guards = guardsFromData(buffer);\n  const {\n    botTaxEnabled,\n    startDateEnabled,\n    solPaymentEnabled,\n    tokenPaymentEnabled,\n    thirdPartySignerEnabled,\n    tokenGateEnabled,\n    gatekeeperEnabled,\n    endDateEnabled,\n    allowListEnabled,\n    mintLimitEnabled,\n    nftPaymentEnabled,\n    redeemedAmountEnabled,\n    addressGateEnabled,\n    nftGateEnabled,\n    nftBurnEnabled,\n    tokenBurnEnabled,\n    freezeSolPaymentEnabled,\n    freezeTokenPaymentEnabled,\n    programGateEnabled,\n    allocationEnabled\n  } = guards;\n  (0, log_1.logDebug)('Guards: %O', guards);\n  let cursor = beet.u64.byteSize;\n  const data = {};\n\n  if (botTaxEnabled) {\n    const [botTax] = generated_1.botTaxBeet.deserialize(buffer, cursor);\n    data.botTax = botTax;\n    cursor += GUARDS_SIZE.botTax;\n  }\n\n  if (solPaymentEnabled) {\n    const [solPayment] = SolPayment_1.solPaymentBeet.deserialize(buffer, cursor);\n    data.solPayment = solPayment;\n    cursor += GUARDS_SIZE.solPayment;\n  }\n\n  if (tokenPaymentEnabled) {\n    const [tokenPayment] = TokenPayment_1.tokenPaymentBeet.deserialize(buffer, cursor);\n    data.tokenPayment = tokenPayment;\n    cursor += GUARDS_SIZE.tokenPayment;\n  }\n\n  if (startDateEnabled) {\n    const [startDate] = generated_1.startDateBeet.deserialize(buffer, cursor);\n    data.startDate = startDate;\n    cursor += GUARDS_SIZE.startDate;\n  }\n\n  if (thirdPartySignerEnabled) {\n    const [thirdPartySigner] = generated_1.thirdPartySignerBeet.deserialize(buffer, cursor);\n    data.thirdPartySigner = thirdPartySigner;\n    cursor += GUARDS_SIZE.thirdPartySigner;\n  }\n\n  if (tokenGateEnabled) {\n    const [tokenGate] = generated_1.tokenGateBeet.deserialize(buffer, cursor);\n    data.tokenGate = tokenGate;\n    cursor += GUARDS_SIZE.tokenGate;\n  }\n\n  if (gatekeeperEnabled) {\n    const [gatekeeper] = generated_1.gatekeeperBeet.deserialize(buffer, cursor);\n    data.gatekeeper = gatekeeper;\n    cursor += GUARDS_SIZE.gatekeeper;\n  }\n\n  if (endDateEnabled) {\n    const [endDate] = EndDate_1.endDateBeet.deserialize(buffer, cursor);\n    data.endDate = endDate;\n    cursor += GUARDS_SIZE.endDate;\n  }\n\n  if (allowListEnabled) {\n    const [allowList] = generated_1.allowListBeet.deserialize(buffer, cursor);\n    data.allowList = allowList;\n    cursor += GUARDS_SIZE.allowList;\n  }\n\n  if (mintLimitEnabled) {\n    const [mintLimit] = generated_1.mintLimitBeet.deserialize(buffer, cursor);\n    data.mintLimit = mintLimit;\n    cursor += GUARDS_SIZE.mintLimit;\n  }\n\n  if (nftPaymentEnabled) {\n    const [nftPayment] = generated_1.nftPaymentBeet.deserialize(buffer, cursor);\n    data.nftPayment = nftPayment;\n    cursor += GUARDS_SIZE.nftPayment;\n  }\n\n  if (redeemedAmountEnabled) {\n    const [redeemedAmount] = RedeemedAmount_1.redeemedAmountBeet.deserialize(buffer, cursor);\n    data.redeemedAmount = redeemedAmount;\n    cursor += GUARDS_SIZE.redeemedAmount;\n  }\n\n  if (addressGateEnabled) {\n    const [addressGate] = AddressGate_1.addressGateBeet.deserialize(buffer, cursor);\n    data.addressGate = addressGate;\n    cursor += GUARDS_SIZE.addressGate;\n  }\n\n  if (nftGateEnabled) {\n    const [nftGate] = NftGate_1.nftGateBeet.deserialize(buffer, cursor);\n    data.nftGate = nftGate;\n    cursor += GUARDS_SIZE.nftGate;\n  }\n\n  if (nftBurnEnabled) {\n    const [nftBurn] = NftBurn_1.nftBurnBeet.deserialize(buffer, cursor);\n    data.nftBurn = nftBurn;\n    cursor += GUARDS_SIZE.nftBurn;\n  }\n\n  if (tokenBurnEnabled) {\n    const [tokenBurn] = TokenBurn_1.tokenBurnBeet.deserialize(buffer, cursor);\n    data.tokenBurn = tokenBurn;\n    cursor += GUARDS_SIZE.tokenBurn;\n  }\n\n  if (freezeSolPaymentEnabled) {\n    const [freezeSolPayment] = generated_1.freezeSolPaymentBeet.deserialize(buffer, cursor);\n    data.freezeSolPayment = freezeSolPayment;\n    cursor += GUARDS_SIZE.freezeSolPayment;\n  }\n\n  if (freezeTokenPaymentEnabled) {\n    const [freezeTokenPayment] = generated_1.freezeTokenPaymentBeet.deserialize(buffer, cursor);\n    data.freezeTokenPayment = freezeTokenPayment;\n    cursor += GUARDS_SIZE.freezeTokenPayment;\n  }\n\n  if (programGateEnabled) {\n    const [programGate] = generated_1.programGateBeet.deserialize(buffer, cursor);\n    data.programGate = programGate;\n    cursor += GUARDS_SIZE.programGate;\n  }\n\n  if (allocationEnabled) {\n    const [allocation] = generated_1.allocationBeet.deserialize(buffer, cursor);\n    data.allocation = allocation;\n    cursor += GUARDS_SIZE.allocation;\n  }\n\n  return {\n    guardSet: {\n      botTax: (_a = data.botTax) !== null && _a !== void 0 ? _a : null,\n      solPayment: (_b = data.solPayment) !== null && _b !== void 0 ? _b : null,\n      tokenPayment: (_c = data.tokenPayment) !== null && _c !== void 0 ? _c : null,\n      startDate: (_d = data.startDate) !== null && _d !== void 0 ? _d : null,\n      thirdPartySigner: (_e = data.thirdPartySigner) !== null && _e !== void 0 ? _e : null,\n      tokenGate: (_f = data.tokenGate) !== null && _f !== void 0 ? _f : null,\n      gatekeeper: (_g = data.gateKeeper) !== null && _g !== void 0 ? _g : null,\n      endDate: (_h = data.endDate) !== null && _h !== void 0 ? _h : null,\n      allowList: (_j = data.allowList) !== null && _j !== void 0 ? _j : null,\n      mintLimit: (_k = data.mintLimit) !== null && _k !== void 0 ? _k : null,\n      nftPayment: (_l = data.nftPayment) !== null && _l !== void 0 ? _l : null,\n      redeemedAmount: (_m = data.redeemedAmount) !== null && _m !== void 0 ? _m : null,\n      addressGate: (_o = data.addressGate) !== null && _o !== void 0 ? _o : null,\n      nftGate: (_p = data.nftGate) !== null && _p !== void 0 ? _p : null,\n      nftBurn: (_q = data.nftBurn) !== null && _q !== void 0 ? _q : null,\n      tokenBurn: (_r = data.tokenBurn) !== null && _r !== void 0 ? _r : null,\n      freezeSolPayment: (_s = data.freezeSolPayment) !== null && _s !== void 0 ? _s : null,\n      freezeTokenPayment: (_t = data.freezeTokenPayment) !== null && _t !== void 0 ? _t : null,\n      programGate: (_u = data.programGate) !== null && _u !== void 0 ? _u : null,\n      allocation: (_v = data.allocation) !== null && _v !== void 0 ? _v : null\n    },\n    offset: cursor\n  };\n}\n\nfunction serializeGuardSet(buffer, offset, guardSet) {\n  const start = offset;\n  offset += beet_1.u64.byteSize;\n  let features = 0;\n  let index = 0;\n\n  if (guardSet.botTax) {\n    generated_1.botTaxBeet.write(buffer, offset, guardSet.botTax);\n    offset += GUARDS_SIZE.botTax;\n    features |= 1 << index;\n  }\n\n  index++;\n\n  if (guardSet.solPayment) {\n    SolPayment_1.solPaymentBeet.write(buffer, offset, guardSet.solPayment);\n    offset += GUARDS_SIZE.solPayment;\n    features |= 1 << index;\n  }\n\n  index++;\n\n  if (guardSet.tokenPayment) {\n    TokenPayment_1.tokenPaymentBeet.write(buffer, offset, guardSet.tokenPayment);\n    offset += GUARDS_SIZE.tokenPayment;\n    features |= 1 << index;\n  }\n\n  index++;\n\n  if (guardSet.startDate) {\n    generated_1.startDateBeet.write(buffer, offset, guardSet.startDate);\n    offset += GUARDS_SIZE.startDate;\n    features |= 1 << index;\n  }\n\n  index++;\n\n  if (guardSet.thirdPartySigner) {\n    generated_1.thirdPartySignerBeet.write(buffer, offset, guardSet.thirdPartySigner);\n    offset += GUARDS_SIZE.thirdPartySigner;\n    features |= 1 << index;\n  }\n\n  index++;\n\n  if (guardSet.tokenGate) {\n    generated_1.tokenGateBeet.write(buffer, offset, guardSet.tokenGate);\n    offset += GUARDS_SIZE.tokenGate;\n    features |= 1 << index;\n  }\n\n  index++;\n\n  if (guardSet.gatekeeper) {\n    generated_1.gatekeeperBeet.write(buffer, offset, guardSet.gatekeeper);\n    offset += GUARDS_SIZE.gatekeeper;\n    features |= 1 << index;\n  }\n\n  index++;\n\n  if (guardSet.endDate) {\n    EndDate_1.endDateBeet.write(buffer, offset, guardSet.endDate);\n    offset += GUARDS_SIZE.endDate;\n    features |= 1 << index;\n  }\n\n  index++;\n\n  if (guardSet.allowList) {\n    generated_1.allowListBeet.write(buffer, offset, guardSet.allowList);\n    offset += GUARDS_SIZE.allowList;\n    features |= 1 << index;\n  }\n\n  index++;\n\n  if (guardSet.mintLimit) {\n    generated_1.mintLimitBeet.write(buffer, offset, guardSet.mintLimit);\n    offset += GUARDS_SIZE.mintLimit;\n    features |= 1 << index;\n  }\n\n  index++;\n\n  if (guardSet.nftPayment) {\n    generated_1.nftPaymentBeet.write(buffer, offset, guardSet.nftPayment);\n    offset += GUARDS_SIZE.nftPayment;\n    features |= 1 << index;\n  }\n\n  index++;\n\n  if (guardSet.redeemedAmount) {\n    RedeemedAmount_1.redeemedAmountBeet.write(buffer, offset, guardSet.redeemedAmount);\n    offset += GUARDS_SIZE.redeemedAmount;\n    features |= 1 << index;\n  }\n\n  index++;\n\n  if (guardSet.addressGate) {\n    AddressGate_1.addressGateBeet.write(buffer, offset, guardSet.addressGate);\n    offset += GUARDS_SIZE.addressGate;\n    features |= 1 << index;\n  }\n\n  index++;\n\n  if (guardSet.nftGate) {\n    NftGate_1.nftGateBeet.write(buffer, offset, guardSet.nftGate);\n    offset += GUARDS_SIZE.nftGate;\n    features |= 1 << index;\n  }\n\n  index++;\n\n  if (guardSet.nftBurn) {\n    NftBurn_1.nftBurnBeet.write(buffer, offset, guardSet.nftBurn);\n    offset += GUARDS_SIZE.nftBurn;\n    features |= 1 << index;\n  }\n\n  index++;\n\n  if (guardSet.tokenBurn) {\n    TokenBurn_1.tokenBurnBeet.write(buffer, offset, guardSet.tokenBurn);\n    offset += GUARDS_SIZE.tokenBurn;\n    features |= 1 << index;\n  }\n\n  index++;\n\n  if (guardSet.freezeSolPayment) {\n    generated_1.freezeSolPaymentBeet.write(buffer, offset, guardSet.freezeSolPayment);\n    offset += GUARDS_SIZE.freezeSolPayment;\n    features |= 1 << index;\n  }\n\n  index++;\n\n  if (guardSet.freezeTokenPayment) {\n    generated_1.freezeTokenPaymentBeet.write(buffer, offset, guardSet.freezeTokenPayment);\n    offset += GUARDS_SIZE.freezeTokenPayment;\n    features |= 1 << index;\n  }\n\n  index++;\n\n  if (guardSet.programGate) {\n    if (guardSet.programGate.additional && guardSet.programGate.additional.length > MAX_PROGRAM_COUNT) {\n      throw `Exceeded maximum number of programs on additional list:\\\n        ${guardSet.programGate.additional.length} > ${MAX_PROGRAM_COUNT}`;\n    }\n\n    const [data] = generated_1.programGateBeet.serialize(guardSet.programGate, GUARDS_SIZE.programGate);\n    data.copy(buffer, offset);\n    offset += GUARDS_SIZE.programGate;\n    features |= 1 << index;\n  }\n\n  index++;\n\n  if (guardSet.allocation) {\n    generated_1.allocationBeet.write(buffer, offset, guardSet.allocation);\n    offset += GUARDS_SIZE.allocation;\n    features |= 1 << index;\n  }\n\n  index++;\n  beet_1.u64.write(buffer, start, features);\n  return offset;\n}","map":{"version":3,"sources":["../../src/parser.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serialize = exports.deserialize = void 0;\nconst bn_js_1 = require(\"bn.js\");\nconst beet = __importStar(require(\"@metaplex-foundation/beet\"));\nconst log_1 = require(\"./utils/log\");\nconst generated_1 = require(\"./generated\");\nconst SolPayment_1 = require(\"./generated/types/SolPayment\");\nconst TokenPayment_1 = require(\"./generated/types/TokenPayment\");\nconst EndDate_1 = require(\"./generated/types/EndDate\");\nconst RedeemedAmount_1 = require(\"./generated/types/RedeemedAmount\");\nconst AddressGate_1 = require(\"./generated/types/AddressGate\");\nconst NftGate_1 = require(\"./generated/types/NftGate\");\nconst NftBurn_1 = require(\"./generated/types/NftBurn\");\nconst TokenBurn_1 = require(\"./generated/types/TokenBurn\");\nconst beet_1 = require(\"@metaplex-foundation/beet\");\nconst GUARDS_SIZE = {\n    botTax: 9,\n    solPayment: 40,\n    tokenPayment: 72,\n    startDate: 8,\n    thirdPartySigner: 32,\n    tokenGate: 40,\n    gatekeeper: 33,\n    endDate: 8,\n    allowList: 32,\n    mintLimit: 3,\n    nftPayment: 64,\n    redeemedAmount: 8,\n    addressGate: 32,\n    nftGate: 32,\n    nftBurn: 32,\n    tokenBurn: 40,\n    freezeSolPayment: 40,\n    freezeTokenPayment: 72,\n    programGate: 164,\n    allocation: 5,\n};\nconst GUARDS_NAME = [\n    'botTax',\n    'solPayment',\n    'tokenPayment',\n    'startDate',\n    'thirdPartySigner',\n    'tokenGate',\n    'gatekeeper',\n    'endDate',\n    'allowList',\n    'mintLimit',\n    'nftPayment',\n    'redeemedAmount',\n    'addressGate',\n    'nftGate',\n    'nftBurn',\n    'tokenBurn',\n    'freezeSolPayment',\n    'freezeTokenPayment',\n    'programGate',\n    'allocation',\n];\nconst GUARDS_COUNT = GUARDS_NAME.length;\nconst MAX_LABEL_LENGTH = 6;\nconst MAX_PROGRAM_COUNT = 5;\nfunction guardsFromData(buffer) {\n    const enabled = new bn_js_1.BN(beet.u64.read(buffer, 0)).toNumber();\n    const guards = [];\n    for (let i = 0; i < GUARDS_COUNT; i++) {\n        guards.push(!!((1 << i) & enabled));\n    }\n    const [botTaxEnabled, solPaymentEnabled, tokenPaymentEnabled, startDateEnabled, thirdPartySignerEnabled, tokenGateEnabled, gatekeeperEnabled, endDateEnabled, allowListEnabled, mintLimitEnabled, nftPaymentEnabled, redeemedAmountEnabled, addressGateEnabled, nftGateEnabled, nftBurnEnabled, tokenBurnEnabled, freezeSolPaymentEnabled, freezeTokenPaymentEnabled, programGateEnabled, allocationEnabled,] = guards;\n    return {\n        botTaxEnabled,\n        solPaymentEnabled,\n        tokenPaymentEnabled,\n        startDateEnabled,\n        thirdPartySignerEnabled,\n        tokenGateEnabled,\n        gatekeeperEnabled,\n        endDateEnabled,\n        allowListEnabled,\n        mintLimitEnabled,\n        nftPaymentEnabled,\n        redeemedAmountEnabled,\n        addressGateEnabled,\n        nftGateEnabled,\n        nftBurnEnabled,\n        tokenBurnEnabled,\n        freezeSolPaymentEnabled,\n        freezeTokenPaymentEnabled,\n        programGateEnabled,\n        allocationEnabled,\n    };\n}\nfunction deserialize(buffer) {\n    const { guardSet: defaultSet, offset } = deserializeGuardSet(buffer);\n    const groupsCount = new bn_js_1.BN(beet.u32.read(buffer, offset)).toNumber();\n    const groups = [];\n    let cursor = beet.u32.byteSize + offset;\n    for (let i = 0; i < groupsCount; i++) {\n        const label = buffer.subarray(cursor, cursor + MAX_LABEL_LENGTH).toString();\n        cursor += MAX_LABEL_LENGTH;\n        const { guardSet: guards, offset } = deserializeGuardSet(buffer.subarray(cursor));\n        groups.push({ label, guards });\n        cursor += offset;\n    }\n    return {\n        default: defaultSet,\n        groups: groups.length === 0 ? null : groups,\n    };\n}\nexports.deserialize = deserialize;\nfunction serialize(data) {\n    const buffer = Buffer.alloc(size(data));\n    let offset = serializeGuardSet(buffer, 0, data.default);\n    const groupsCount = data.groups ? data.groups.length : 0;\n    beet_1.u32.write(buffer, offset, groupsCount);\n    offset += beet_1.u32.byteSize;\n    for (let i = 0; i < groupsCount; i++) {\n        const group = data.groups.at(i);\n        if (group.label.length > MAX_LABEL_LENGTH) {\n            throw `Exceeded maximum label length: ${group.label.length} > ${MAX_LABEL_LENGTH}`;\n        }\n        buffer.write(group.label, offset, MAX_LABEL_LENGTH, 'utf8');\n        offset += MAX_LABEL_LENGTH;\n        offset = serializeGuardSet(buffer, offset, group.guards);\n    }\n    return buffer;\n}\nexports.serialize = serialize;\nfunction size(data) {\n    let size = guardSetSize(data.default);\n    size += beet_1.u32.byteSize;\n    if (data.groups) {\n        for (let i = 0; i < data.groups.length; i++) {\n            size += MAX_LABEL_LENGTH;\n            size += guardSetSize(data.groups.at(i).guards);\n        }\n    }\n    return size;\n}\nfunction guardSetSize(guardSet) {\n    const guards = [];\n    for (let i = 0; i < GUARDS_COUNT; i++) {\n        const index = GUARDS_NAME[i];\n        if (guardSet[index]) {\n            guards.push(GUARDS_SIZE[index]);\n        }\n    }\n    return (beet_1.u64.byteSize + guards.reduce((previousValue, currentValue) => previousValue + currentValue, 0));\n}\nfunction deserializeGuardSet(buffer) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v;\n    const guards = guardsFromData(buffer);\n    const { botTaxEnabled, startDateEnabled, solPaymentEnabled, tokenPaymentEnabled, thirdPartySignerEnabled, tokenGateEnabled, gatekeeperEnabled, endDateEnabled, allowListEnabled, mintLimitEnabled, nftPaymentEnabled, redeemedAmountEnabled, addressGateEnabled, nftGateEnabled, nftBurnEnabled, tokenBurnEnabled, freezeSolPaymentEnabled, freezeTokenPaymentEnabled, programGateEnabled, allocationEnabled, } = guards;\n    (0, log_1.logDebug)('Guards: %O', guards);\n    let cursor = beet.u64.byteSize;\n    const data = {};\n    if (botTaxEnabled) {\n        const [botTax] = generated_1.botTaxBeet.deserialize(buffer, cursor);\n        data.botTax = botTax;\n        cursor += GUARDS_SIZE.botTax;\n    }\n    if (solPaymentEnabled) {\n        const [solPayment] = SolPayment_1.solPaymentBeet.deserialize(buffer, cursor);\n        data.solPayment = solPayment;\n        cursor += GUARDS_SIZE.solPayment;\n    }\n    if (tokenPaymentEnabled) {\n        const [tokenPayment] = TokenPayment_1.tokenPaymentBeet.deserialize(buffer, cursor);\n        data.tokenPayment = tokenPayment;\n        cursor += GUARDS_SIZE.tokenPayment;\n    }\n    if (startDateEnabled) {\n        const [startDate] = generated_1.startDateBeet.deserialize(buffer, cursor);\n        data.startDate = startDate;\n        cursor += GUARDS_SIZE.startDate;\n    }\n    if (thirdPartySignerEnabled) {\n        const [thirdPartySigner] = generated_1.thirdPartySignerBeet.deserialize(buffer, cursor);\n        data.thirdPartySigner = thirdPartySigner;\n        cursor += GUARDS_SIZE.thirdPartySigner;\n    }\n    if (tokenGateEnabled) {\n        const [tokenGate] = generated_1.tokenGateBeet.deserialize(buffer, cursor);\n        data.tokenGate = tokenGate;\n        cursor += GUARDS_SIZE.tokenGate;\n    }\n    if (gatekeeperEnabled) {\n        const [gatekeeper] = generated_1.gatekeeperBeet.deserialize(buffer, cursor);\n        data.gatekeeper = gatekeeper;\n        cursor += GUARDS_SIZE.gatekeeper;\n    }\n    if (endDateEnabled) {\n        const [endDate] = EndDate_1.endDateBeet.deserialize(buffer, cursor);\n        data.endDate = endDate;\n        cursor += GUARDS_SIZE.endDate;\n    }\n    if (allowListEnabled) {\n        const [allowList] = generated_1.allowListBeet.deserialize(buffer, cursor);\n        data.allowList = allowList;\n        cursor += GUARDS_SIZE.allowList;\n    }\n    if (mintLimitEnabled) {\n        const [mintLimit] = generated_1.mintLimitBeet.deserialize(buffer, cursor);\n        data.mintLimit = mintLimit;\n        cursor += GUARDS_SIZE.mintLimit;\n    }\n    if (nftPaymentEnabled) {\n        const [nftPayment] = generated_1.nftPaymentBeet.deserialize(buffer, cursor);\n        data.nftPayment = nftPayment;\n        cursor += GUARDS_SIZE.nftPayment;\n    }\n    if (redeemedAmountEnabled) {\n        const [redeemedAmount] = RedeemedAmount_1.redeemedAmountBeet.deserialize(buffer, cursor);\n        data.redeemedAmount = redeemedAmount;\n        cursor += GUARDS_SIZE.redeemedAmount;\n    }\n    if (addressGateEnabled) {\n        const [addressGate] = AddressGate_1.addressGateBeet.deserialize(buffer, cursor);\n        data.addressGate = addressGate;\n        cursor += GUARDS_SIZE.addressGate;\n    }\n    if (nftGateEnabled) {\n        const [nftGate] = NftGate_1.nftGateBeet.deserialize(buffer, cursor);\n        data.nftGate = nftGate;\n        cursor += GUARDS_SIZE.nftGate;\n    }\n    if (nftBurnEnabled) {\n        const [nftBurn] = NftBurn_1.nftBurnBeet.deserialize(buffer, cursor);\n        data.nftBurn = nftBurn;\n        cursor += GUARDS_SIZE.nftBurn;\n    }\n    if (tokenBurnEnabled) {\n        const [tokenBurn] = TokenBurn_1.tokenBurnBeet.deserialize(buffer, cursor);\n        data.tokenBurn = tokenBurn;\n        cursor += GUARDS_SIZE.tokenBurn;\n    }\n    if (freezeSolPaymentEnabled) {\n        const [freezeSolPayment] = generated_1.freezeSolPaymentBeet.deserialize(buffer, cursor);\n        data.freezeSolPayment = freezeSolPayment;\n        cursor += GUARDS_SIZE.freezeSolPayment;\n    }\n    if (freezeTokenPaymentEnabled) {\n        const [freezeTokenPayment] = generated_1.freezeTokenPaymentBeet.deserialize(buffer, cursor);\n        data.freezeTokenPayment = freezeTokenPayment;\n        cursor += GUARDS_SIZE.freezeTokenPayment;\n    }\n    if (programGateEnabled) {\n        const [programGate] = generated_1.programGateBeet.deserialize(buffer, cursor);\n        data.programGate = programGate;\n        cursor += GUARDS_SIZE.programGate;\n    }\n    if (allocationEnabled) {\n        const [allocation] = generated_1.allocationBeet.deserialize(buffer, cursor);\n        data.allocation = allocation;\n        cursor += GUARDS_SIZE.allocation;\n    }\n    return {\n        guardSet: {\n            botTax: (_a = data.botTax) !== null && _a !== void 0 ? _a : null,\n            solPayment: (_b = data.solPayment) !== null && _b !== void 0 ? _b : null,\n            tokenPayment: (_c = data.tokenPayment) !== null && _c !== void 0 ? _c : null,\n            startDate: (_d = data.startDate) !== null && _d !== void 0 ? _d : null,\n            thirdPartySigner: (_e = data.thirdPartySigner) !== null && _e !== void 0 ? _e : null,\n            tokenGate: (_f = data.tokenGate) !== null && _f !== void 0 ? _f : null,\n            gatekeeper: (_g = data.gateKeeper) !== null && _g !== void 0 ? _g : null,\n            endDate: (_h = data.endDate) !== null && _h !== void 0 ? _h : null,\n            allowList: (_j = data.allowList) !== null && _j !== void 0 ? _j : null,\n            mintLimit: (_k = data.mintLimit) !== null && _k !== void 0 ? _k : null,\n            nftPayment: (_l = data.nftPayment) !== null && _l !== void 0 ? _l : null,\n            redeemedAmount: (_m = data.redeemedAmount) !== null && _m !== void 0 ? _m : null,\n            addressGate: (_o = data.addressGate) !== null && _o !== void 0 ? _o : null,\n            nftGate: (_p = data.nftGate) !== null && _p !== void 0 ? _p : null,\n            nftBurn: (_q = data.nftBurn) !== null && _q !== void 0 ? _q : null,\n            tokenBurn: (_r = data.tokenBurn) !== null && _r !== void 0 ? _r : null,\n            freezeSolPayment: (_s = data.freezeSolPayment) !== null && _s !== void 0 ? _s : null,\n            freezeTokenPayment: (_t = data.freezeTokenPayment) !== null && _t !== void 0 ? _t : null,\n            programGate: (_u = data.programGate) !== null && _u !== void 0 ? _u : null,\n            allocation: (_v = data.allocation) !== null && _v !== void 0 ? _v : null,\n        },\n        offset: cursor,\n    };\n}\nfunction serializeGuardSet(buffer, offset, guardSet) {\n    const start = offset;\n    offset += beet_1.u64.byteSize;\n    let features = 0;\n    let index = 0;\n    if (guardSet.botTax) {\n        generated_1.botTaxBeet.write(buffer, offset, guardSet.botTax);\n        offset += GUARDS_SIZE.botTax;\n        features |= 1 << index;\n    }\n    index++;\n    if (guardSet.solPayment) {\n        SolPayment_1.solPaymentBeet.write(buffer, offset, guardSet.solPayment);\n        offset += GUARDS_SIZE.solPayment;\n        features |= 1 << index;\n    }\n    index++;\n    if (guardSet.tokenPayment) {\n        TokenPayment_1.tokenPaymentBeet.write(buffer, offset, guardSet.tokenPayment);\n        offset += GUARDS_SIZE.tokenPayment;\n        features |= 1 << index;\n    }\n    index++;\n    if (guardSet.startDate) {\n        generated_1.startDateBeet.write(buffer, offset, guardSet.startDate);\n        offset += GUARDS_SIZE.startDate;\n        features |= 1 << index;\n    }\n    index++;\n    if (guardSet.thirdPartySigner) {\n        generated_1.thirdPartySignerBeet.write(buffer, offset, guardSet.thirdPartySigner);\n        offset += GUARDS_SIZE.thirdPartySigner;\n        features |= 1 << index;\n    }\n    index++;\n    if (guardSet.tokenGate) {\n        generated_1.tokenGateBeet.write(buffer, offset, guardSet.tokenGate);\n        offset += GUARDS_SIZE.tokenGate;\n        features |= 1 << index;\n    }\n    index++;\n    if (guardSet.gatekeeper) {\n        generated_1.gatekeeperBeet.write(buffer, offset, guardSet.gatekeeper);\n        offset += GUARDS_SIZE.gatekeeper;\n        features |= 1 << index;\n    }\n    index++;\n    if (guardSet.endDate) {\n        EndDate_1.endDateBeet.write(buffer, offset, guardSet.endDate);\n        offset += GUARDS_SIZE.endDate;\n        features |= 1 << index;\n    }\n    index++;\n    if (guardSet.allowList) {\n        generated_1.allowListBeet.write(buffer, offset, guardSet.allowList);\n        offset += GUARDS_SIZE.allowList;\n        features |= 1 << index;\n    }\n    index++;\n    if (guardSet.mintLimit) {\n        generated_1.mintLimitBeet.write(buffer, offset, guardSet.mintLimit);\n        offset += GUARDS_SIZE.mintLimit;\n        features |= 1 << index;\n    }\n    index++;\n    if (guardSet.nftPayment) {\n        generated_1.nftPaymentBeet.write(buffer, offset, guardSet.nftPayment);\n        offset += GUARDS_SIZE.nftPayment;\n        features |= 1 << index;\n    }\n    index++;\n    if (guardSet.redeemedAmount) {\n        RedeemedAmount_1.redeemedAmountBeet.write(buffer, offset, guardSet.redeemedAmount);\n        offset += GUARDS_SIZE.redeemedAmount;\n        features |= 1 << index;\n    }\n    index++;\n    if (guardSet.addressGate) {\n        AddressGate_1.addressGateBeet.write(buffer, offset, guardSet.addressGate);\n        offset += GUARDS_SIZE.addressGate;\n        features |= 1 << index;\n    }\n    index++;\n    if (guardSet.nftGate) {\n        NftGate_1.nftGateBeet.write(buffer, offset, guardSet.nftGate);\n        offset += GUARDS_SIZE.nftGate;\n        features |= 1 << index;\n    }\n    index++;\n    if (guardSet.nftBurn) {\n        NftBurn_1.nftBurnBeet.write(buffer, offset, guardSet.nftBurn);\n        offset += GUARDS_SIZE.nftBurn;\n        features |= 1 << index;\n    }\n    index++;\n    if (guardSet.tokenBurn) {\n        TokenBurn_1.tokenBurnBeet.write(buffer, offset, guardSet.tokenBurn);\n        offset += GUARDS_SIZE.tokenBurn;\n        features |= 1 << index;\n    }\n    index++;\n    if (guardSet.freezeSolPayment) {\n        generated_1.freezeSolPaymentBeet.write(buffer, offset, guardSet.freezeSolPayment);\n        offset += GUARDS_SIZE.freezeSolPayment;\n        features |= 1 << index;\n    }\n    index++;\n    if (guardSet.freezeTokenPayment) {\n        generated_1.freezeTokenPaymentBeet.write(buffer, offset, guardSet.freezeTokenPayment);\n        offset += GUARDS_SIZE.freezeTokenPayment;\n        features |= 1 << index;\n    }\n    index++;\n    if (guardSet.programGate) {\n        if (guardSet.programGate.additional &&\n            guardSet.programGate.additional.length > MAX_PROGRAM_COUNT) {\n            throw `Exceeded maximum number of programs on additional list:\\\n        ${guardSet.programGate.additional.length} > ${MAX_PROGRAM_COUNT}`;\n        }\n        const [data] = generated_1.programGateBeet.serialize(guardSet.programGate, GUARDS_SIZE.programGate);\n        data.copy(buffer, offset);\n        offset += GUARDS_SIZE.programGate;\n        features |= 1 << index;\n    }\n    index++;\n    if (guardSet.allocation) {\n        generated_1.allocationBeet.write(buffer, offset, guardSet.allocation);\n        offset += GUARDS_SIZE.allocation;\n        features |= 1 << index;\n    }\n    index++;\n    beet_1.u64.write(buffer, start, features);\n    return offset;\n}\n//# sourceMappingURL=parser.js.map"]},"metadata":{},"sourceType":"script"}