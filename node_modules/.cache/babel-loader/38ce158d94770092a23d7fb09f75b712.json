{"ast":null,"code":"import { MintLayout, AccountLayout } from '@solana/spl-token';\nimport { NotYetImplementedError } from '../../errors/SdkError.mjs';\nimport { getAccountParsingFunction, getAccountParsingAndAssertingFunction } from '../../types/Account.mjs';\nconst mintAccountParser = {\n  name: 'MintAccount',\n  deserialize: (data, offset) => {\n    const span = MintLayout.getSpan(data, offset);\n    const decoded = MintLayout.decode(data, offset);\n    return [decoded, span];\n  },\n\n  fromArgs() {\n    throw new NotYetImplementedError();\n  }\n\n};\n/** @group Accounts */\n\n/** @group Account Helpers */\n\nconst parseMintAccount = getAccountParsingFunction(mintAccountParser);\n/** @group Account Helpers */\n\nconst toMintAccount = getAccountParsingAndAssertingFunction(mintAccountParser);\nconst tokenAccountParser = {\n  name: 'TokenAccount',\n  deserialize: (data, offset) => {\n    const span = AccountLayout.getSpan(data, offset);\n    const decoded = AccountLayout.decode(data, offset);\n    return [decoded, span];\n  },\n\n  fromArgs() {\n    throw new NotYetImplementedError();\n  }\n\n};\n/** @group Accounts */\n\n/** @group Account Helpers */\n\nconst parseTokenAccount = getAccountParsingFunction(tokenAccountParser);\n/** @group Account Helpers */\n\nconst toTokenAccount = getAccountParsingAndAssertingFunction(tokenAccountParser);\nexport { parseMintAccount, parseTokenAccount, toMintAccount, toTokenAccount };","map":{"version":3,"sources":["../../../../src/plugins/tokenModule/accounts.ts"],"names":["mintAccountParser","name","deserialize","data","offset","span","SplMintAccountLayout","getSpan","decoded","decode","fromArgs","NotYetImplementedError","parseMintAccount","getAccountParsingFunction","toMintAccount","getAccountParsingAndAssertingFunction","tokenAccountParser","SplTokenAccountLayout","parseTokenAccount","toTokenAccount"],"mappings":";;;AAcA,MAAMA,iBAA6C,GAAG;EACpDC,IAAI,EAAE,aAD8C;EAEpDC,WAAW,EAAE,CAACC,IAAD,EAAeC,MAAf,KAAmC;IAC9C,MAAMC,IAAI,GAAGC,UAAoB,CAACC,OAArBD,CAA6BH,IAA7BG,EAAmCF,MAAnCE,CAAb;IACA,MAAME,OAAO,GAAGF,UAAoB,CAACG,MAArBH,CAA4BH,IAA5BG,EAAkCF,MAAlCE,CAAhB;IACA,OAAO,CAACE,OAAD,EAAUH,IAAV,CAAP;EACD,CANmD;;EAOpDK,QAAQ,GAAG;IACT,MAAM,IAAIC,sBAAJ,EAAN;EACF;;AAToD,CAAtD;AAYA;;AAGA;;MACaC,gBAAgB,GAAGC,yBAAyB,CAACb,iBAAD,C;AAEzD;;MACac,aAAa,GACxBC,qCAAqC,CAACf,iBAAD,C;AAEvC,MAAMgB,kBAA+C,GAAG;EACtDf,IAAI,EAAE,cADgD;EAEtDC,WAAW,EAAE,CAACC,IAAD,EAAeC,MAAf,KAAmC;IAC9C,MAAMC,IAAI,GAAGY,aAAqB,CAACV,OAAtBU,CAA8Bd,IAA9Bc,EAAoCb,MAApCa,CAAb;IACA,MAAMT,OAAO,GAAGS,aAAqB,CAACR,MAAtBQ,CAA6Bd,IAA7Bc,EAAmCb,MAAnCa,CAAhB;IACA,OAAO,CAACT,OAAD,EAAUH,IAAV,CAAP;EACD,CANqD;;EAOtDK,QAAQ,GAAG;IACT,MAAM,IAAIC,sBAAJ,EAAN;EACF;;AATsD,CAAxD;AAYA;;AAGA;;MACaO,iBAAiB,GAAGL,yBAAyB,CAACG,kBAAD,C;AAE1D;;MACaG,cAAc,GACzBJ,qCAAqC,CAACC,kBAAD,C","sourcesContent":["import {\n  AccountLayout as SplTokenAccountLayout,\n  MintLayout as SplMintAccountLayout,\n  RawAccount as SplTokenAccount,\n  RawMint as SplMintAccount,\n} from '@solana/spl-token';\nimport { NotYetImplementedError } from '@/errors';\nimport {\n  Account,\n  SolitaType,\n  getAccountParsingAndAssertingFunction,\n  getAccountParsingFunction,\n} from '@/types';\n\nconst mintAccountParser: SolitaType<SplMintAccount> = {\n  name: 'MintAccount',\n  deserialize: (data: Buffer, offset?: number) => {\n    const span = SplMintAccountLayout.getSpan(data, offset);\n    const decoded = SplMintAccountLayout.decode(data, offset);\n    return [decoded, span];\n  },\n  fromArgs() {\n    throw new NotYetImplementedError();\n  },\n};\n\n/** @group Accounts */\nexport type MintAccount = Account<SplMintAccount>;\n\n/** @group Account Helpers */\nexport const parseMintAccount = getAccountParsingFunction(mintAccountParser);\n\n/** @group Account Helpers */\nexport const toMintAccount =\n  getAccountParsingAndAssertingFunction(mintAccountParser);\n\nconst tokenAccountParser: SolitaType<SplTokenAccount> = {\n  name: 'TokenAccount',\n  deserialize: (data: Buffer, offset?: number) => {\n    const span = SplTokenAccountLayout.getSpan(data, offset);\n    const decoded = SplTokenAccountLayout.decode(data, offset);\n    return [decoded, span];\n  },\n  fromArgs() {\n    throw new NotYetImplementedError();\n  },\n};\n\n/** @group Accounts */\nexport type TokenAccount = Account<SplTokenAccount>;\n\n/** @group Account Helpers */\nexport const parseTokenAccount = getAccountParsingFunction(tokenAccountParser);\n\n/** @group Account Helpers */\nexport const toTokenAccount =\n  getAccountParsingAndAssertingFunction(tokenAccountParser);\n"]},"metadata":{},"sourceType":"module"}