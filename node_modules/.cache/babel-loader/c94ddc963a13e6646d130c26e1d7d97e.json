{"ast":null,"code":"import { createContext, useContext } from 'react';\nconst EMPTY_ARRAY = [];\nconst DEFAULT_CONTEXT = {\n  autoConnect: false,\n  connecting: false,\n  connected: false,\n  disconnecting: false,\n\n  select(_name) {\n    console.error(constructMissingProviderErrorMessage('get', 'select'));\n  },\n\n  connect() {\n    return Promise.reject(console.error(constructMissingProviderErrorMessage('get', 'connect')));\n  },\n\n  disconnect() {\n    return Promise.reject(console.error(constructMissingProviderErrorMessage('get', 'disconnect')));\n  },\n\n  sendTransaction(_transaction, _connection, _options) {\n    return Promise.reject(console.error(constructMissingProviderErrorMessage('get', 'sendTransaction')));\n  },\n\n  signTransaction(_transaction) {\n    return Promise.reject(console.error(constructMissingProviderErrorMessage('get', 'signTransaction')));\n  },\n\n  signAllTransactions(_transaction) {\n    return Promise.reject(console.error(constructMissingProviderErrorMessage('get', 'signAllTransactions')));\n  },\n\n  signMessage(_message) {\n    return Promise.reject(console.error(constructMissingProviderErrorMessage('get', 'signMessage')));\n  }\n\n};\nObject.defineProperty(DEFAULT_CONTEXT, 'wallets', {\n  get() {\n    console.error(constructMissingProviderErrorMessage('read', 'wallets'));\n    return EMPTY_ARRAY;\n  }\n\n});\nObject.defineProperty(DEFAULT_CONTEXT, 'wallet', {\n  get() {\n    console.error(constructMissingProviderErrorMessage('read', 'wallet'));\n    return null;\n  }\n\n});\nObject.defineProperty(DEFAULT_CONTEXT, 'publicKey', {\n  get() {\n    console.error(constructMissingProviderErrorMessage('read', 'publicKey'));\n    return null;\n  }\n\n});\n\nfunction constructMissingProviderErrorMessage(action, valueName) {\n  return 'You have tried to ' + ` ${action} \"${valueName}\"` + ' on a WalletContext without providing one.' + ' Make sure to render a WalletProvider' + ' as an ancestor of the component that uses ' + 'WalletContext';\n}\n\nexport const WalletContext = createContext(DEFAULT_CONTEXT);\nexport function useWallet() {\n  return useContext(WalletContext);\n}","map":{"version":3,"sources":["../../src/useWallet.ts"],"names":[],"mappings":"AAUA,SAAS,aAAT,EAAwB,UAAxB,QAA0C,OAA1C;AA0BA,MAAM,WAAW,GAAyB,EAA1C;AAEA,MAAM,eAAe,GAAG;EACpB,WAAW,EAAE,KADO;EAEpB,UAAU,EAAE,KAFQ;EAGpB,SAAS,EAAE,KAHS;EAIpB,aAAa,EAAE,KAJK;;EAKpB,MAAM,CAAC,KAAD,EAAyB;IAC3B,OAAO,CAAC,KAAR,CAAc,oCAAoC,CAAC,KAAD,EAAQ,QAAR,CAAlD;EACH,CAPmB;;EAQpB,OAAO,GAAA;IACH,OAAO,OAAO,CAAC,MAAR,CAAe,OAAO,CAAC,KAAR,CAAc,oCAAoC,CAAC,KAAD,EAAQ,SAAR,CAAlD,CAAf,CAAP;EACH,CAVmB;;EAWpB,UAAU,GAAA;IACN,OAAO,OAAO,CAAC,MAAR,CAAe,OAAO,CAAC,KAAR,CAAc,oCAAoC,CAAC,KAAD,EAAQ,YAAR,CAAlD,CAAf,CAAP;EACH,CAbmB;;EAcpB,eAAe,CACX,YADW,EAEX,WAFW,EAGX,QAHW,EAGsB;IAEjC,OAAO,OAAO,CAAC,MAAR,CAAe,OAAO,CAAC,KAAR,CAAc,oCAAoC,CAAC,KAAD,EAAQ,iBAAR,CAAlD,CAAf,CAAP;EACH,CApBmB;;EAqBpB,eAAe,CAAC,YAAD,EAA0B;IACrC,OAAO,OAAO,CAAC,MAAR,CAAe,OAAO,CAAC,KAAR,CAAc,oCAAoC,CAAC,KAAD,EAAQ,iBAAR,CAAlD,CAAf,CAAP;EACH,CAvBmB;;EAwBpB,mBAAmB,CAAC,YAAD,EAA4B;IAC3C,OAAO,OAAO,CAAC,MAAR,CAAe,OAAO,CAAC,KAAR,CAAc,oCAAoC,CAAC,KAAD,EAAQ,qBAAR,CAAlD,CAAf,CAAP;EACH,CA1BmB;;EA2BpB,WAAW,CAAC,QAAD,EAAqB;IAC5B,OAAO,OAAO,CAAC,MAAR,CAAe,OAAO,CAAC,KAAR,CAAc,oCAAoC,CAAC,KAAD,EAAQ,aAAR,CAAlD,CAAf,CAAP;EACH;;AA7BmB,CAAxB;AA+BA,MAAM,CAAC,cAAP,CAAsB,eAAtB,EAAuC,SAAvC,EAAkD;EAC9C,GAAG,GAAA;IACC,OAAO,CAAC,KAAR,CAAc,oCAAoC,CAAC,MAAD,EAAS,SAAT,CAAlD;IACA,OAAO,WAAP;EACH;;AAJ6C,CAAlD;AAMA,MAAM,CAAC,cAAP,CAAsB,eAAtB,EAAuC,QAAvC,EAAiD;EAC7C,GAAG,GAAA;IACC,OAAO,CAAC,KAAR,CAAc,oCAAoC,CAAC,MAAD,EAAS,QAAT,CAAlD;IACA,OAAO,IAAP;EACH;;AAJ4C,CAAjD;AAMA,MAAM,CAAC,cAAP,CAAsB,eAAtB,EAAuC,WAAvC,EAAoD;EAChD,GAAG,GAAA;IACC,OAAO,CAAC,KAAR,CAAc,oCAAoC,CAAC,MAAD,EAAS,WAAT,CAAlD;IACA,OAAO,IAAP;EACH;;AAJ+C,CAApD;;AAOA,SAAS,oCAAT,CAA8C,MAA9C,EAA8D,SAA9D,EAA+E;EAC3E,OACI,uBACA,IAAI,MAAM,KAAK,SAAS,GADxB,GAEA,4CAFA,GAGA,uCAHA,GAIA,6CAJA,GAKA,eANJ;AAQH;;AAED,OAAO,MAAM,aAAa,GAAG,aAAa,CAAqB,eAArB,CAAnC;AAEP,OAAM,SAAU,SAAV,GAAmB;EACrB,OAAO,UAAU,CAAC,aAAD,CAAjB;AACH","sourceRoot":"","sourcesContent":["import { createContext, useContext } from 'react';\nconst EMPTY_ARRAY = [];\nconst DEFAULT_CONTEXT = {\n    autoConnect: false,\n    connecting: false,\n    connected: false,\n    disconnecting: false,\n    select(_name) {\n        console.error(constructMissingProviderErrorMessage('get', 'select'));\n    },\n    connect() {\n        return Promise.reject(console.error(constructMissingProviderErrorMessage('get', 'connect')));\n    },\n    disconnect() {\n        return Promise.reject(console.error(constructMissingProviderErrorMessage('get', 'disconnect')));\n    },\n    sendTransaction(_transaction, _connection, _options) {\n        return Promise.reject(console.error(constructMissingProviderErrorMessage('get', 'sendTransaction')));\n    },\n    signTransaction(_transaction) {\n        return Promise.reject(console.error(constructMissingProviderErrorMessage('get', 'signTransaction')));\n    },\n    signAllTransactions(_transaction) {\n        return Promise.reject(console.error(constructMissingProviderErrorMessage('get', 'signAllTransactions')));\n    },\n    signMessage(_message) {\n        return Promise.reject(console.error(constructMissingProviderErrorMessage('get', 'signMessage')));\n    },\n};\nObject.defineProperty(DEFAULT_CONTEXT, 'wallets', {\n    get() {\n        console.error(constructMissingProviderErrorMessage('read', 'wallets'));\n        return EMPTY_ARRAY;\n    },\n});\nObject.defineProperty(DEFAULT_CONTEXT, 'wallet', {\n    get() {\n        console.error(constructMissingProviderErrorMessage('read', 'wallet'));\n        return null;\n    },\n});\nObject.defineProperty(DEFAULT_CONTEXT, 'publicKey', {\n    get() {\n        console.error(constructMissingProviderErrorMessage('read', 'publicKey'));\n        return null;\n    },\n});\nfunction constructMissingProviderErrorMessage(action, valueName) {\n    return ('You have tried to ' +\n        ` ${action} \"${valueName}\"` +\n        ' on a WalletContext without providing one.' +\n        ' Make sure to render a WalletProvider' +\n        ' as an ancestor of the component that uses ' +\n        'WalletContext');\n}\nexport const WalletContext = createContext(DEFAULT_CONTEXT);\nexport function useWallet() {\n    return useContext(WalletContext);\n}\n//# sourceMappingURL=useWallet.js.map"]},"metadata":{},"sourceType":"module"}