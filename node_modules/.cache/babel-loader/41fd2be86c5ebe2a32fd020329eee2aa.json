{"ast":null,"code":"import { defineProperty as _defineProperty } from '../_virtual/_rollupPluginBabelHelpers.mjs';\nimport { MetaplexError } from './MetaplexError.mjs';\n/** @group Errors */\n\nclass BundlrError extends MetaplexError {\n  constructor(message, cause) {\n    super(message, 'plugin', 'Bundlr', cause);\n\n    _defineProperty(this, \"name\", 'BundlrError');\n  }\n\n}\n/** @group Errors */\n\n\nclass FailedToInitializeBundlrError extends BundlrError {\n  constructor(cause) {\n    const message = 'Bundlr could not be initialized. ' + 'Please check the underlying error below for more details.';\n    super(message, cause);\n\n    _defineProperty(this, \"name\", 'FailedToInitializeBundlrError');\n  }\n\n}\n/** @group Errors */\n\n\nclass FailedToConnectToBundlrAddressError extends BundlrError {\n  constructor(address, cause) {\n    const message = `Bundlr could not connect to the provided address [${address}]. ` + 'Please ensure the provided address is valid. Some valid addresses include: ' + '\"https://node1.bundlr.network\" for mainnet and \"https://devnet.bundlr.network\" for devnet';\n    super(message, cause);\n\n    _defineProperty(this, \"name\", 'FailedToConnectToBundlrAddressError');\n  }\n\n}\n/** @group Errors */\n\n\nclass AssetUploadFailedError extends BundlrError {\n  constructor(status) {\n    const message = `The asset could not be uploaded to the Bundlr network and ` + `returned the following status code [${status}].`;\n    super(message);\n\n    _defineProperty(this, \"name\", 'AssetUploadFailedError');\n  }\n\n}\n/** @group Errors */\n\n\nclass BundlrWithdrawError extends BundlrError {\n  constructor(status) {\n    const message = `The balance could not be withdrawn from the Bundlr network and ` + `returned the following status code [${status}].`;\n    super(message);\n\n    _defineProperty(this, \"name\", 'BundlrWithdrawError');\n  }\n\n}\n\nexport { AssetUploadFailedError, BundlrError, BundlrWithdrawError, FailedToConnectToBundlrAddressError, FailedToInitializeBundlrError };","map":{"version":3,"sources":["../../../src/errors/BundlrError.ts"],"names":["BundlrError","MetaplexError","constructor","message","cause","FailedToInitializeBundlrError","FailedToConnectToBundlrAddressError","address","AssetUploadFailedError","status","BundlrWithdrawError"],"mappings":";;AAEA;;AACO,MAAMA,WAAN,SAA0BC,aAA1B,CAAwC;EAE7CC,WAAW,CAACC,OAAD,EAAkBC,KAAlB,EAAiC;IAC1C,MAAMD,OAAN,EAAe,QAAf,EAAyB,QAAzB,EAAmCC,KAAnC;;IAA0C,eAAA,CAAA,IAAA,EAAA,MAAA,EAFpB,aAEoB,CAAA;EAC5C;;AAJ6C;AAO/C;;;AACO,MAAMC,6BAAN,SAA4CL,WAA5C,CAAwD;EAE7DE,WAAW,CAACE,KAAD,EAAe;IACxB,MAAMD,OAAO,GACX,sCACA,2DAFF;IAGA,MAAMA,OAAN,EAAeC,KAAf;;IAAsB,eAAA,CAAA,IAAA,EAAA,MAAA,EALA,+BAKA,CAAA;EACxB;;AAP6D;AAU/D;;;AACO,MAAME,mCAAN,SAAkDN,WAAlD,CAA8D;EAEnEE,WAAW,CAACK,OAAD,EAAkBH,KAAlB,EAAgC;IACzC,MAAMD,OAAO,GAC0CI,qDAAAA,OAAQ,KAA5D,GACD,6EADC,GAED,2FAHF;IAIA,MAAMJ,OAAN,EAAeC,KAAf;;IAAsB,eAAA,CAAA,IAAA,EAAA,MAAA,EANA,qCAMA,CAAA;EACxB;;AARmE;AAWrE;;;AACO,MAAMI,sBAAN,SAAqCR,WAArC,CAAiD;EAEtDE,WAAW,CAACO,MAAD,EAAiB;IAC1B,MAAMN,OAAO,GACV,4DAAA,GACA,uCAAsCM,MAAU,IAFnD;IAGA,MAAMN,OAAN;;IAAe,eAAA,CAAA,IAAA,EAAA,MAAA,EALO,wBAKP,CAAA;EACjB;;AAPsD;AAUxD;;;AACO,MAAMO,mBAAN,SAAkCV,WAAlC,CAA8C;EAEnDE,WAAW,CAACO,MAAD,EAAiB;IAC1B,MAAMN,OAAO,GACV,iEAAA,GACA,uCAAsCM,MAAU,IAFnD;IAGA,MAAMN,OAAN;;IAAe,eAAA,CAAA,IAAA,EAAA,MAAA,EALO,qBAKP,CAAA;EACjB;;AAPmD","sourcesContent":["import { MetaplexError } from './MetaplexError';\n\n/** @group Errors */\nexport class BundlrError extends MetaplexError {\n  readonly name: string = 'BundlrError';\n  constructor(message: string, cause?: Error) {\n    super(message, 'plugin', 'Bundlr', cause);\n  }\n}\n\n/** @group Errors */\nexport class FailedToInitializeBundlrError extends BundlrError {\n  readonly name: string = 'FailedToInitializeBundlrError';\n  constructor(cause: Error) {\n    const message =\n      'Bundlr could not be initialized. ' +\n      'Please check the underlying error below for more details.';\n    super(message, cause);\n  }\n}\n\n/** @group Errors */\nexport class FailedToConnectToBundlrAddressError extends BundlrError {\n  readonly name: string = 'FailedToConnectToBundlrAddressError';\n  constructor(address: string, cause: Error) {\n    const message =\n      `Bundlr could not connect to the provided address [${address}]. ` +\n      'Please ensure the provided address is valid. Some valid addresses include: ' +\n      '\"https://node1.bundlr.network\" for mainnet and \"https://devnet.bundlr.network\" for devnet';\n    super(message, cause);\n  }\n}\n\n/** @group Errors */\nexport class AssetUploadFailedError extends BundlrError {\n  readonly name: string = 'AssetUploadFailedError';\n  constructor(status: number) {\n    const message =\n      `The asset could not be uploaded to the Bundlr network and ` +\n      `returned the following status code [${status}].`;\n    super(message);\n  }\n}\n\n/** @group Errors */\nexport class BundlrWithdrawError extends BundlrError {\n  readonly name: string = 'BundlrWithdrawError';\n  constructor(status: number) {\n    const message =\n      `The balance could not be withdrawn from the Bundlr network and ` +\n      `returned the following status code [${status}].`;\n    super(message);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}