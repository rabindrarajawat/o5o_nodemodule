{"ast":null,"code":"import { defineProperty as _defineProperty } from '../../_virtual/_rollupPluginBabelHelpers.mjs';\nimport { MetaplexError } from '../../errors/MetaplexError.mjs';\n/** @group Errors */\n\nclass DerivedIdentityError extends MetaplexError {\n  constructor(message, cause) {\n    super(message, 'plugin', 'Derived Identity', cause);\n\n    _defineProperty(this, \"name\", 'DerivedIdentityError');\n  }\n\n}\n/** @group Errors */\n\n\nclass UninitializedDerivedIdentityError extends DerivedIdentityError {\n  constructor() {\n    const message = 'The derived identity module has not been initialized. ' + 'Before using the derived identity, you must provide a message that ' + 'will be used to derived a Keypair from the current identity. ' + 'You may do that by calling \"metaplex.derivedIdentity().deriveFrom(message)\".';\n    super(message);\n  }\n\n}\n\nexport { DerivedIdentityError, UninitializedDerivedIdentityError };","map":{"version":3,"sources":["../../../../src/plugins/derivedIdentity/errors.ts"],"names":["DerivedIdentityError","MetaplexError","constructor","message","cause","UninitializedDerivedIdentityError"],"mappings":";;AAEA;;AACO,MAAMA,oBAAN,SAAmCC,aAAnC,CAAiD;EAEtDC,WAAW,CAACC,OAAD,EAAkBC,KAAlB,EAAiC;IAC1C,MAAMD,OAAN,EAAe,QAAf,EAAyB,kBAAzB,EAA6CC,KAA7C;;IAAoD,eAAA,CAAA,IAAA,EAAA,MAAA,EAF9B,sBAE8B,CAAA;EACtD;;AAJsD;AAOxD;;;AACO,MAAMC,iCAAN,SAAgDL,oBAAhD,CAAqE;EAC1EE,WAAW,GAAG;IACZ,MAAMC,OAAO,GACX,2DACA,qEADA,GAEA,+DAFA,GAGA,8EAJF;IAKA,MAAMA,OAAN;EACF;;AAR0E","sourcesContent":["import { MetaplexError } from '@/errors';\n\n/** @group Errors */\nexport class DerivedIdentityError extends MetaplexError {\n  readonly name: string = 'DerivedIdentityError';\n  constructor(message: string, cause?: Error) {\n    super(message, 'plugin', 'Derived Identity', cause);\n  }\n}\n\n/** @group Errors */\nexport class UninitializedDerivedIdentityError extends DerivedIdentityError {\n  constructor() {\n    const message =\n      'The derived identity module has not been initialized. ' +\n      'Before using the derived identity, you must provide a message that ' +\n      'will be used to derived a Keypair from the current identity. ' +\n      'You may do that by calling \"metaplex.derivedIdentity().deriveFrom(message)\".';\n    super(message);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}