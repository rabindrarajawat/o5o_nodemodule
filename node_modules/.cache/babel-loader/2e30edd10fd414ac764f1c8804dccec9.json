{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveToWalletAddress = exports.getInputKey = exports.SOL_TLD_AUTHORITY = void 0;\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar spl_name_service_1 = require(\"@solana/spl-name-service\");\n\nvar utils_1 = require(\"./utils\"); // Address of the SOL TLD\n\n\nexports.SOL_TLD_AUTHORITY = new web3_js_1.PublicKey(\"58PwtjSDuFHuUkYjH9BYnnQKHfwo9reZhC2zMJv9JPkx\");\n\nvar getInputKey = function (input) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var hashedInputName, inputDomainKey;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , (0, spl_name_service_1.getHashedName)(input)];\n\n        case 1:\n          hashedInputName = _a.sent();\n          return [4\n          /*yield*/\n          , (0, spl_name_service_1.getNameAccountKey)(hashedInputName, undefined, exports.SOL_TLD_AUTHORITY)];\n\n        case 2:\n          inputDomainKey = _a.sent();\n          return [2\n          /*return*/\n          , {\n            inputDomainKey: inputDomainKey,\n            hashedInputName: hashedInputName\n          }];\n      }\n    });\n  });\n};\n\nexports.getInputKey = getInputKey;\nvar errorCantResolve = new Error(\"Can't resolve provided name into valid Solana address =(\");\n/**\n * Fn to resolve text into Solana wallet Public Key,\n * For now it resolves Solana Domain Names.\n * If Solana address passed it is validated and send back.\n *\n * Throw error if input text can't be resolved and validated.\n */\n\nvar resolveToWalletAddress = function (_a) {\n  var rawText = _a.text,\n      _b = _a.connection,\n      connection = _b === void 0 ? (0, utils_1.createConnectionConfig)() : _b;\n  return __awaiter(void 0, void 0, void 0, function () {\n    var input, isValidSolana, inputLowerCased, isSolDamain, domainName, inputDomainKey, registry, owner;\n\n    var _c, _d, _e, _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          input = (_c = rawText === null || rawText === void 0 ? void 0 : rawText.trim) === null || _c === void 0 ? void 0 : _c.call(rawText); // throw and error if input is not provided\n\n          if (!input) {\n            return [2\n            /*return*/\n            , Promise.reject(errorCantResolve)];\n          }\n\n          isValidSolana = (0, utils_1.isValidSolanaAddress)(input);\n\n          if (isValidSolana) {\n            return [2\n            /*return*/\n            , Promise.resolve(input)];\n          }\n\n          inputLowerCased = input === null || input === void 0 ? void 0 : input.toLowerCase();\n          isSolDamain = (_d = inputLowerCased === null || inputLowerCased === void 0 ? void 0 : inputLowerCased.endsWith) === null || _d === void 0 ? void 0 : _d.call(inputLowerCased, \".sol\");\n          if (!isSolDamain) return [3\n          /*break*/\n          , 3];\n          domainName = inputLowerCased.split(\".sol\")[0];\n          return [4\n          /*yield*/\n          , (0, exports.getInputKey)(domainName)];\n\n        case 1:\n          inputDomainKey = _g.sent().inputDomainKey;\n          return [4\n          /*yield*/\n          , spl_name_service_1.NameRegistryState.retrieve(connection, inputDomainKey)];\n\n        case 2:\n          registry = _g.sent();\n          owner = (_f = (_e = registry === null || registry === void 0 ? void 0 : registry.owner) === null || _e === void 0 ? void 0 : _e.toBase58) === null || _f === void 0 ? void 0 : _f.call(_e);\n\n          if (owner) {\n            return [2\n            /*return*/\n            , Promise.resolve(owner)];\n          }\n\n          _g.label = 3;\n\n        case 3:\n          // throw error if had no luck get valid Solana address\n          return [2\n          /*return*/\n          , Promise.reject(errorCantResolve)];\n      }\n    });\n  });\n};\n\nexports.resolveToWalletAddress = resolveToWalletAddress;","map":{"version":3,"sources":["../src/resolveToWalletAddress.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveToWalletAddress = exports.getInputKey = exports.SOL_TLD_AUTHORITY = void 0;\nvar web3_js_1 = require(\"@solana/web3.js\");\nvar spl_name_service_1 = require(\"@solana/spl-name-service\");\nvar utils_1 = require(\"./utils\");\n// Address of the SOL TLD\nexports.SOL_TLD_AUTHORITY = new web3_js_1.PublicKey(\"58PwtjSDuFHuUkYjH9BYnnQKHfwo9reZhC2zMJv9JPkx\");\nvar getInputKey = function (input) { return __awaiter(void 0, void 0, void 0, function () {\n    var hashedInputName, inputDomainKey;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, (0, spl_name_service_1.getHashedName)(input)];\n            case 1:\n                hashedInputName = _a.sent();\n                return [4 /*yield*/, (0, spl_name_service_1.getNameAccountKey)(hashedInputName, undefined, exports.SOL_TLD_AUTHORITY)];\n            case 2:\n                inputDomainKey = _a.sent();\n                return [2 /*return*/, { inputDomainKey: inputDomainKey, hashedInputName: hashedInputName }];\n        }\n    });\n}); };\nexports.getInputKey = getInputKey;\nvar errorCantResolve = new Error(\"Can't resolve provided name into valid Solana address =(\");\n/**\n * Fn to resolve text into Solana wallet Public Key,\n * For now it resolves Solana Domain Names.\n * If Solana address passed it is validated and send back.\n *\n * Throw error if input text can't be resolved and validated.\n */\nvar resolveToWalletAddress = function (_a) {\n    var rawText = _a.text, _b = _a.connection, connection = _b === void 0 ? (0, utils_1.createConnectionConfig)() : _b;\n    return __awaiter(void 0, void 0, void 0, function () {\n        var input, isValidSolana, inputLowerCased, isSolDamain, domainName, inputDomainKey, registry, owner;\n        var _c, _d, _e, _f;\n        return __generator(this, function (_g) {\n            switch (_g.label) {\n                case 0:\n                    input = (_c = rawText === null || rawText === void 0 ? void 0 : rawText.trim) === null || _c === void 0 ? void 0 : _c.call(rawText);\n                    // throw and error if input is not provided\n                    if (!input) {\n                        return [2 /*return*/, Promise.reject(errorCantResolve)];\n                    }\n                    isValidSolana = (0, utils_1.isValidSolanaAddress)(input);\n                    if (isValidSolana) {\n                        return [2 /*return*/, Promise.resolve(input)];\n                    }\n                    inputLowerCased = input === null || input === void 0 ? void 0 : input.toLowerCase();\n                    isSolDamain = (_d = inputLowerCased === null || inputLowerCased === void 0 ? void 0 : inputLowerCased.endsWith) === null || _d === void 0 ? void 0 : _d.call(inputLowerCased, \".sol\");\n                    if (!isSolDamain) return [3 /*break*/, 3];\n                    domainName = inputLowerCased.split(\".sol\")[0];\n                    return [4 /*yield*/, (0, exports.getInputKey)(domainName)];\n                case 1:\n                    inputDomainKey = (_g.sent()).inputDomainKey;\n                    return [4 /*yield*/, spl_name_service_1.NameRegistryState.retrieve(connection, inputDomainKey)];\n                case 2:\n                    registry = _g.sent();\n                    owner = (_f = (_e = registry === null || registry === void 0 ? void 0 : registry.owner) === null || _e === void 0 ? void 0 : _e.toBase58) === null || _f === void 0 ? void 0 : _f.call(_e);\n                    if (owner) {\n                        return [2 /*return*/, Promise.resolve(owner)];\n                    }\n                    _g.label = 3;\n                case 3: \n                // throw error if had no luck get valid Solana address\n                return [2 /*return*/, Promise.reject(errorCantResolve)];\n            }\n        });\n    });\n};\nexports.resolveToWalletAddress = resolveToWalletAddress;\n//# sourceMappingURL=resolveToWalletAddress.js.map"]},"metadata":{},"sourceType":"script"}