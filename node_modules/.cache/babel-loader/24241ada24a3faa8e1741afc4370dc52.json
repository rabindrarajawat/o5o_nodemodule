{"ast":null,"code":"import { u8 } from '@solana/buffer-layout';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionTypeError } from '../errors.js';\nimport { decodeAmountToUiAmountInstruction } from './amountToUiAmount.js';\nimport { decodeApproveInstruction } from './approve.js';\nimport { decodeApproveCheckedInstruction } from './approveChecked.js';\nimport { decodeBurnInstruction } from './burn.js';\nimport { decodeBurnCheckedInstruction } from './burnChecked.js';\nimport { decodeCloseAccountInstruction } from './closeAccount.js';\nimport { decodeFreezeAccountInstruction } from './freezeAccount.js';\nimport { decodeInitializeAccountInstruction } from './initializeAccount.js';\nimport { decodeInitializeAccount2Instruction } from './initializeAccount2.js';\nimport { decodeInitializeAccount3Instruction } from './initializeAccount3.js';\nimport { decodeInitializeMintInstruction } from './initializeMint.js';\nimport { decodeInitializeMint2Instruction } from './initializeMint2.js';\nimport { decodeInitializeMultisigInstruction } from './initializeMultisig.js';\nimport { decodeMintToInstruction } from './mintTo.js';\nimport { decodeMintToCheckedInstruction } from './mintToChecked.js';\nimport { decodeRevokeInstruction } from './revoke.js';\nimport { decodeSetAuthorityInstruction } from './setAuthority.js';\nimport { decodeSyncNativeInstruction } from './syncNative.js';\nimport { decodeThawAccountInstruction } from './thawAccount.js';\nimport { decodeTransferInstruction } from './transfer.js';\nimport { decodeTransferCheckedInstruction } from './transferChecked.js';\nimport { TokenInstruction } from './types.js';\nimport { decodeUiAmountToAmountInstruction } from './uiAmountToAmount.js';\n/** TODO: docs */\n\nexport function decodeInstruction(instruction) {\n  let programId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TOKEN_PROGRAM_ID;\n  if (!instruction.data.length) throw new TokenInvalidInstructionDataError();\n  const type = u8().decode(instruction.data);\n  if (type === TokenInstruction.InitializeMint) return decodeInitializeMintInstruction(instruction, programId);\n  if (type === TokenInstruction.InitializeAccount) return decodeInitializeAccountInstruction(instruction, programId);\n  if (type === TokenInstruction.InitializeMultisig) return decodeInitializeMultisigInstruction(instruction, programId);\n  if (type === TokenInstruction.Transfer) return decodeTransferInstruction(instruction, programId);\n  if (type === TokenInstruction.Approve) return decodeApproveInstruction(instruction, programId);\n  if (type === TokenInstruction.Revoke) return decodeRevokeInstruction(instruction, programId);\n  if (type === TokenInstruction.SetAuthority) return decodeSetAuthorityInstruction(instruction, programId);\n  if (type === TokenInstruction.MintTo) return decodeMintToInstruction(instruction, programId);\n  if (type === TokenInstruction.Burn) return decodeBurnInstruction(instruction, programId);\n  if (type === TokenInstruction.CloseAccount) return decodeCloseAccountInstruction(instruction, programId);\n  if (type === TokenInstruction.FreezeAccount) return decodeFreezeAccountInstruction(instruction, programId);\n  if (type === TokenInstruction.ThawAccount) return decodeThawAccountInstruction(instruction, programId);\n  if (type === TokenInstruction.TransferChecked) return decodeTransferCheckedInstruction(instruction, programId);\n  if (type === TokenInstruction.ApproveChecked) return decodeApproveCheckedInstruction(instruction, programId);\n  if (type === TokenInstruction.MintToChecked) return decodeMintToCheckedInstruction(instruction, programId);\n  if (type === TokenInstruction.BurnChecked) return decodeBurnCheckedInstruction(instruction, programId);\n  if (type === TokenInstruction.InitializeAccount2) return decodeInitializeAccount2Instruction(instruction, programId);\n  if (type === TokenInstruction.SyncNative) return decodeSyncNativeInstruction(instruction, programId);\n  if (type === TokenInstruction.InitializeAccount3) return decodeInitializeAccount3Instruction(instruction, programId);\n  if (type === TokenInstruction.InitializeMint2) return decodeInitializeMint2Instruction(instruction, programId);\n  if (type === TokenInstruction.AmountToUiAmount) return decodeAmountToUiAmountInstruction(instruction, programId);\n  if (type === TokenInstruction.UiAmountToAmount) return decodeUiAmountToAmountInstruction(instruction, programId); // TODO: implement\n\n  if (type === TokenInstruction.InitializeMultisig2) throw new TokenInvalidInstructionTypeError();\n  throw new TokenInvalidInstructionTypeError();\n}\n/** TODO: docs */\n\nexport function isInitializeMintInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.InitializeMint;\n}\n/** TODO: docs */\n\nexport function isInitializeAccountInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.InitializeAccount;\n}\n/** TODO: docs */\n\nexport function isInitializeMultisigInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.InitializeMultisig;\n}\n/** TODO: docs */\n\nexport function isTransferInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.Transfer;\n}\n/** TODO: docs */\n\nexport function isApproveInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.Approve;\n}\n/** TODO: docs */\n\nexport function isRevokeInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.Revoke;\n}\n/** TODO: docs */\n\nexport function isSetAuthorityInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.SetAuthority;\n}\n/** TODO: docs */\n\nexport function isMintToInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.MintTo;\n}\n/** TODO: docs */\n\nexport function isBurnInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.Burn;\n}\n/** TODO: docs */\n\nexport function isCloseAccountInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.CloseAccount;\n}\n/** TODO: docs */\n\nexport function isFreezeAccountInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.FreezeAccount;\n}\n/** TODO: docs */\n\nexport function isThawAccountInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.ThawAccount;\n}\n/** TODO: docs */\n\nexport function isTransferCheckedInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.TransferChecked;\n}\n/** TODO: docs */\n\nexport function isApproveCheckedInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.ApproveChecked;\n}\n/** TODO: docs */\n\nexport function isMintToCheckedInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.MintToChecked;\n}\n/** TODO: docs */\n\nexport function isBurnCheckedInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.BurnChecked;\n}\n/** TODO: docs */\n\nexport function isInitializeAccount2Instruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.InitializeAccount2;\n}\n/** TODO: docs */\n\nexport function isSyncNativeInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.SyncNative;\n}\n/** TODO: docs */\n\nexport function isInitializeAccount3Instruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.InitializeAccount3;\n}\n/** TODO: docs, implement */\n// export function isInitializeMultisig2Instruction(\n//     decoded: DecodedInstruction\n// ): decoded is DecodedInitializeMultisig2Instruction {\n//     return decoded.data.instruction === TokenInstruction.InitializeMultisig2;\n// }\n\n/** TODO: docs */\n\nexport function isInitializeMint2Instruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.InitializeMint2;\n}\n/** TODO: docs */\n\nexport function isAmountToUiAmountInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.AmountToUiAmount;\n}\n/** TODO: docs */\n\nexport function isUiamountToAmountInstruction(decoded) {\n  return decoded.data.instruction === TokenInstruction.UiAmountToAmount;\n}","map":{"version":3,"sources":["../../../src/instructions/decode.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { u8 } from '@solana/buffer-layout';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionTypeError } from '../errors.js';\nimport { decodeAmountToUiAmountInstruction } from './amountToUiAmount.js';\nimport { decodeApproveInstruction } from './approve.js';\nimport { decodeApproveCheckedInstruction } from './approveChecked.js';\nimport { decodeBurnInstruction } from './burn.js';\nimport { decodeBurnCheckedInstruction } from './burnChecked.js';\nimport { decodeCloseAccountInstruction } from './closeAccount.js';\nimport { decodeFreezeAccountInstruction } from './freezeAccount.js';\nimport { decodeInitializeAccountInstruction } from './initializeAccount.js';\nimport { decodeInitializeAccount2Instruction } from './initializeAccount2.js';\nimport { decodeInitializeAccount3Instruction } from './initializeAccount3.js';\nimport { decodeInitializeMintInstruction } from './initializeMint.js';\nimport { decodeInitializeMint2Instruction } from './initializeMint2.js';\nimport { decodeInitializeMultisigInstruction } from './initializeMultisig.js';\nimport { decodeMintToInstruction } from './mintTo.js';\nimport { decodeMintToCheckedInstruction } from './mintToChecked.js';\nimport { decodeRevokeInstruction } from './revoke.js';\nimport { decodeSetAuthorityInstruction } from './setAuthority.js';\nimport { decodeSyncNativeInstruction } from './syncNative.js';\nimport { decodeThawAccountInstruction } from './thawAccount.js';\nimport { decodeTransferInstruction } from './transfer.js';\nimport { decodeTransferCheckedInstruction } from './transferChecked.js';\nimport { TokenInstruction } from './types.js';\nimport { decodeUiAmountToAmountInstruction } from './uiAmountToAmount.js';\n/** TODO: docs */\nexport function decodeInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.data.length)\n        throw new TokenInvalidInstructionDataError();\n    const type = u8().decode(instruction.data);\n    if (type === TokenInstruction.InitializeMint)\n        return decodeInitializeMintInstruction(instruction, programId);\n    if (type === TokenInstruction.InitializeAccount)\n        return decodeInitializeAccountInstruction(instruction, programId);\n    if (type === TokenInstruction.InitializeMultisig)\n        return decodeInitializeMultisigInstruction(instruction, programId);\n    if (type === TokenInstruction.Transfer)\n        return decodeTransferInstruction(instruction, programId);\n    if (type === TokenInstruction.Approve)\n        return decodeApproveInstruction(instruction, programId);\n    if (type === TokenInstruction.Revoke)\n        return decodeRevokeInstruction(instruction, programId);\n    if (type === TokenInstruction.SetAuthority)\n        return decodeSetAuthorityInstruction(instruction, programId);\n    if (type === TokenInstruction.MintTo)\n        return decodeMintToInstruction(instruction, programId);\n    if (type === TokenInstruction.Burn)\n        return decodeBurnInstruction(instruction, programId);\n    if (type === TokenInstruction.CloseAccount)\n        return decodeCloseAccountInstruction(instruction, programId);\n    if (type === TokenInstruction.FreezeAccount)\n        return decodeFreezeAccountInstruction(instruction, programId);\n    if (type === TokenInstruction.ThawAccount)\n        return decodeThawAccountInstruction(instruction, programId);\n    if (type === TokenInstruction.TransferChecked)\n        return decodeTransferCheckedInstruction(instruction, programId);\n    if (type === TokenInstruction.ApproveChecked)\n        return decodeApproveCheckedInstruction(instruction, programId);\n    if (type === TokenInstruction.MintToChecked)\n        return decodeMintToCheckedInstruction(instruction, programId);\n    if (type === TokenInstruction.BurnChecked)\n        return decodeBurnCheckedInstruction(instruction, programId);\n    if (type === TokenInstruction.InitializeAccount2)\n        return decodeInitializeAccount2Instruction(instruction, programId);\n    if (type === TokenInstruction.SyncNative)\n        return decodeSyncNativeInstruction(instruction, programId);\n    if (type === TokenInstruction.InitializeAccount3)\n        return decodeInitializeAccount3Instruction(instruction, programId);\n    if (type === TokenInstruction.InitializeMint2)\n        return decodeInitializeMint2Instruction(instruction, programId);\n    if (type === TokenInstruction.AmountToUiAmount)\n        return decodeAmountToUiAmountInstruction(instruction, programId);\n    if (type === TokenInstruction.UiAmountToAmount)\n        return decodeUiAmountToAmountInstruction(instruction, programId);\n    // TODO: implement\n    if (type === TokenInstruction.InitializeMultisig2)\n        throw new TokenInvalidInstructionTypeError();\n    throw new TokenInvalidInstructionTypeError();\n}\n/** TODO: docs */\nexport function isInitializeMintInstruction(decoded) {\n    return decoded.data.instruction === TokenInstruction.InitializeMint;\n}\n/** TODO: docs */\nexport function isInitializeAccountInstruction(decoded) {\n    return decoded.data.instruction === TokenInstruction.InitializeAccount;\n}\n/** TODO: docs */\nexport function isInitializeMultisigInstruction(decoded) {\n    return decoded.data.instruction === TokenInstruction.InitializeMultisig;\n}\n/** TODO: docs */\nexport function isTransferInstruction(decoded) {\n    return decoded.data.instruction === TokenInstruction.Transfer;\n}\n/** TODO: docs */\nexport function isApproveInstruction(decoded) {\n    return decoded.data.instruction === TokenInstruction.Approve;\n}\n/** TODO: docs */\nexport function isRevokeInstruction(decoded) {\n    return decoded.data.instruction === TokenInstruction.Revoke;\n}\n/** TODO: docs */\nexport function isSetAuthorityInstruction(decoded) {\n    return decoded.data.instruction === TokenInstruction.SetAuthority;\n}\n/** TODO: docs */\nexport function isMintToInstruction(decoded) {\n    return decoded.data.instruction === TokenInstruction.MintTo;\n}\n/** TODO: docs */\nexport function isBurnInstruction(decoded) {\n    return decoded.data.instruction === TokenInstruction.Burn;\n}\n/** TODO: docs */\nexport function isCloseAccountInstruction(decoded) {\n    return decoded.data.instruction === TokenInstruction.CloseAccount;\n}\n/** TODO: docs */\nexport function isFreezeAccountInstruction(decoded) {\n    return decoded.data.instruction === TokenInstruction.FreezeAccount;\n}\n/** TODO: docs */\nexport function isThawAccountInstruction(decoded) {\n    return decoded.data.instruction === TokenInstruction.ThawAccount;\n}\n/** TODO: docs */\nexport function isTransferCheckedInstruction(decoded) {\n    return decoded.data.instruction === TokenInstruction.TransferChecked;\n}\n/** TODO: docs */\nexport function isApproveCheckedInstruction(decoded) {\n    return decoded.data.instruction === TokenInstruction.ApproveChecked;\n}\n/** TODO: docs */\nexport function isMintToCheckedInstruction(decoded) {\n    return decoded.data.instruction === TokenInstruction.MintToChecked;\n}\n/** TODO: docs */\nexport function isBurnCheckedInstruction(decoded) {\n    return decoded.data.instruction === TokenInstruction.BurnChecked;\n}\n/** TODO: docs */\nexport function isInitializeAccount2Instruction(decoded) {\n    return decoded.data.instruction === TokenInstruction.InitializeAccount2;\n}\n/** TODO: docs */\nexport function isSyncNativeInstruction(decoded) {\n    return decoded.data.instruction === TokenInstruction.SyncNative;\n}\n/** TODO: docs */\nexport function isInitializeAccount3Instruction(decoded) {\n    return decoded.data.instruction === TokenInstruction.InitializeAccount3;\n}\n/** TODO: docs, implement */\n// export function isInitializeMultisig2Instruction(\n//     decoded: DecodedInstruction\n// ): decoded is DecodedInitializeMultisig2Instruction {\n//     return decoded.data.instruction === TokenInstruction.InitializeMultisig2;\n// }\n/** TODO: docs */\nexport function isInitializeMint2Instruction(decoded) {\n    return decoded.data.instruction === TokenInstruction.InitializeMint2;\n}\n/** TODO: docs */\nexport function isAmountToUiAmountInstruction(decoded) {\n    return decoded.data.instruction === TokenInstruction.AmountToUiAmount;\n}\n/** TODO: docs */\nexport function isUiamountToAmountInstruction(decoded) {\n    return decoded.data.instruction === TokenInstruction.UiAmountToAmount;\n}\n//# sourceMappingURL=decode.js.map"]},"metadata":{},"sourceType":"module"}