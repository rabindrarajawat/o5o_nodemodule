{"ast":null,"code":"import _cloneRegExp from \"./_cloneRegExp.js\";\nimport type from \"../type.js\";\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\n\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n\n      idx += 1;\n    }\n\n    refFrom[idx] = value;\n    refTo[idx] = copiedValue;\n\n    for (var key in value) {\n      if (value.hasOwnProperty(key)) {\n        copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n      }\n    }\n\n    return copiedValue;\n  };\n\n  switch (type(value)) {\n    case 'Object':\n      return copy(Object.create(Object.getPrototypeOf(value)));\n\n    case 'Array':\n      return copy([]);\n\n    case 'Date':\n      return new Date(value.valueOf());\n\n    case 'RegExp':\n      return _cloneRegExp(value);\n\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'BigInt64Array':\n    case 'BigUint64Array':\n      return value.slice();\n\n    default:\n      return value;\n  }\n}","map":{"version":3,"names":["_cloneRegExp","type","_clone","value","refFrom","refTo","deep","copy","copiedValue","len","length","idx","key","hasOwnProperty","Object","create","getPrototypeOf","Date","valueOf","slice"],"sources":["D:/software/o5o BNB/o5o-staking-frontend/node_modules/@civic/solana-gateway-react/node_modules/ramda/es/internal/_clone.js"],"sourcesContent":["import _cloneRegExp from \"./_cloneRegExp.js\";\nimport type from \"../type.js\";\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\n\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n\n      idx += 1;\n    }\n\n    refFrom[idx] = value;\n    refTo[idx] = copiedValue;\n\n    for (var key in value) {\n      if (value.hasOwnProperty(key)) {\n        copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n      }\n    }\n\n    return copiedValue;\n  };\n\n  switch (type(value)) {\n    case 'Object':\n      return copy(Object.create(Object.getPrototypeOf(value)));\n\n    case 'Array':\n      return copy([]);\n\n    case 'Date':\n      return new Date(value.valueOf());\n\n    case 'RegExp':\n      return _cloneRegExp(value);\n\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'BigInt64Array':\n    case 'BigUint64Array':\n      return value.slice();\n\n    default:\n      return value;\n  }\n}"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,mBAAzB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,OAAvB,EAAgCC,KAAhC,EAAuCC,IAAvC,EAA6C;EAC1D,IAAIC,IAAI,GAAG,SAASA,IAAT,CAAcC,WAAd,EAA2B;IACpC,IAAIC,GAAG,GAAGL,OAAO,CAACM,MAAlB;IACA,IAAIC,GAAG,GAAG,CAAV;;IAEA,OAAOA,GAAG,GAAGF,GAAb,EAAkB;MAChB,IAAIN,KAAK,KAAKC,OAAO,CAACO,GAAD,CAArB,EAA4B;QAC1B,OAAON,KAAK,CAACM,GAAD,CAAZ;MACD;;MAEDA,GAAG,IAAI,CAAP;IACD;;IAEDP,OAAO,CAACO,GAAD,CAAP,GAAeR,KAAf;IACAE,KAAK,CAACM,GAAD,CAAL,GAAaH,WAAb;;IAEA,KAAK,IAAII,GAAT,IAAgBT,KAAhB,EAAuB;MACrB,IAAIA,KAAK,CAACU,cAAN,CAAqBD,GAArB,CAAJ,EAA+B;QAC7BJ,WAAW,CAACI,GAAD,CAAX,GAAmBN,IAAI,GAAGJ,MAAM,CAACC,KAAK,CAACS,GAAD,CAAN,EAAaR,OAAb,EAAsBC,KAAtB,EAA6B,IAA7B,CAAT,GAA8CF,KAAK,CAACS,GAAD,CAA1E;MACD;IACF;;IAED,OAAOJ,WAAP;EACD,CAtBD;;EAwBA,QAAQP,IAAI,CAACE,KAAD,CAAZ;IACE,KAAK,QAAL;MACE,OAAOI,IAAI,CAACO,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACE,cAAP,CAAsBb,KAAtB,CAAd,CAAD,CAAX;;IAEF,KAAK,OAAL;MACE,OAAOI,IAAI,CAAC,EAAD,CAAX;;IAEF,KAAK,MAAL;MACE,OAAO,IAAIU,IAAJ,CAASd,KAAK,CAACe,OAAN,EAAT,CAAP;;IAEF,KAAK,QAAL;MACE,OAAOlB,YAAY,CAACG,KAAD,CAAnB;;IAEF,KAAK,WAAL;IACA,KAAK,YAAL;IACA,KAAK,mBAAL;IACA,KAAK,YAAL;IACA,KAAK,aAAL;IACA,KAAK,YAAL;IACA,KAAK,aAAL;IACA,KAAK,cAAL;IACA,KAAK,cAAL;IACA,KAAK,eAAL;IACA,KAAK,gBAAL;MACE,OAAOA,KAAK,CAACgB,KAAN,EAAP;;IAEF;MACE,OAAOhB,KAAP;EA3BJ;AA6BD"},"metadata":{},"sourceType":"module"}