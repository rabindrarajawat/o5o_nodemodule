{"ast":null,"code":"import { AuctionHouseBuildersClient } from './AuctionHouseBuildersClient.mjs';\nimport { AuctionHousePdasClient } from './AuctionHousePdasClient.mjs';\nimport { createBidOperation } from './operations/createBid.mjs';\nimport { directBuyOperation } from './operations/directBuy.mjs';\nimport { cancelBidOperation } from './operations/cancelBid.mjs';\nimport { cancelListingOperation } from './operations/cancelListing.mjs';\nimport { createAuctionHouseOperation } from './operations/createAuctionHouse.mjs';\nimport { depositToBuyerAccountOperation } from './operations/depositToBuyerAccount.mjs';\nimport { executeSaleOperation } from './operations/executeSale.mjs';\nimport { findAuctionHouseByAddressOperation } from './operations/findAuctionHouseByAddress.mjs';\nimport { findAuctionHouseByCreatorAndMintOperation } from './operations/findAuctionHouseByCreatorAndMint.mjs';\nimport { findBidByReceiptOperation } from './operations/findBidByReceipt.mjs';\nimport { findBidByTradeStateOperation } from './operations/findBidByTradeState.mjs';\nimport { findBidsOperation } from './operations/findBids.mjs';\nimport { findListingByTradeStateOperation } from './operations/findListingByTradeState.mjs';\nimport { findListingByReceiptOperation } from './operations/findListingByReceipt.mjs';\nimport { findListingsOperation } from './operations/findListings.mjs';\nimport { findPurchaseByTradeStateOperation } from './operations/findPurchaseByTradeState.mjs';\nimport { findPurchaseByReceiptOperation } from './operations/findPurchaseByReceipt.mjs';\nimport { findPurchasesOperation } from './operations/findPurchases.mjs';\nimport { getBuyerBalanceOperation } from './operations/getBuyerBalance.mjs';\nimport { createListingOperation } from './operations/createListing.mjs';\nimport { loadBidOperation } from './operations/loadBid.mjs';\nimport { loadListingOperation } from './operations/loadListing.mjs';\nimport { loadPurchaseOperation } from './operations/loadPurchase.mjs';\nimport { directSellOperation } from './operations/directSell.mjs';\nimport { updateAuctionHouseOperation } from './operations/updateAuctionHouse.mjs';\nimport { withdrawFromBuyerAccountOperation } from './operations/withdrawFromBuyerAccount.mjs';\nimport { withdrawFromFeeAccountOperation } from './operations/withdrawFromFeeAccount.mjs';\nimport { withdrawFromTreasuryAccountOperation } from './operations/withdrawFromTreasuryAccount.mjs';\n/**\n * This is a client for the Auction House module.\n *\n * It enables us to interact with the Auction House program in order to\n * create and update Auction House to configure a marketplace as well to allow\n * users to list, bid and execute sales.\n *\n * You may access this client via the `auctionHouse()` method of your `Metaplex` instance.\n *\n * ```ts\n * const auctionHouseClient = metaplex.auctionHouse();\n * ```\n *\n * @example\n * You can create a new Auction House with minimum input like so.\n * By default, the current identity of the Metaplex instance will be\n * the authority of the Auction House.\n *\n * ```ts\n * const { auctionHouse } = await metaplex\n *   .auctionHouse()\n *   .create({\n *     sellerFeeBasisPoints: 500, // 5% royalties\n *   };\n * ```\n *\n * @see {@link AuctionHouse} The `AuctionHouse` model\n * @group Modules\n */\n\nclass AuctionHouseClient {\n  constructor(metaplex) {\n    this.metaplex = metaplex;\n  }\n  /**\n   * You may use the `builders()` client to access the\n   * underlying Transaction Builders of this module.\n   *\n   * ```ts\n   * const buildersClient = metaplex.auctions().builders();\n   * ```\n   */\n\n\n  builders() {\n    return new AuctionHouseBuildersClient(this.metaplex);\n  }\n  /**\n   * You may use the `pdas()` client to build PDAs related to this module.\n   *\n   * ```ts\n   * const pdasClient = metaplex.auctionHouse().pdas();\n   * ```\n   */\n\n\n  pdas() {\n    return new AuctionHousePdasClient(this.metaplex);\n  }\n  /** {@inheritDoc createBidOperation} */\n\n\n  bid(input, options) {\n    return this.metaplex.operations().execute(createBidOperation(input), options);\n  }\n  /** {@inheritDoc buyOperation} */\n\n\n  buy(input, options) {\n    return this.metaplex.operations().execute(directBuyOperation(input), options);\n  }\n  /** {@inheritDoc cancelBidOperation} */\n\n\n  cancelBid(input, options) {\n    return this.metaplex.operations().execute(cancelBidOperation(input), options);\n  }\n  /** {@inheritDoc cancelListingOperation} */\n\n\n  cancelListing(input, options) {\n    return this.metaplex.operations().execute(cancelListingOperation(input), options);\n  }\n  /** {@inheritDoc createAuctionHouseOperation} */\n\n\n  create(input, options) {\n    return this.metaplex.operations().execute(createAuctionHouseOperation(input), options);\n  }\n  /** {@inheritDoc depositToBuyerAccountOperation} */\n\n\n  depositToBuyerAccount(input, options) {\n    return this.metaplex.operations().execute(depositToBuyerAccountOperation(input), options);\n  }\n  /** {@inheritDoc executeSaleOperation} */\n\n\n  executeSale(input, options) {\n    return this.metaplex.operations().execute(executeSaleOperation(input), options);\n  }\n  /** {@inheritDoc findAuctionHouseByAddressOperation} */\n\n\n  findByAddress(input, options) {\n    return this.metaplex.operations().execute(findAuctionHouseByAddressOperation(input), options);\n  }\n  /** {@inheritDoc findAuctionHouseByCreatorAndMintOperation} */\n\n\n  findByCreatorAndMint(input, options) {\n    return this.metaplex.operations().execute(findAuctionHouseByCreatorAndMintOperation(input), options);\n  }\n  /** {@inheritDoc findBidByReceiptOperation} */\n\n\n  findBidByReceipt(input, options) {\n    return this.metaplex.operations().execute(findBidByReceiptOperation(input), options);\n  }\n  /** {@inheritDoc findBidByTradeStateOperation} */\n\n\n  findBidByTradeState(input, options) {\n    return this.metaplex.operations().execute(findBidByTradeStateOperation(input), options);\n  }\n  /** {@inheritDoc findBidsOperation} */\n\n\n  findBids(input, options) {\n    return this.metaplex.operations().execute(findBidsOperation(input), options);\n  }\n  /** {@inheritDoc findListingByTradeStateOperation} */\n\n\n  findListingByTradeState(input, options) {\n    return this.metaplex.operations().execute(findListingByTradeStateOperation(input), options);\n  }\n  /** {@inheritDoc findListingByReceiptOperation} */\n\n\n  findListingByReceipt(input, options) {\n    return this.metaplex.operations().execute(findListingByReceiptOperation(input), options);\n  }\n  /** {@inheritDoc findListingsOperation} */\n\n\n  findListings(input, options) {\n    return this.metaplex.operations().execute(findListingsOperation(input), options);\n  }\n  /** {@inheritDoc findPurchaseByTradeStateOperation} */\n\n\n  findPurchaseByTradeState(input, options) {\n    return this.metaplex.operations().execute(findPurchaseByTradeStateOperation(input), options);\n  }\n  /** {@inheritDoc findPurchaseByReceiptOperation} */\n\n\n  findPurchaseByReceipt(input, options) {\n    return this.metaplex.operations().execute(findPurchaseByReceiptOperation(input), options);\n  }\n  /** {@inheritDoc findPurchasesOperation} */\n\n\n  findPurchases(input, options) {\n    return this.metaplex.operations().execute(findPurchasesOperation(input), options);\n  }\n  /** {@inheritDoc getBuyerBalanceOperation} */\n\n\n  getBuyerBalance(input, options) {\n    return this.metaplex.operations().execute(getBuyerBalanceOperation(input), options);\n  }\n  /** {@inheritDoc createListingOperation} */\n\n\n  list(input, options) {\n    return this.metaplex.operations().execute(createListingOperation(input), options);\n  }\n  /** {@inheritDoc loadBidOperation} */\n\n\n  loadBid(input, options) {\n    return this.metaplex.operations().execute(loadBidOperation(input), options);\n  }\n  /** {@inheritDoc loadListingOperation} */\n\n\n  loadListing(input, options) {\n    return this.metaplex.operations().execute(loadListingOperation(input), options);\n  }\n  /** {@inheritDoc loadPurchaseOperation} */\n\n\n  loadPurchase(input, options) {\n    return this.metaplex.operations().execute(loadPurchaseOperation(input), options);\n  }\n  /** {@inheritDoc saleOperation} */\n\n\n  sell(input, options) {\n    return this.metaplex.operations().execute(directSellOperation(input), options);\n  }\n  /** {@inheritDoc updateAuctionHouseOperation} */\n\n\n  update(input, options) {\n    return this.metaplex.operations().execute(updateAuctionHouseOperation(input), options);\n  }\n  /** {@inheritDoc withdrawFromBuyerAccountOperation} */\n\n\n  withdrawFromBuyerAccount(input, options) {\n    return this.metaplex.operations().execute(withdrawFromBuyerAccountOperation(input), options);\n  }\n  /** {@inheritDoc withdrawFromFeeAccountOperation} */\n\n\n  withdrawFromFeeAccount(input, options) {\n    return this.metaplex.operations().execute(withdrawFromFeeAccountOperation(input), options);\n  }\n  /** {@inheritDoc withdrawFromTreasuryAccountOperation} */\n\n\n  withdrawFromTreasuryAccount(input, options) {\n    return this.metaplex.operations().execute(withdrawFromTreasuryAccountOperation(input), options);\n  }\n\n}\n\nexport { AuctionHouseClient };","map":{"version":3,"sources":["../../../../src/plugins/auctionHouseModule/AuctionHouseClient.ts"],"names":["AuctionHouseClient","constructor","metaplex","builders","AuctionHouseBuildersClient","pdas","AuctionHousePdasClient","bid","input","options","operations","execute","createBidOperation","buy","directBuyOperation","cancelBid","cancelBidOperation","cancelListing","cancelListingOperation","create","createAuctionHouseOperation","depositToBuyerAccount","depositToBuyerAccountOperation","executeSale","executeSaleOperation","findByAddress","findAuctionHouseByAddressOperation","findByCreatorAndMint","findAuctionHouseByCreatorAndMintOperation","findBidByReceipt","findBidByReceiptOperation","findBidByTradeState","findBidByTradeStateOperation","findBids","findBidsOperation","findListingByTradeState","findListingByTradeStateOperation","findListingByReceipt","findListingByReceiptOperation","findListings","findListingsOperation","findPurchaseByTradeState","findPurchaseByTradeStateOperation","findPurchaseByReceipt","findPurchaseByReceiptOperation","findPurchases","findPurchasesOperation","getBuyerBalance","getBuyerBalanceOperation","list","createListingOperation","loadBid","loadBidOperation","loadListing","loadListingOperation","loadPurchase","loadPurchaseOperation","sell","directSellOperation","update","updateAuctionHouseOperation","withdrawFromBuyerAccount","withdrawFromBuyerAccountOperation","withdrawFromFeeAccount","withdrawFromFeeAccountOperation","withdrawFromTreasuryAccount","withdrawFromTreasuryAccountOperation"],"mappings":"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","sourcesContent":["import { AuctionHouseBuildersClient } from './AuctionHouseBuildersClient';\nimport {\n  CancelBidInput,\n  cancelBidOperation,\n  CancelListingInput,\n  cancelListingOperation,\n  CreateAuctionHouseInput,\n  createAuctionHouseOperation,\n  CreateBidInput,\n  createBidOperation,\n  CreateListingInput,\n  createListingOperation,\n  DepositToBuyerAccountInput,\n  depositToBuyerAccountOperation,\n  DirectBuyInput,\n  directBuyOperation,\n  DirectSellInput,\n  directSellOperation,\n  ExecuteSaleInput,\n  executeSaleOperation,\n  FindAuctionHouseByAddressInput,\n  findAuctionHouseByAddressOperation,\n  FindAuctionHouseByCreatorAndMintInput,\n  findAuctionHouseByCreatorAndMintOperation,\n  FindBidByReceiptInput,\n  findBidByReceiptOperation,\n  FindBidByTradeStateInput,\n  findBidByTradeStateOperation,\n  FindBidsInput,\n  findBidsOperation,\n  FindListingByReceiptInput,\n  findListingByReceiptOperation,\n  FindListingByTradeStateInput,\n  findListingByTradeStateOperation,\n  FindListingsInput,\n  findListingsOperation,\n  FindPurchaseByReceiptInput,\n  findPurchaseByReceiptOperation,\n  FindPurchaseByTradeStateInput,\n  findPurchaseByTradeStateOperation,\n  FindPurchasesInput,\n  findPurchasesOperation,\n  GetBuyerBalanceInput,\n  getBuyerBalanceOperation,\n  LoadBidInput,\n  loadBidOperation,\n  LoadListingInput,\n  loadListingOperation,\n  LoadPurchaseInput,\n  loadPurchaseOperation,\n  UpdateAuctionHouseInput,\n  updateAuctionHouseOperation,\n  WithdrawFromBuyerAccountInput,\n  withdrawFromBuyerAccountOperation,\n  WithdrawFromFeeAccountInput,\n  withdrawFromFeeAccountOperation,\n  WithdrawFromTreasuryAccountInput,\n  withdrawFromTreasuryAccountOperation,\n} from './operations';\nimport { AuctionHousePdasClient } from './AuctionHousePdasClient';\nimport type { Metaplex } from '@/Metaplex';\nimport { OperationOptions } from '@/types';\n\n/**\n * This is a client for the Auction House module.\n *\n * It enables us to interact with the Auction House program in order to\n * create and update Auction House to configure a marketplace as well to allow\n * users to list, bid and execute sales.\n *\n * You may access this client via the `auctionHouse()` method of your `Metaplex` instance.\n *\n * ```ts\n * const auctionHouseClient = metaplex.auctionHouse();\n * ```\n *\n * @example\n * You can create a new Auction House with minimum input like so.\n * By default, the current identity of the Metaplex instance will be\n * the authority of the Auction House.\n *\n * ```ts\n * const { auctionHouse } = await metaplex\n *   .auctionHouse()\n *   .create({\n *     sellerFeeBasisPoints: 500, // 5% royalties\n *   };\n * ```\n *\n * @see {@link AuctionHouse} The `AuctionHouse` model\n * @group Modules\n */\nexport class AuctionHouseClient {\n  constructor(protected readonly metaplex: Metaplex) {}\n\n  /**\n   * You may use the `builders()` client to access the\n   * underlying Transaction Builders of this module.\n   *\n   * ```ts\n   * const buildersClient = metaplex.auctions().builders();\n   * ```\n   */\n  builders() {\n    return new AuctionHouseBuildersClient(this.metaplex);\n  }\n\n  /**\n   * You may use the `pdas()` client to build PDAs related to this module.\n   *\n   * ```ts\n   * const pdasClient = metaplex.auctionHouse().pdas();\n   * ```\n   */\n  pdas() {\n    return new AuctionHousePdasClient(this.metaplex);\n  }\n\n  /** {@inheritDoc createBidOperation} */\n  bid(input: CreateBidInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(createBidOperation(input), options);\n  }\n\n  /** {@inheritDoc buyOperation} */\n  buy(input: DirectBuyInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(directBuyOperation(input), options);\n  }\n\n  /** {@inheritDoc cancelBidOperation} */\n  cancelBid(input: CancelBidInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(cancelBidOperation(input), options);\n  }\n\n  /** {@inheritDoc cancelListingOperation} */\n  cancelListing(input: CancelListingInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(cancelListingOperation(input), options);\n  }\n\n  /** {@inheritDoc createAuctionHouseOperation} */\n  create(input: CreateAuctionHouseInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(createAuctionHouseOperation(input), options);\n  }\n\n  /** {@inheritDoc depositToBuyerAccountOperation} */\n  depositToBuyerAccount(\n    input: DepositToBuyerAccountInput,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(depositToBuyerAccountOperation(input), options);\n  }\n\n  /** {@inheritDoc executeSaleOperation} */\n  executeSale(input: ExecuteSaleInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(executeSaleOperation(input), options);\n  }\n\n  /** {@inheritDoc findAuctionHouseByAddressOperation} */\n  findByAddress(\n    input: FindAuctionHouseByAddressInput,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(findAuctionHouseByAddressOperation(input), options);\n  }\n\n  /** {@inheritDoc findAuctionHouseByCreatorAndMintOperation} */\n  findByCreatorAndMint(\n    input: FindAuctionHouseByCreatorAndMintInput,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(findAuctionHouseByCreatorAndMintOperation(input), options);\n  }\n\n  /** {@inheritDoc findBidByReceiptOperation} */\n  findBidByReceipt(input: FindBidByReceiptInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(findBidByReceiptOperation(input), options);\n  }\n\n  /** {@inheritDoc findBidByTradeStateOperation} */\n  findBidByTradeState(\n    input: FindBidByTradeStateInput,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(findBidByTradeStateOperation(input), options);\n  }\n\n  /** {@inheritDoc findBidsOperation} */\n  findBids(input: FindBidsInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(findBidsOperation(input), options);\n  }\n\n  /** {@inheritDoc findListingByTradeStateOperation} */\n  findListingByTradeState(\n    input: FindListingByTradeStateInput,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(findListingByTradeStateOperation(input), options);\n  }\n\n  /** {@inheritDoc findListingByReceiptOperation} */\n  findListingByReceipt(\n    input: FindListingByReceiptInput,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(findListingByReceiptOperation(input), options);\n  }\n\n  /** {@inheritDoc findListingsOperation} */\n  findListings(input: FindListingsInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(findListingsOperation(input), options);\n  }\n\n  /** {@inheritDoc findPurchaseByTradeStateOperation} */\n  findPurchaseByTradeState(\n    input: FindPurchaseByTradeStateInput,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(findPurchaseByTradeStateOperation(input), options);\n  }\n\n  /** {@inheritDoc findPurchaseByReceiptOperation} */\n  findPurchaseByReceipt(\n    input: FindPurchaseByReceiptInput,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(findPurchaseByReceiptOperation(input), options);\n  }\n\n  /** {@inheritDoc findPurchasesOperation} */\n  findPurchases(input: FindPurchasesInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(findPurchasesOperation(input), options);\n  }\n\n  /** {@inheritDoc getBuyerBalanceOperation} */\n  getBuyerBalance(input: GetBuyerBalanceInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(getBuyerBalanceOperation(input), options);\n  }\n\n  /** {@inheritDoc createListingOperation} */\n  list(input: CreateListingInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(createListingOperation(input), options);\n  }\n\n  /** {@inheritDoc loadBidOperation} */\n  loadBid(input: LoadBidInput, options?: OperationOptions) {\n    return this.metaplex.operations().execute(loadBidOperation(input), options);\n  }\n\n  /** {@inheritDoc loadListingOperation} */\n  loadListing(input: LoadListingInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(loadListingOperation(input), options);\n  }\n\n  /** {@inheritDoc loadPurchaseOperation} */\n  loadPurchase(input: LoadPurchaseInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(loadPurchaseOperation(input), options);\n  }\n\n  /** {@inheritDoc saleOperation} */\n  sell(input: DirectSellInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(directSellOperation(input), options);\n  }\n\n  /** {@inheritDoc updateAuctionHouseOperation} */\n  update(input: UpdateAuctionHouseInput, options?: OperationOptions) {\n    return this.metaplex\n      .operations()\n      .execute(updateAuctionHouseOperation(input), options);\n  }\n\n  /** {@inheritDoc withdrawFromBuyerAccountOperation} */\n  withdrawFromBuyerAccount(\n    input: WithdrawFromBuyerAccountInput,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(withdrawFromBuyerAccountOperation(input), options);\n  }\n\n  /** {@inheritDoc withdrawFromFeeAccountOperation} */\n  withdrawFromFeeAccount(\n    input: WithdrawFromFeeAccountInput,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(withdrawFromFeeAccountOperation(input), options);\n  }\n\n  /** {@inheritDoc withdrawFromTreasuryAccountOperation} */\n  withdrawFromTreasuryAccount(\n    input: WithdrawFromTreasuryAccountInput,\n    options?: OperationOptions\n  ) {\n    return this.metaplex\n      .operations()\n      .execute(withdrawFromTreasuryAccountOperation(input), options);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}