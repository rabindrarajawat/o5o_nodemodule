{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst react_1 = require(\"react\");\n\nconst logger_1 = __importDefault(require(\"../logger\"));\n\nconst useWalletHooks_1 = __importDefault(require(\"./useWalletHooks\"));\n\nconst useGatekeeper = (_ref, state, dispatch) => {\n  let {\n    wallet: wallet,\n    stage: stage,\n    gatekeeperClient: gatekeeperClient\n  } = _ref;\n  const {\n    expectWalletConnected: expectWalletConnected\n  } = (0, useWalletHooks_1.default)(wallet, state, dispatch);\n  const {\n    gatekeeperNetworkAddress: gatekeeperNetworkAddress,\n    ownerSigns: ownerSigns\n  } = state;\n  /**\n   * if a request is not already in progress, initiate a request to the gatekeeper for a new token\n   * and dispatch an event so we know it's in progress\n   */\n\n  const waitForGatekeeperIssuanceRequest = (0, react_1.useCallback)( // eslint-disable-next-line @typescript-eslint/no-shadow\n  async _ref2 => {\n    let {\n      payload: payload,\n      proof: proof\n    } = _ref2;\n    const connectedWallet = expectWalletConnected();\n    logger_1.default.debug('waitForGatekeeperIssuanceRequest ready to call requestGatewayTokenFromGatekeeper', {\n      payload: payload\n    });\n    dispatch({\n      type: 'requestGatekeeperIssuance'\n    });\n    const requestGatewayTokenFromGatekeeperResult = await gatekeeperClient().requestGatewayTokenFromGatekeeper({\n      wallet: connectedWallet,\n      payload: payload,\n      proof: proof,\n      ownerSigns: ownerSigns !== null && ownerSigns !== void 0 ? ownerSigns : false\n    });\n    logger_1.default.debug('requestGatewayTokenFromGatekeeperResult', requestGatewayTokenFromGatekeeperResult);\n\n    if (requestGatewayTokenFromGatekeeperResult.status >= 400) {\n      logger_1.default.error('Error requesting token from gatekeeper');\n      dispatch({\n        type: 'requestGatekeeperIssuanceFailed'\n      });\n      throw new Error('Error requesting token from gatekeeper');\n    }\n\n    const {\n      transaction: transaction\n    } = requestGatewayTokenFromGatekeeperResult;\n    logger_1.default.debug('Successfully requested gatekeeper token');\n    dispatch({\n      type: 'requestGatekeeperIssuanceComplete',\n      gatewayTokenTransaction: transaction\n    });\n    return transaction;\n  }, [gatekeeperClient, expectWalletConnected, stage, ownerSigns]);\n  /**\n   * Update the state when the Gatekeeper network changes\n   */\n\n  (0, react_1.useEffect)(() => {\n    if (wallet && wallet.publicKey && gatekeeperNetworkAddress) {\n      dispatch({\n        type: 'gatekeeperNetworkChanged',\n        gatekeeperNetworkAddress: gatekeeperNetworkAddress\n      });\n    }\n  }, [gatekeeperNetworkAddress]);\n  return {\n    waitForGatekeeperIssuanceRequest: waitForGatekeeperIssuanceRequest,\n    gatekeeperClient: gatekeeperClient\n  };\n};\n\nexports.default = useGatekeeper;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","react_1","require","logger_1","useWalletHooks_1","useGatekeeper","state","dispatch","wallet","stage","gatekeeperClient","expectWalletConnected","default","gatekeeperNetworkAddress","ownerSigns","waitForGatekeeperIssuanceRequest","useCallback","payload","proof","connectedWallet","debug","type","requestGatewayTokenFromGatekeeperResult","requestGatewayTokenFromGatekeeper","status","error","Error","transaction","gatewayTokenTransaction","useEffect","publicKey"],"sources":["D:/software/o5o BNB/o5o-staking-frontend/node_modules/@civic/common-gateway-react/dist/esm/useHooks/useGatekeeper.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = require(\"react\");\nconst logger_1 = __importDefault(require(\"../logger\"));\nconst useWalletHooks_1 = __importDefault(require(\"./useWalletHooks\"));\nconst useGatekeeper = ({ wallet, stage, gatekeeperClient, }, state, dispatch) => {\n    const { expectWalletConnected } = (0, useWalletHooks_1.default)(wallet, state, dispatch);\n    const { gatekeeperNetworkAddress, ownerSigns } = state;\n    /**\n     * if a request is not already in progress, initiate a request to the gatekeeper for a new token\n     * and dispatch an event so we know it's in progress\n     */\n    const waitForGatekeeperIssuanceRequest = (0, react_1.useCallback)(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    async ({ payload, proof }) => {\n        const connectedWallet = expectWalletConnected();\n        logger_1.default.debug('waitForGatekeeperIssuanceRequest ready to call requestGatewayTokenFromGatekeeper', {\n            payload,\n        });\n        dispatch({ type: 'requestGatekeeperIssuance' });\n        const requestGatewayTokenFromGatekeeperResult = await gatekeeperClient().requestGatewayTokenFromGatekeeper({\n            wallet: connectedWallet,\n            payload,\n            proof,\n            ownerSigns: ownerSigns !== null && ownerSigns !== void 0 ? ownerSigns : false,\n        });\n        logger_1.default.debug('requestGatewayTokenFromGatekeeperResult', requestGatewayTokenFromGatekeeperResult);\n        if (requestGatewayTokenFromGatekeeperResult.status >= 400) {\n            logger_1.default.error('Error requesting token from gatekeeper');\n            dispatch({ type: 'requestGatekeeperIssuanceFailed' });\n            throw new Error('Error requesting token from gatekeeper');\n        }\n        const { transaction } = requestGatewayTokenFromGatekeeperResult;\n        logger_1.default.debug('Successfully requested gatekeeper token');\n        dispatch({ type: 'requestGatekeeperIssuanceComplete', gatewayTokenTransaction: transaction });\n        return transaction;\n    }, [gatekeeperClient, expectWalletConnected, stage, ownerSigns]);\n    /**\n     * Update the state when the Gatekeeper network changes\n     */\n    (0, react_1.useEffect)(() => {\n        if (wallet && wallet.publicKey && gatekeeperNetworkAddress) {\n            dispatch({ type: 'gatekeeperNetworkChanged', gatekeeperNetworkAddress });\n        }\n    }, [gatekeeperNetworkAddress]);\n    return {\n        waitForGatekeeperIssuanceRequest,\n        gatekeeperClient,\n    };\n};\nexports.default = useGatekeeper;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}