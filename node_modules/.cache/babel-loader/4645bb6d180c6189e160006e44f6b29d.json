{"ast":null,"code":"var __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _RegisterWalletEvent_detail;\n/**\n * Register a {@link \"@wallet-standard/base\".Wallet} as a Standard Wallet with the app.\n *\n * This dispatches a {@link \"@wallet-standard/base\".WindowRegisterWalletEvent} to notify the app that the Wallet is\n * ready to be registered.\n *\n * This also adds a listener for {@link \"@wallet-standard/base\".WindowAppReadyEvent} to listen for a notification from\n * the app that the app is ready to register the Wallet.\n *\n * This combination of event dispatch and listener guarantees that the Wallet will be registered synchronously as soon\n * as the app is ready whether the Wallet loads before or after the app.\n *\n * @param wallet Wallet to register.\n *\n * @group Wallet\n */\n\n\nexport function registerWallet(wallet) {\n  const callback = _ref => {\n    let {\n      register: register\n    } = _ref;\n    return register(wallet);\n  };\n\n  try {\n    window.dispatchEvent(new RegisterWalletEvent(callback));\n  } catch (error) {\n    console.error('wallet-standard:register-wallet event could not be dispatched\\n', error);\n  }\n\n  try {\n    window.addEventListener('wallet-standard:app-ready', _ref2 => {\n      let {\n        detail: api\n      } = _ref2;\n      return callback(api);\n    });\n  } catch (error) {\n    console.error('wallet-standard:app-ready event listener could not be added\\n', error);\n  }\n}\n\nclass RegisterWalletEvent extends Event {\n  constructor(callback) {\n    super('wallet-standard:register-wallet', {\n      bubbles: false,\n      cancelable: false,\n      composed: false\n    });\n\n    _RegisterWalletEvent_detail.set(this, void 0);\n\n    __classPrivateFieldSet(this, _RegisterWalletEvent_detail, callback, \"f\");\n  }\n\n  get detail() {\n    return __classPrivateFieldGet(this, _RegisterWalletEvent_detail, \"f\");\n  }\n\n  get type() {\n    return 'wallet-standard:register-wallet';\n  }\n  /** @deprecated */\n\n\n  preventDefault() {\n    throw new Error('preventDefault cannot be called');\n  }\n  /** @deprecated */\n\n\n  stopImmediatePropagation() {\n    throw new Error('stopImmediatePropagation cannot be called');\n  }\n  /** @deprecated */\n\n\n  stopPropagation() {\n    throw new Error('stopPropagation cannot be called');\n  }\n\n}\n\n_RegisterWalletEvent_detail = new WeakMap();\n/**\n * @deprecated Use {@link registerWallet} instead.\n *\n * @group Deprecated\n */\n\nexport function DEPRECATED_registerWallet(wallet) {\n  var _a;\n\n  registerWallet(wallet);\n\n  try {\n    ((_a = window.navigator).wallets || (_a.wallets = [])).push(_ref3 => {\n      let {\n        register: register\n      } = _ref3;\n      return register(wallet);\n    });\n  } catch (error) {\n    console.error('window.navigator.wallets could not be pushed\\n', error);\n  }\n}","map":{"version":3,"sources":["../../src/register.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAQA;;;;;;;;;;;;;;;AAeG;;;AACH,OAAM,SAAU,cAAV,CAAyB,MAAzB,EAAuC;EACzC,MAAM,QAAQ,GAAsC;IAAA,IAAC;MAAE,QAAQ,EAAR;IAAF,CAAD;IAAA,OAAkB,QAAQ,CAAC,MAAD,CAA1B;EAAA,CAApD;;EACA,IAAI;IACC,MAA6B,CAAC,aAA9B,CAA4C,IAAI,mBAAJ,CAAwB,QAAxB,CAA5C;EACJ,CAFD,CAEE,OAAO,KAAP,EAAc;IACZ,OAAO,CAAC,KAAR,CAAc,iEAAd,EAAiF,KAAjF;EACH;;EACD,IAAI;IACC,MAA6B,CAAC,gBAA9B,CAA+C,2BAA/C,EAA4E;MAAA,IAAC;QAAE,MAAM,EAAE;MAAV,CAAD;MAAA,OACzE,QAAQ,CAAC,GAAD,CADiE;IAAA,CAA5E;EAGJ,CAJD,CAIE,OAAO,KAAP,EAAc;IACZ,OAAO,CAAC,KAAR,CAAc,+DAAd,EAA+E,KAA/E;EACH;AACJ;;AAED,MAAM,mBAAN,SAAkC,KAAlC,CAAuC;EAWnC,WAAA,CAAY,QAAZ,EAAuD;IACnD,MAAM,iCAAN,EAAyC;MACrC,OAAO,EAAE,KAD4B;MAErC,UAAU,EAAE,KAFyB;MAGrC,QAAQ,EAAE;IAH2B,CAAzC;;IAXJ,2BAAA,CAAA,GAAA,CAAA,IAAA,EAAA,KAAA,CAAA;;IAgBI,sBAAA,CAAA,IAAA,EAAI,2BAAJ,EAAe,QAAf,EAAuB,GAAvB,CAAA;EACH;;EAfS,IAAN,MAAM,GAAA;IACN,OAAO,sBAAA,CAAA,IAAA,EAAI,2BAAJ,EAAI,GAAJ,CAAP;EACH;;EAEO,IAAJ,IAAI,GAAA;IACJ,OAAO,iCAAP;EACH;EAWD;;;EACA,cAAc,GAAA;IACV,MAAM,IAAI,KAAJ,CAAU,iCAAV,CAAN;EACH;EAED;;;EACA,wBAAwB,GAAA;IACpB,MAAM,IAAI,KAAJ,CAAU,2CAAV,CAAN;EACH;EAED;;;EACA,eAAe,GAAA;IACX,MAAM,IAAI,KAAJ,CAAU,kCAAV,CAAN;EACH;;AAjCkC;;;AAoCvC;;;;AAIG;;AACH,OAAM,SAAU,yBAAV,CAAoC,MAApC,EAAkD;;;EACpD,cAAc,CAAC,MAAD,CAAd;;EACA,IAAI;IACA,CAAA,CAAA,EAAA,GAAE,MAAmC,CAAC,SAAtC,EAAgD,OAAhD,KAAuD,EAAA,CAAP,OAAO,GAAK,EAA5D,CAAA,EAAgE,IAAhE,CAAqE;MAAA,IAAC;QAAE,QAAQ,EAAR;MAAF,CAAD;MAAA,OAAkB,QAAQ,CAAC,MAAD,CAA1B;IAAA,CAArE;EACH,CAFD,CAEE,OAAO,KAAP,EAAc;IACZ,OAAO,CAAC,KAAR,CAAc,gDAAd,EAAgE,KAAhE;EACH;AACJ","sourceRoot":"","sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _RegisterWalletEvent_detail;\n/**\n * Register a {@link \"@wallet-standard/base\".Wallet} as a Standard Wallet with the app.\n *\n * This dispatches a {@link \"@wallet-standard/base\".WindowRegisterWalletEvent} to notify the app that the Wallet is\n * ready to be registered.\n *\n * This also adds a listener for {@link \"@wallet-standard/base\".WindowAppReadyEvent} to listen for a notification from\n * the app that the app is ready to register the Wallet.\n *\n * This combination of event dispatch and listener guarantees that the Wallet will be registered synchronously as soon\n * as the app is ready whether the Wallet loads before or after the app.\n *\n * @param wallet Wallet to register.\n *\n * @group Wallet\n */\nexport function registerWallet(wallet) {\n    const callback = ({ register }) => register(wallet);\n    try {\n        window.dispatchEvent(new RegisterWalletEvent(callback));\n    }\n    catch (error) {\n        console.error('wallet-standard:register-wallet event could not be dispatched\\n', error);\n    }\n    try {\n        window.addEventListener('wallet-standard:app-ready', ({ detail: api }) => callback(api));\n    }\n    catch (error) {\n        console.error('wallet-standard:app-ready event listener could not be added\\n', error);\n    }\n}\nclass RegisterWalletEvent extends Event {\n    constructor(callback) {\n        super('wallet-standard:register-wallet', {\n            bubbles: false,\n            cancelable: false,\n            composed: false,\n        });\n        _RegisterWalletEvent_detail.set(this, void 0);\n        __classPrivateFieldSet(this, _RegisterWalletEvent_detail, callback, \"f\");\n    }\n    get detail() {\n        return __classPrivateFieldGet(this, _RegisterWalletEvent_detail, \"f\");\n    }\n    get type() {\n        return 'wallet-standard:register-wallet';\n    }\n    /** @deprecated */\n    preventDefault() {\n        throw new Error('preventDefault cannot be called');\n    }\n    /** @deprecated */\n    stopImmediatePropagation() {\n        throw new Error('stopImmediatePropagation cannot be called');\n    }\n    /** @deprecated */\n    stopPropagation() {\n        throw new Error('stopPropagation cannot be called');\n    }\n}\n_RegisterWalletEvent_detail = new WeakMap();\n/**\n * @deprecated Use {@link registerWallet} instead.\n *\n * @group Deprecated\n */\nexport function DEPRECATED_registerWallet(wallet) {\n    var _a;\n    registerWallet(wallet);\n    try {\n        ((_a = window.navigator).wallets || (_a.wallets = [])).push(({ register }) => register(wallet));\n    }\n    catch (error) {\n        console.error('window.navigator.wallets could not be pushed\\n', error);\n    }\n}\n//# sourceMappingURL=register.js.map"]},"metadata":{},"sourceType":"module"}