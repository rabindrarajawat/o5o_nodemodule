{"ast":null,"code":"/** Base class for errors */\nexport class TokenError extends Error {\n  constructor(message) {\n    super(message);\n  }\n\n}\n/** Thrown if an account is not found at the expected address */\n\nexport class TokenAccountNotFoundError extends TokenError {\n  constructor() {\n    super(...arguments);\n    this.name = 'TokenAccountNotFoundError';\n  }\n\n}\n/** Thrown if a program state account is not a valid Account */\n\nexport class TokenInvalidAccountError extends TokenError {\n  constructor() {\n    super(...arguments);\n    this.name = 'TokenInvalidAccountError';\n  }\n\n}\n/** Thrown if a program state account is not owned by the expected token program */\n\nexport class TokenInvalidAccountOwnerError extends TokenError {\n  constructor() {\n    super(...arguments);\n    this.name = 'TokenInvalidAccountOwnerError';\n  }\n\n}\n/** Thrown if the byte length of an program state account doesn't match the expected size */\n\nexport class TokenInvalidAccountSizeError extends TokenError {\n  constructor() {\n    super(...arguments);\n    this.name = 'TokenInvalidAccountSizeError';\n  }\n\n}\n/** Thrown if the mint of a token account doesn't match the expected mint */\n\nexport class TokenInvalidMintError extends TokenError {\n  constructor() {\n    super(...arguments);\n    this.name = 'TokenInvalidMintError';\n  }\n\n}\n/** Thrown if the owner of a token account doesn't match the expected owner */\n\nexport class TokenInvalidOwnerError extends TokenError {\n  constructor() {\n    super(...arguments);\n    this.name = 'TokenInvalidOwnerError';\n  }\n\n}\n/** Thrown if the owner of a token account is a PDA (Program Derived Address) */\n\nexport class TokenOwnerOffCurveError extends TokenError {\n  constructor() {\n    super(...arguments);\n    this.name = 'TokenOwnerOffCurveError';\n  }\n\n}\n/** Thrown if an instruction's program is invalid */\n\nexport class TokenInvalidInstructionProgramError extends TokenError {\n  constructor() {\n    super(...arguments);\n    this.name = 'TokenInvalidInstructionProgramError';\n  }\n\n}\n/** Thrown if an instruction's keys are invalid */\n\nexport class TokenInvalidInstructionKeysError extends TokenError {\n  constructor() {\n    super(...arguments);\n    this.name = 'TokenInvalidInstructionKeysError';\n  }\n\n}\n/** Thrown if an instruction's data is invalid */\n\nexport class TokenInvalidInstructionDataError extends TokenError {\n  constructor() {\n    super(...arguments);\n    this.name = 'TokenInvalidInstructionDataError';\n  }\n\n}\n/** Thrown if an instruction's type is invalid */\n\nexport class TokenInvalidInstructionTypeError extends TokenError {\n  constructor() {\n    super(...arguments);\n    this.name = 'TokenInvalidInstructionTypeError';\n  }\n\n}\n/** Thrown if the program does not support the desired instruction */\n\nexport class TokenUnsupportedInstructionError extends TokenError {\n  constructor() {\n    super(...arguments);\n    this.name = 'TokenUnsupportedInstructionError';\n  }\n\n}","map":{"version":3,"sources":["../../src/errors.ts"],"names":[],"mappings":"AAAA;AACA,OAAM,MAAgB,UAAhB,SAAmC,KAAnC,CAAwC;EAC1C,WAAA,CAAY,OAAZ,EAA4B;IACxB,MAAM,OAAN;EACH;;AAHyC;AAM9C;;AACA,OAAM,MAAO,yBAAP,SAAyC,UAAzC,CAAmD;EAAzD,WAAA,GAAA;;IACI,KAAA,IAAA,GAAO,2BAAP;EACH;;AAFwD;AAIzD;;AACA,OAAM,MAAO,wBAAP,SAAwC,UAAxC,CAAkD;EAAxD,WAAA,GAAA;;IACI,KAAA,IAAA,GAAO,0BAAP;EACH;;AAFuD;AAIxD;;AACA,OAAM,MAAO,6BAAP,SAA6C,UAA7C,CAAuD;EAA7D,WAAA,GAAA;;IACI,KAAA,IAAA,GAAO,+BAAP;EACH;;AAF4D;AAI7D;;AACA,OAAM,MAAO,4BAAP,SAA4C,UAA5C,CAAsD;EAA5D,WAAA,GAAA;;IACI,KAAA,IAAA,GAAO,8BAAP;EACH;;AAF2D;AAI5D;;AACA,OAAM,MAAO,qBAAP,SAAqC,UAArC,CAA+C;EAArD,WAAA,GAAA;;IACI,KAAA,IAAA,GAAO,uBAAP;EACH;;AAFoD;AAIrD;;AACA,OAAM,MAAO,sBAAP,SAAsC,UAAtC,CAAgD;EAAtD,WAAA,GAAA;;IACI,KAAA,IAAA,GAAO,wBAAP;EACH;;AAFqD;AAItD;;AACA,OAAM,MAAO,uBAAP,SAAuC,UAAvC,CAAiD;EAAvD,WAAA,GAAA;;IACI,KAAA,IAAA,GAAO,yBAAP;EACH;;AAFsD;AAIvD;;AACA,OAAM,MAAO,mCAAP,SAAmD,UAAnD,CAA6D;EAAnE,WAAA,GAAA;;IACI,KAAA,IAAA,GAAO,qCAAP;EACH;;AAFkE;AAInE;;AACA,OAAM,MAAO,gCAAP,SAAgD,UAAhD,CAA0D;EAAhE,WAAA,GAAA;;IACI,KAAA,IAAA,GAAO,kCAAP;EACH;;AAF+D;AAIhE;;AACA,OAAM,MAAO,gCAAP,SAAgD,UAAhD,CAA0D;EAAhE,WAAA,GAAA;;IACI,KAAA,IAAA,GAAO,kCAAP;EACH;;AAF+D;AAIhE;;AACA,OAAM,MAAO,gCAAP,SAAgD,UAAhD,CAA0D;EAAhE,WAAA,GAAA;;IACI,KAAA,IAAA,GAAO,kCAAP;EACH;;AAF+D;AAIhE;;AACA,OAAM,MAAO,gCAAP,SAAgD,UAAhD,CAA0D;EAAhE,WAAA,GAAA;;IACI,KAAA,IAAA,GAAO,kCAAP;EACH;;AAF+D","sourceRoot":"","sourcesContent":["/** Base class for errors */\nexport class TokenError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n/** Thrown if an account is not found at the expected address */\nexport class TokenAccountNotFoundError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenAccountNotFoundError';\n    }\n}\n/** Thrown if a program state account is not a valid Account */\nexport class TokenInvalidAccountError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountError';\n    }\n}\n/** Thrown if a program state account is not owned by the expected token program */\nexport class TokenInvalidAccountOwnerError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountOwnerError';\n    }\n}\n/** Thrown if the byte length of an program state account doesn't match the expected size */\nexport class TokenInvalidAccountSizeError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountSizeError';\n    }\n}\n/** Thrown if the mint of a token account doesn't match the expected mint */\nexport class TokenInvalidMintError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidMintError';\n    }\n}\n/** Thrown if the owner of a token account doesn't match the expected owner */\nexport class TokenInvalidOwnerError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidOwnerError';\n    }\n}\n/** Thrown if the owner of a token account is a PDA (Program Derived Address) */\nexport class TokenOwnerOffCurveError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenOwnerOffCurveError';\n    }\n}\n/** Thrown if an instruction's program is invalid */\nexport class TokenInvalidInstructionProgramError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionProgramError';\n    }\n}\n/** Thrown if an instruction's keys are invalid */\nexport class TokenInvalidInstructionKeysError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionKeysError';\n    }\n}\n/** Thrown if an instruction's data is invalid */\nexport class TokenInvalidInstructionDataError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionDataError';\n    }\n}\n/** Thrown if an instruction's type is invalid */\nexport class TokenInvalidInstructionTypeError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionTypeError';\n    }\n}\n/** Thrown if the program does not support the desired instruction */\nexport class TokenUnsupportedInstructionError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenUnsupportedInstructionError';\n    }\n}\n//# sourceMappingURL=errors.js.map"]},"metadata":{},"sourceType":"module"}