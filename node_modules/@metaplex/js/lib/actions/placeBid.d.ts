import BN from 'bn.js';
import { PublicKey } from '@solana/web3.js';
import { Wallet } from '../wallet';
import { Connection } from '../Connection';
import { TransactionsBatch } from '../utils/transactions-batch';
interface IPlaceBidParams {
    connection: Connection;
    wallet: Wallet;
    auction: PublicKey;
    bidderPotToken?: PublicKey;
    amount: BN;
}
interface IPlaceBidResponse {
    txId: string;
}
export declare const placeBid: ({ connection, wallet, amount, auction, bidderPotToken, }: IPlaceBidParams) => Promise<IPlaceBidResponse>;
interface IPlaceBidTransactionsParams {
    bidder: PublicKey;
    accountRentExempt: number;
    bidderPot: PublicKey;
    bidderPotToken?: PublicKey;
    bidderMeta: PublicKey;
    auction: PublicKey;
    auctionExtended: PublicKey;
    auctionTokenMint: PublicKey;
    vault: PublicKey;
    amount: BN;
}
export declare const getPlaceBidTransactions: ({ accountRentExempt, bidder, auctionTokenMint, vault, auction, auctionExtended, bidderPot, bidderPotToken, bidderMeta, amount, }: IPlaceBidTransactionsParams) => Promise<TransactionsBatch>;
export {};
